========================================================================================================
===  Tidy report for :C:\Users\bauer\Documents\GitHub\Brauckhoff\src\akk.au3
========================================================================================================

00001    #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_Version=Beta
00003    #AutoIt3Wrapper_Icon=icons\MyAutoIt3_Green.ico
00004    #AutoIt3Wrapper_Outfile=..\bin\akk.exe
00005    #AutoIt3Wrapper_UseX64=n
00006    #AutoIt3Wrapper_Res_Comment=Hallo Werner!
00007    #AutoIt3Wrapper_Res_Description=Akk Brauckhoff Bot
00008    #AutoIt3Wrapper_Res_Fileversion=1.0.0.117
00009    #AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
00010    #AutoIt3Wrapper_Res_ProductName=Akk Brauckhoff Bot
00011    #AutoIt3Wrapper_Res_CompanyName=Sliph Co.
00012    #AutoIt3Wrapper_Res_LegalCopyright=Searinox
00013    #AutoIt3Wrapper_Res_LegalTradeMarks=Akk
00014    #AutoIt3Wrapper_Res_SaveSource=y
00015    #AutoIt3Wrapper_Res_Language=1031
00016    #AutoIt3Wrapper_Res_Field=Made By|Searinox
00017    #AutoIt3Wrapper_Run_AU3Check=n
00018    #AutoIt3Wrapper_AU3Check_Stop_OnWarning=y
00019    #Autoit3wrapper_Jump_to_First_Error=n
00020    #AutoIt3Wrapper_AU3Check_Parameters=-q -d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -v 1
00021    #AutoIt3Wrapper_Run_Before=call "..\compile\before.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00022    #AutoIt3Wrapper_Run_After=call "..\compile\after.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00023    #AutoIt3Wrapper_Run_Tidy=y
00024    #Tidy_Parameters=/tc 4 /gd /reel /sci 1 /kv 0 /bdir "tidy\bdir\" /sf /ewnl
00025    #AutoIt3Wrapper_Run_Au3Stripper=y
00026    #Au3Stripper_Parameters=/tl /debug /pe /mi=99 /rm /rsln /Beta
00027    #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
00028    #cs ----------------------------------------------------------------------------
00029       
00030    #ce ----------------------------------------------------------------------------
00031    ;~ #include <AutoItConstants.au3>
00032    ;~ #include <MsgBoxConstants.au3>
00033    ;~ #include <FileConstants.au3>
00034    ;~ #include <TrayConstants.au3>
00035    #include <ScreenCapture.au3>
00036    #include "udf\ArrayEx.au3"
00037    #include <WinAPISys.au3>
00038    #include <EventLog.au3>
00039    #include "udf\Ini.au3"
00040    #include "udf\Map.au3"
00041    #include <Timers.au3>
00042    #include <Debug.au3>
00043    #include <Array.au3>
00044    #include <Date.au3>
00045    #include <File.au3>
00046    #include <Inet.au3>
00047    #include <Misc.au3>
00048    #Region - Options
00049    ;~ Opt('CaretCoordMode', 0)				; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.
00050    ;~ Opt('ExpandEnvStrings', 1)			; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).
00051    Opt('ExpandVarStrings', 1) ; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).
00052    ;~ Opt('FtpBinaryMode', 0)				; 1 = Binary transfer, 0 = ASCII transfer.
00053    ;~ Opt('GUICloseOnESC', 0)				; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).
00054    ; 										  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.
00055    ;~ Opt('GUICoordMode', 2)				; 1 = Absolute coordinates still relative to the dialog box.
00056    ; 										  0 = Relative position to the start of the last control (Upper left corner).
00057    ; 										  2 = Cell positionining relative to current cell.
00058    ;~ Opt('GUIDataSeparatorChar', '')		; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is ''.
00059    ;~ Opt('GUIEventOptions', 1)			; 0 = Windows behavior on click on Minimize, Restore and Maximize.
00060    ;										  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.
00061    ;										  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.
00062    ;										  3 = Combined mode of 1 & 2.
00063    ;~ Opt('GUIOnEventMode', 1)				; 0 = Disable, 1 = Enable.
00064    ;~ Opt('GUIResizeMode', 1)				; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).
00065    ;~ Opt('MouseClickDelay', 10)			; ? = 10 milliseconds by default.
00066    ;~ Opt('MouseClickDownDelay', 10)		; ? = 10 milliseconds by default.
00067    ;~ Opt('MouseClickDragDelay', 250)		; ? = 250 milliseconds by default.
00068    ;~ Opt('MouseCoordMode', 0)				; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.
00069    Opt('MustDeclareVars', 1) ; 0 = No, 1 = Require pre-declare.
00070    ;~ Opt('OnExitFunc', '')				; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).
00071    ;~ Opt('PixelCoordMode', 2)                ; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.
00072    ;~ Opt('SendAttachMode', 1)				; 0 = Don't attach, 1 = Attach.
00073    ;~ Opt('SendCapslockMode', 0)			; 1 = Store and restore, 0 = Don't store / restore.
00074    ;~ Opt('SendKeyDelay', 5)				; ? = 5 milliseconds by default.
00075    ;~ Opt('SendKeyDownDelay', 1)			; ? = 1 millisecond by default.
00076    ;~ Opt('TCPTimeout', 100)				; ? = 100 milliseconds by default.
00077    Opt('TrayAutoPause', 0) ; 1 = AutoPausing is On, 0 = AutoPausing is Off.
00078    ;~ Opt('TrayIconDebug', 1)				; 0 = No info, 1 = Debug line info.
00079    ;~ Opt('TrayIconHide', 1)				; 0 = Show, 1 = Hide.
00080    ;~ Opt('TrayMenuMode', 1)				; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,
00081    ;											user created checked items will automatically unchecked, if you double click the tray
00082    ;											icon then the controlid is returned which has the "Default"-style.
00083    ;										  1 = No default menu.
00084    ;										  2 = User created checked items will not automatically unchecked if you click it.
00085    ;										  4 = Don't return the menuitemID which has the "default"-style in
00086    ;											the main contextmenu if you double click the tray icon.
00087    ;~ Opt('TrayOnEventMode', 1)			; 0 = disable, 1 = enable.
00088    ;~ Opt('WinDetectHiddenText', 1)		; 0 = Don't detect, 1=Do detect.
00089    ;~ Opt('WinSearchChildren', 1)			; 0 = No, 1 = Search children also.
00090    ;~ Opt('WinTextMatchMode', 4)			; 1 = Complete / Slow mode, 2 = Quick mode.
00091    ;~ Opt('WinTitleMatchMode', 4)			; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.
00092    ;~ Opt('WinWaitDelay', 250)				; ? = 250 milliseconds by default.
00093    #EndRegion - Options
00094    ConsoleWrite(@CRLF)
00095    #Region Globals 1
00096    Global Const $T1 = 15e3
00097    Global Const $T2 = 15e3
00098    Global Const $MsgBoxTimeout = 60 * 5
00099    Global Const $TrayTipTimeout = 15
00100    Global $Cycle = 0
00101    Global $StartTimer = TimerInit()
00102    Global $Timer1 = $StartTimer
00103    Global $Timer2 = $StartTimer
00104    Global $Timer3 = $StartTimer
00105    Global $Timer4 = $StartTimer
00106    Global $Timer5 = $StartTimer
00107    Global $Timer6 = $StartTimer
00108    Global $Timer7 = $StartTimer
00109    Global $Timer8 = $StartTimer
00110    Global Const $IntMin = 0x8000000000000000
00111    Global Const $IntMax = 0x7FFFFFFFFFFFFFFF
00112    Global Const $ComputerName = StringReplace(StringFormat("%-16s", @ComputerName), " ", ".")
00113    Global Const $AkkVersion = FileGetVersion(@ScriptFullPath)
00114    Global Const $ScreenCaptureWnd = False
00115    Global Const $ScreenCaptureWinActivate = False
00116    Global $NetPhoneUserChecksum = ""
00117    Global $NetPhoneUser
00118    Global $ActiveWinTitle
00119    Global $hWndActivePid
00120    
00121    Global Const $SpawnFileName = "ShadowSpawn.exe"
00122    Global Const $SpawnDir = @MyDocumentsDir & "\Isopedia GmbH\ShadowSpawn\"
00123    Global Const $SpawnPath = $SpawnDir & $SpawnFileName
00124    Global Const $SpawnExists = FileExists($SpawnPath)
00125    
00126    Global Const $KPSInfoFileName = "KPSInfo.exe"
00127    Global Const $KPSInfoDir = @ProgramFilesDir & "\KPS designstudio\KPSInfo\"
00128    Global Const $KPSInfoPath = $KPSInfoDir & $KPSInfoFileName
00129    Global Const $KPSInfoExists = FileExists($KPSInfoPath)
00130    
00131    Global Const $PowerkatalogFileName = "Powerkatalog-Schnittstelle.exe"
00132    Global Const $PowerkatalogDir = @ProgramFilesDir & "\KPS designstudio\Powerkatalog-Schnittstelle\"
00133    Global Const $PowerkatalogPath = $PowerkatalogDir & $PowerkatalogFileName
00134    Global Const $PowerkatalogExists = FileExists($PowerkatalogPath)
00135    
00136    Global Const $SHDUpdaterFileName = "SHDUpdater_min.exe"
00137    Global Const $SHDUpdaterDir = @ProgramFilesDir & "\SHDUpdater\"
00138    Global Const $SHDUpdaterPath = $SHDUpdaterDir & $SHDUpdaterFileName
00139    Global Const $SHDUpdaterExists = FileExists($SHDUpdaterPath)
00140    
00141    Global Const $NetPhoneClientFileName = "NetPhone Client.exe"
00142    Global Const $NetPhoneClientDir = @ProgramFilesDir & "\NetPhone Client\"
00143    Global Const $NetPhoneClientPath = $NetPhoneClientDir & $NetPhoneClientFileName
00144    Global Const $NetPhoneClientExists = FileExists($NetPhoneClientPath)
00145    
00146    Global Const $EcoroKpsButlerFileName = "ppRemoteEcoroTray.exe"
00147    Global Const $EcoroKpsButlerDir = @ProgramFilesDir & "\SHD Ecoro-KPS-Butler\"
00148    Global Const $EcoroKpsButlerPath = $EcoroKpsButlerDir & $EcoroKpsButlerFileName
00149    Global Const $EcoroKpsButlerExists = FileExists($EcoroKpsButlerPath)
00150    #EndRegion Globals 1
00151    #Region Globals 2
00152    Global Const $RootFileName = ""
00153    Global Const $RootDir = "\\172.16.128.4\edv\Gerrit\"
00154    ;~ Global Const $RootDir = "C:\Users\Searinox\Downloads\Untitled Folder\Gerrit\"
00155    Global Const $RootPath = $RootDir & $RootFileName
00156    Global Const $RootExists = FileExists($RootPath)
00157    
00158    Global Const $AkkRootFileName = ""
00159    Global Const $AkkRootDir = $RootDir & "akk\"
00160    Global Const $AkkRootPath = $AkkRootDir & $AkkRootFileName
00161    Global Const $AkkRootExists = FileExists($AkkRootPath)
00162    
00163    Global Const $AkkFileName = "akk.exe"
00164    Global Const $AkkDir = @ScriptDir & "\"
00165    Global Const $AkkPath = $AkkDir & $AkkFileName
00166    Global Const $AkkExists = FileExists($AkkPath)
00167    
00168    Global Const $AkkNetFileName = $AkkFileName
00169    Global Const $AkkNetDir = $RootDir
00170    Global Const $AkkNetPath = $AkkNetDir & $AkkNetFileName
00171    Global Const $AkkNetExists = FileExists($AkkNetPath)
00172    
00173    Global Const $AkkUpdaterFileName = "akkUpdater.exe"
00174    Global Const $AkkUpdaterDir = $AkkDir
00175    Global Const $AkkUpdaterPath = $AkkUpdaterDir & $AkkUpdaterFileName
00176    Global $AkkUpdaterExists = FileExists($AkkUpdaterPath)
00177    
00178    Global Const $AkkUpdaterNetFileName = $AkkUpdaterFileName
00179    Global Const $AkkUpdaterNetDir = $RootDir
00180    Global Const $AkkUpdaterNetPath = $AkkUpdaterNetDir & $AkkUpdaterNetFileName
00181    Global Const $AkkUpdaterNetExists = FileExists($AkkUpdaterNetPath)
00182    
00183    Global Const $IniLocalFileName = "akk.ini"
00184    Global Const $IniLocalDir = $AkkDir
00185    Global Const $IniLocalPath = $IniLocalDir & $IniLocalFileName
00186    Global Const $IniLocalExists = FileExists($IniLocalPath)
00187    
00188    Global Const $IniGlobalFileName = "akkGlobalConfig.ini"
00189    Global Const $IniGlobalDir = $AkkDir
00190    Global Const $IniGlobalPath = $IniGlobalDir & $IniGlobalFileName
00191    Global $IniGlobalExists = FileExists($IniGlobalPath)
00192    
00193    Global Const $IniGlobalNetFileName = $IniGlobalFileName
00194    Global Const $IniGlobalNetDir = $AkkRootDir
00195    Global Const $IniGlobalNetPath = $IniGlobalNetDir & $IniGlobalNetFileName
00196    Global Const $IniGlobalNetExists = FileExists($IniGlobalNetPath)
00197    
00198    Global Const $IniGlobalExFileName = "akkGlobalConfigExtended.ini"
00199    Global Const $IniGlobalExDir = $IniGlobalDir
00200    Global Const $IniGlobalExPath = $IniGlobalExDir & $IniGlobalExFileName
00201    Global $IniGlobalExExists = FileExists($IniGlobalExPath)
00202    
00203    Global Const $IniGlobalExNetFileName = $IniGlobalExFileName
00204    Global Const $IniGlobalExNetDir = $AkkRootDir
00205    Global Const $IniGlobalExNetPath = $IniGlobalExNetDir & $IniGlobalExNetFileName
00206    Global Const $IniGlobalExNetExists = FileExists($IniGlobalExNetPath)
00207    
00208    Global $LogFileID
00209    
00210    Global $LogFileName = ""
00211    Global Const $LogDir = $AkkDir & "log\"
00212    Global $LogPath = $LogDir & $LogFileName
00213    Global $LogExists = FileExists($LogPath)
00214    If Not FileExists($LogDir) Then DirCreate($LogDir)
00215    
00216    Global $LogNetFileName = ""
00217    Global Const $LogNetDir = $AkkRootDir & "log\" & @ComputerName & "\"
00218    Global $LogNetPath = $LogNetDir & $LogNetFileName
00219    Global $LogNetExists = FileExists($LogNetPath)
00220    If Not FileExists($LogNetDir) Then DirCreate($LogNetDir)
00221    
00222    Global $LogGlobalNetFileName = "akkGlobal.log"
00223    Global Const $LogGlobalNetDir = $AkkRootDir & "log\"
00224    Global $LogGlobalNetPath = $LogGlobalNetDir & $LogGlobalNetFileName
00225    Global $LogGlobalNetExists = FileExists($LogGlobalNetPath)
00226    
00227    Global $LogArchiveNetFileName = ""
00228    Global Const $LogArchiveNetDir = $AkkRootDir & "log\_archive\"
00229    Global $LogArchiveNetPath = $LogArchiveNetDir & $LogArchiveNetFileName
00230    Global $LogArchiveNetExists = FileExists($LogArchiveNetPath)
00231    If Not FileExists($LogArchiveNetDir) Then DirCreate($LogArchiveNetDir)
00232    
00233    Global Const $IniGlobalNetLogFileName = "akkGlobal.ini"
00234    Global Const $IniGlobalNetLogDir = $AkkRootDir & "log\"
00235    Global Const $IniGlobalNetLogPath = $IniGlobalNetLogDir & $IniGlobalNetLogFileName
00236    Global Const $IniGlobalNetLogExists = FileExists($IniGlobalNetLogPath)
00237    
00238    Global Const $LogSpawnStatsNetFileName = "akkGlobalSpawnStats.ini"
00239    Global Const $LogSpawnStatsNetDir = $AkkRootDir & "log\"
00240    Global Const $LogSpawnStatsNetPath = $LogSpawnStatsNetDir & $LogSpawnStatsNetFileName
00241    Global Const $LogSpawnStatsNetExists = FileExists($LogSpawnStatsNetPath)
00242    
00243    Global Const $IniGlobalNetLogInstanceFileName = "akkMacro.ini"
00244    Global Const $IniGlobalNetLogInstanceDir = $LogNetDir
00245    Global Const $IniGlobalNetLogInstancePath = $IniGlobalNetLogInstanceDir & $IniGlobalNetLogInstanceFileName
00246    Global Const $IniGlobalNetLogInstanceExists = FileExists($IniGlobalNetLogInstancePath)
00247    
00248    Global Const $LogScrapeFileName = "scrape.prom"
00249    Global Const $LogScrapeDir = $AkkDir & "log\"
00250    Global Const $LogScrapePath = $LogScrapeDir & $LogScrapeFileName
00251    Global Const $LogScrapeExists = FileExists($LogScrapePath)
00252    
00253    Global Const $LogScrapeNetFileName = "scrape.prom"
00254    Global Const $LogScrapeNetDir = $LogNetDir
00255    Global Const $LogScrapeNetPath = $LogScrapeNetDir & $LogScrapeNetFileName
00256    Global Const $LogScrapeNetExists = FileExists($LogScrapeNetPath)
00257    
00258    Global Const $LogScreenCapFileName = ""
00259    Global Const $LogScreenCapDir = $AkkDir & "log\sc\"
00260    Global Const $LogScreenCapPath = $LogScreenCapDir & $LogScreenCapFileName
00261    Global Const $LogScreenCapExists = FileExists($LogScreenCapPath)
00262    If Not FileExists($LogScreenCapDir) Then DirCreate($LogScreenCapDir)
00263    
00264    Global Const $LogScreenCapNetFileName = ""
00265    Global Const $LogScreenCapNetDir = $AkkRootDir & "log\_sc\NetPhoneUser\"
00266    Global Const $LogScreenCapNetPath = $LogScreenCapNetDir & $LogScreenCapNetFileName
00267    Global Const $LogScreenCapNetExists = FileExists($LogScreenCapNetPath)
00268    If Not FileExists($LogScreenCapNetDir) Then DirCreate($LogScreenCapNetDir)
00269    
00270    Global Const $DownloadsDir = @UserProfileDir & "\Downloads"
00271    Global Const $DownloadsOldDir = $DownloadsDir & " alt"
00272    
00273    Global Const $ArrayDelimItem = "|"
00274    Global $MacroAutoIt[1][2]
00275    Global $MacroDirectory[1][2]
00276    Global $MacroSystemInfo[1][2]
00277    #EndRegion Globals 2
00278    #Region Globals SMTP
00279    Global $SmtpMailSmtpServer = ""
00280    Global Const $SmtpMailEHLO = @ComputerName
00281    Global Const $SmtpMailFirst = -1
00282    Global Const $SmtpMailTrace = 0
00283    
00284    Global $LowSpaceThresholdPerc
00285    Global $MailAddresses[10][2]
00286    #EndRegion Globals SMTP
00287    #Region Globals Prometheus WMI Exporter
00288    Global $hDownload = 0
00289    Global $ScrapeComplete = 1
00290    Global $IdleTime = 0
00291    
00292    Global $EventLogFull
00293    Global $EventLogCount
00294    Global $EventLogOldest
00295    
00296    Global Const $ExactFileFileName = "exf.exe"
00297    Global Const $ExactFileDir = @HomeDrive & "\Brauckhoff\akk\" ;@SCRIPTDIR?
00298    Global Const $ExactFilePath = $ExactFileDir & $ExactFileFileName
00299    Global $ExactFileExists = FileExists($ExactFilePath)
00300    
00301    Global Const $ExactFileNetFileName = $ExactFileFileName
00302    Global Const $ExactFileNetDir = $AkkRootDir
00303    Global Const $ExactFileNetPath = $ExactFileNetDir & $ExactFileNetFileName
00304    Global Const $ExactFileNetExists = FileExists($ExactFileNetPath)
00305    
00306    Global Const $WmiExporterLocalFileName = "wmi_exporter.exe"
00307    Global Const $WmiExporterLocalDir = @HomeDrive & "\Brauckhoff\wmi_exporter\" ;@SCRIPTDIR?
00308    Global Const $WmiExporterLocalPath = $WmiExporterLocalDir & $WmiExporterLocalFileName
00309    Global $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00310    
00311    Global Const $WmiExporterX32GlobalNetSetupFileName = "wmi_exporter-0.8.3-386.exe"
00312    Global Const $WmiExporterX32GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00313    Global Const $WmiExporterX32GlobalNetSetupPath = $WmiExporterX32GlobalNetSetupDir & $WmiExporterX32GlobalNetSetupFileName
00314    Global Const $WmiExporterX32GlobalNetSetupExists = FileExists($WmiExporterX32GlobalNetSetupPath)
00315    
00316    Global Const $WmiExporterX64GlobalNetSetupFileName = "wmi_exporter-0.8.3-amd64.exe"
00317    Global Const $WmiExporterX64GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00318    Global Const $WmiExporterX64GlobalNetSetupPath = $WmiExporterX64GlobalNetSetupDir & $WmiExporterX64GlobalNetSetupFileName
00319    Global Const $WmiExporterX64GlobalNetSetupExists = FileExists($WmiExporterX64GlobalNetSetupPath)
00320    
00321    Global Const $WmiExporterCollectorsEnabled = "cpu,cs,logical_disk,memory,net,os,process,service,system,textfile"
00322    ;~          & "" _ ;~ & "ad" _ ; Active Directory Domain Services
00323    ;~          & "" _ ;~ & ",cpu" _ ; CPU usage
00324    ;~          & "cs" _ ; "Computer System" metrics (system properties, num cpus/total memory)
00325    ;~          & "" _ ;~ & ",dns" _ ; DNS Server
00326    ;~          & "" _ ;~ & ",hyperv" _ ; Hyper-V hosts
00327    ;~          & "" _ ;~ & ",iis" _ ; IIS sites and applications
00328    ;~          & ",logical_disk" _ ; Logical disks, disk I/O
00329    ;~          & ",memory" _ ; Memory usage metrics
00330    ;~          & "" _ ;~ & ",msmq" _ ; MSMQ queues
00331    ;~          & "" _ ;~ & ",mssql" _ ; SQL Server Performance Objects metrics
00332    ;~          & "" _ ;~ & ",netframework_clrexceptions" _ ; .NET Framework CLR Exceptions
00333    ;~          & "" _ ;~ & ",netframework_clrinterop" _ ; .NET Framework Interop Metrics
00334    ;~          & "" _ ;~ & ",netframework_clrjit" _ ; .NET Framework JIT metrics
00335    ;~          & "" _ ;~ & ",netframework_clrloading" _ ; .NET Framework CLR Loading metrics
00336    ;~          & "" _ ;~ & ",netframework_clrlocksandthreads" _ ; .NET Framework locks and metrics threads
00337    ;~          & "" _ ;~ & ",netframework_clrmemory" _ ; .NET Framework Memory metrics
00338    ;~          & "" _ ;~ & ",netframework_clrremoting" _ ; .NET Framework Remoting metrics
00339    ;~          & "" _ ;~ & ",netframework_clrsecurity" _ ; .NET Framework Security Check metrics
00340    ;~          & ",net" _ ; Network interface I/O
00341    ;~          & ",os" _ ; OS metrics (memory, processes, users)
00342    ;~          & ",process" _ ; Per-process metrics
00343    ;~          & ",service" _ ; Service state metrics
00344    ;~          & ",system" _ ; System calls
00345    ;~          & "" _ ;~ & ",tcp" _ ; TCP connections
00346    ;~          & ",textfile" _ ; Read prometheus metrics from a text file
00347    ;~          & "" _ ;~ & ",vmware" ; Performance counters installed by the Vmware Guest agent
00348    
00349    Global Const $WmiExporterCollectorTextfileDir = $WmiExporterLocalDir & "textfile_inputs\"
00350    
00351    Global Const $WmiExporterMetadataFileName = "metadata.prom"
00352    Global Const $WmiExporterMetadataDir = $WmiExporterCollectorTextfileDir
00353    Global Const $WmiExporterMetadataPath = $WmiExporterMetadataDir & $WmiExporterMetadataFileName
00354    Global $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00355    
00356    Global Const $PromScrapeTargetsFileName = ""
00357    Global Const $PromScrapeTargetsDir = $AkkRootDir & "prometheus\targets\"
00358    Global Const $PromScrapeTargetsPath = $PromScrapeTargetsDir & $PromScrapeTargetsFileName
00359    Global Const $PromScrapeTargetsExists = FileExists($PromScrapeTargetsPath)
00360    If Not FileExists($PromScrapeTargetsDir) Then DirCreate($PromScrapeTargetsDir)
00361    
00362    Global $WmiExporterMetadataString
00363    
00364    Global Const $WmiExporterParams = '' _
00365                   & ' --log.format logger:eventlog?name=wmi_exporter' _
00366                   & ' --collectors.enabled ' & $WmiExporterCollectorsEnabled _
00367                   & ' --telemetry.addr :9182 ' _
00368                   & ' --collector.textfile.directory ' & $WmiExporterCollectorTextfileDir
00369    #EndRegion Globals Prometheus WMI Exporter
00370    #Region AutoItConstants
00371    ; #CONSTANTS# ===================================================================================================================
00372    ; WinGetState Constants
00373    Global Const $WIN_STATE_EXISTS = 1
00374    Global Const $WIN_STATE_VISIBLE = 2
00375    Global Const $WIN_STATE_ENABLED = 4
00376    Global Const $WIN_STATE_ACTIVE = 8
00377    Global Const $WIN_STATE_MINIMIZED = 16
00378    Global Const $WIN_STATE_MAXIMIZED = 32
00379    ; ===============================================================================================================================
00380    #EndRegion AutoItConstants
00381    #Region MemoryConstants
00382    ; #CONSTANTS# ===================================================================================================================
00383    ; MemGetStats Constants
00384    Global Enum $MEM_LOAD, $MEM_TOTALPHYSRAM, $MEM_AVAILPHYSRAM, $MEM_TOTALPAGEFILE, $MEM_AVAILPAGEFILE, $MEM_TOTALVIRTUAL, $MEM_AVAILVIRTUAL
00385    ; ===============================================================================================================================
00386    #EndRegion MemoryConstants
00387    #Region
00388    _Singleton("akk")
00389    
00390    If @Compiled Then Sleep(5e3)
00391    
00392    ReadLocalConfig()
00393    
00394    ManageLogFile()
00395    
00396    ConsoleLog("akk.exe läuft Spawn, KPSInfo, KPS Butler & WMI Exporter werden überwacht")
00397    ;~ ConsoleLog($SpawnPath)
00398    ;~ ConsoleLog($KPSInfoPath)
00399    ;~ ConsoleLog($WmiExporterLocalPath)
00400    ;~ ConsoleLog("werden überwacht")
00401    If Not @Compiled Then ConsoleLog("$WmiExporterParams: " & $WmiExporterParams)
00402    
00403    GetGlobalConfig()
00404    ReadGlobalConfig()
00405    EventLog()
00406    SetupWmiExporter()
00407    SetupExactFile()
00408    CleaningDownloads()
00409    CheckHomeDriveSpaceFree()
00410    ;~ GetWinList()
00411    ;~ ScreenCaptureWnd()
00412    ScreenCaptureNetPhoneClient()
00413    WriteMetaDataFile()
00414    WriteScrapeTargetFile()
00415    WriteLogStartup()
00416    
00417    If @Compiled Then Sleep(5e3)
00418    
00419  +-While 42
00420  |        Sleep(10)
00421  |  +-    If (Mod($Cycle, 300) == 0) Then
00422  |  |            If Timeout($Timer1, 15e3 * 1) Then Check()
00423  |  |            If Timeout($Timer2, 60e3 * 5) Then GetGlobalConfig()
00424  |  |            If Timeout($Timer3, 60e3 * 5) Then ManageLogFile()
00425  |  |            If Timeout($Timer4, 60e3 * 15) Then Scrape()
00426  |  |    ;~         If Timeout($Timer5, 30e3 * 1) Then EventLog()
00427  |  |            If Timeout($Timer6, 30e3 * 1) Then WriteMetaDataFile()
00428  |  |            If Timeout($Timer7, 60e3 * 15) And _Timer_GetIdleTime() > 60e3 * 2 Then ScreenCaptureNetPhoneClient()
00429  |  +-    EndIf
00430  |        If (Mod($Cycle, 500) == 0) Then ScrapeDownload()
00431  |        $Cycle += 1
00432  +-WEnd
00433    
00434  +-Func _SetVar(ByRef $vVar, $vValue, $iError = @error, $iExtended = @extended)
00435  |        $vVar = $vValue
00436  |        Return SetError($iError, $iExtended, $vVar)
00437  +-EndFunc   ;==>_SetVar
00438    
00439  +-Func ConsoleLog($Text)
00440  |        $Text = StringFormat("%10s", $Cycle) & " : " & $Text
00441  |        ConsoleWrite($Text & @CRLF)
00442  |    ;~     If @OSArch <> "WIN_10" Then TrayTip("", $Text, $TrayTipTimeout, $TIP_ICONEXCLAMATION)
00443  |        _FileWriteLog($LogPath, $Text)
00444  |        _FileWriteLog($LogNetPath, $Text)
00445  |        _FileWriteLog($LogGlobalNetPath, StringFormat("%-16s", @ComputerName) & " " & StringFormat("%-16s", @UserName) & " " & $Text)
00446  +-EndFunc   ;==>ConsoleLog
00447    
00448  +-Func EventLog()
00449  |        Local $hEventLog = _EventLog__Open("", "Application")
00450  |        $EventLogFull = _EventLog__Full($hEventLog)
00451  |        $EventLogCount = _EventLog__Count($hEventLog)
00452  |        $EventLogOldest = _EventLog__Oldest($hEventLog)
00453  |        _EventLog__Close($hEventLog)
00454  +-EndFunc   ;==>EventLog
00455    
00456  +-Func GetGlobalConfig()
00457  |  +-    If $IniGlobalNetExists And Not $IniGlobalExists Then
00458  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00459  |  +-    EndIf
00460  |  +-    If $IniGlobalExNetExists And Not $IniGlobalExExists Then
00461  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00462  |  +-    EndIf
00463  |  +-    If $AkkUpdaterNetExists And Not $AkkUpdaterExists Then
00464  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00465  |  +-    EndIf
00466  |    
00467  |        Local $IniGlobalTime = FileGetTime($IniGlobalPath, $FT_MODIFIED, $FT_STRING)
00468  |        Local $IniGlobalNetTime = FileGetTime($IniGlobalNetPath, $FT_MODIFIED, $FT_STRING)
00469  |  +-    If $IniGlobalTime <> $IniGlobalNetTime Then
00470  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00471  |  |            ConsoleLog("Reload Config " & $IniGlobalNetPath)
00472  |  |            ReadGlobalConfig()
00473  |  +-    EndIf
00474  |    
00475  |        Local $IniGlobalExTime = FileGetTime($IniGlobalExPath, $FT_MODIFIED, $FT_STRING)
00476  |        Local $IniGlobalExNetTime = FileGetTime($IniGlobalExNetPath, $FT_MODIFIED, $FT_STRING)
00477  |  +-    If $IniGlobalExTime <> $IniGlobalExNetTime Then
00478  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00479  |  |            ConsoleLog("Reload Config Ex" & $IniGlobalExNetPath)
00480  |  |            ReadGlobalConfig()
00481  |  |            WriteMetaDataFile()
00482  |  +-    EndIf
00483  |    
00484  |        Local $AkkUpdaterTime = FileGetTime($AkkUpdaterPath, $FT_MODIFIED, $FT_STRING)
00485  |        Local $AkkUpdaterNetTime = FileGetTime($AkkUpdaterNetPath, $FT_MODIFIED, $FT_STRING)
00486  |  +-    If $AkkUpdaterTime <> $AkkUpdaterNetTime And @Compiled Then
00487  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00488  |  |            ConsoleLog("Reload Akk Updater " & $AkkUpdaterNetPath)
00489  |  +-    EndIf
00490  |    
00491  |        Local $AkkTime = FileGetTime($AkkPath, $FT_MODIFIED, $FT_STRING)
00492  |        Local $AkkNetTime = FileGetTime($AkkNetPath, $FT_MODIFIED, $FT_STRING)
00493  |  +-    If $AkkTime <> $AkkNetTime And @Compiled Then
00494  |  |            CheckAndRunProc($AkkUpdaterFileName, $AkkUpdaterDir, $AkkUpdaterPath, $AkkUpdaterExists)
00495  |  |            ConsoleLog("Reload Akk " & $AkkNetPath)
00496  |  +-    EndIf
00497  +-EndFunc   ;==>GetGlobalConfig
00498    
00499  +-Func GetWinList()
00500  |        Local $aList = WinList()
00501  |        Local $ListStates[1][8]
00502  |    ;~     $ListStates[0][0] = "title"
00503  |        $ListStates[0][1] = "hWnd"
00504  |        $ListStates[0][2] = "$WIN_STATE_EXISTS"
00505  |        $ListStates[0][3] = "$WIN_STATE_VISIBLE"
00506  |        $ListStates[0][4] = "$WIN_STATE_ENABLED"
00507  |        $ListStates[0][5] = "$WIN_STATE_ACTIVE"
00508  |        $ListStates[0][6] = "$WIN_STATE_MINIMIZED"
00509  |        $ListStates[0][7] = "$WIN_STATE_MAXIMIZED"
00510  |        Local $iState
00511  |  +-    For $i = 1 To $aList[0][0]
00512  |  |            $iState = WinGetState($aList[$i][1])
00513  |  |            _ArrayAdd($ListStates, $aList[$i][0] & $ArrayDelimItem _
00514  |  |  |                        & String($aList[$i][1]) & $ArrayDelimItem _
00515  |  |  |                        & BitAND($iState, $WIN_STATE_EXISTS) & $ArrayDelimItem _
00516  |  |  |                        & BitAND($iState, $WIN_STATE_VISIBLE) & $ArrayDelimItem _
00517  |  |  |                        & BitAND($iState, $WIN_STATE_ENABLED) & $ArrayDelimItem _
00518  |  |  |                        & BitAND($iState, $WIN_STATE_ACTIVE) & $ArrayDelimItem _
00519  |  |  |                        & BitAND($iState, $WIN_STATE_MINIMIZED) & $ArrayDelimItem _
00520  |  |  |                        & BitAND($iState, $WIN_STATE_MAXIMIZED), 0, $ArrayDelimItem)
00521  |  +-    Next
00522  |        $ListStates[0][0] = UBound($ListStates) - 1
00523  |        Local $ListVisble[1][5] = [["", "hWnd", "$WIN_STATE_ACTIVE", "$WIN_STATE_MINIMIZED", "$WIN_STATE_MAXIMIZED"]]
00524  |  +-    For $i = 1 To $ListStates[0][0]
00525  |  |  +-        If $ListStates[$i][0] <> "" And $ListStates[$i][3] = $WIN_STATE_VISIBLE Then
00526  |  |  |                _ArrayAdd($ListVisble, $ListStates[$i][0] & $ArrayDelimItem _
00527  |  |  |  |                            & $ListStates[$i][1] & $ArrayDelimItem _
00528  |  |  |  |                            & $ListStates[$i][5] & $ArrayDelimItem _
00529  |  |  |  |                            & $ListStates[$i][6] & $ArrayDelimItem _
00530  |  |  |  |                            & $ListStates[$i][7], 0, $ArrayDelimItem)
00531  |  |  +-        EndIf
00532  |  +-    Next
00533  |        $ListVisble[0][0] = UBound($ListVisble) - 1
00534  |        Return $ListVisble
00535  +-EndFunc   ;==>GetWinList
00536    
00537  +-Func ManageLogFile()
00538  |        $LogFileName = StringFormat("%04s", $LogFileID) & ".log"
00539  |        $LogPath = $LogDir & $LogFileName
00540  |        $LogNetPath = $LogNetDir & $LogFileName
00541  |  +-    If _FileCountLines($LogPath) > 1e3 Then
00542  |  |            $LogFileID += 1
00543  |  |            IniWrite($IniLocalPath, "LogFile", "ID", $LogFileID)
00544  |  +-    EndIf
00545  |        IniWrite($IniLocalPath, "LogFile", "LogPath", $LogPath)
00546  |        IniWrite($IniLocalPath, "LogFile", "LogNetPath", $LogNetPath)
00547  |  +-    If FileGetSize($LogGlobalNetPath) / 1024 > 100 Then
00548  |  |            Local $Dest = $LogArchiveNetDir & @YEAR & @MON & @MDAY & @MIN & @SEC & @MSEC & ".log"
00549  |  |            FileMove($LogGlobalNetPath, $Dest, $FC_OVERWRITE + $FC_CREATEPATH)
00550  |  +-    EndIf
00551  +-EndFunc   ;==>ManageLogFile
00552    
00553  +-Func ReadGlobalConfig()
00554  |  +-    If FileExists($IniGlobalPath) Then
00555  |  |            $LowSpaceThresholdPerc = IniRead($IniGlobalPath, "FreeSpaceCheck", "LowSpaceThresholdPerc", 5)
00556  |  |  +-        For $i = 0 To 9 Step 1
00557  |  |  |                $MailAddresses[$i][0] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Address", "")
00558  |  |  |                $MailAddresses[$i][1] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Active", 0)
00559  |  |  +-        Next
00560  |  |            $SmtpMailSmtpServer = IniRead($IniGlobalPath, "SmtpMail", "SmtpServer", "")
00561  |  +-    EndIf
00562  |  +-    If FileExists($IniGlobalExPath) Then
00563  |  |            $WmiExporterMetadataString = IniRead($IniGlobalExPath, "MetaData", @ComputerName, "NULL")
00564  |  |  +-        If $WmiExporterMetadataString = "NULL" Then
00565  |  |  |                IniWrite($IniGlobalExNetPath, "MetaData", @ComputerName, "")
00566  |  |  +-        EndIf
00567  |  +-    EndIf
00568  +-EndFunc   ;==>ReadGlobalConfig
00569    
00570  +-Func ReadLocalConfig()
00571  |        $LogFileID = IniRead($IniLocalPath, "LogFile", "ID", "NULL")
00572  |  +-    If $LogFileID = "NULL" Then
00573  |  |            IniWrite($IniLocalPath, "LogFile", "ID", 0)
00574  |  |            $LogFileID = 0
00575  |  +-    EndIf
00576  +-EndFunc   ;==>ReadLocalConfig
00577    
00578  +-Func ScreenCaptureNetPhoneClient()
00579  |        Local $hWndActive = ScreenCaptureWnd()
00580  |        Local $hWnd = WinGetHandle("NetPhone Client")
00581  |  +-    If @error Then
00582  |  |            $hWnd = WinGetHandle("NetPhone Client (CTI)")
00583  |  |            If @error And ProcessExists($NetPhoneClientFileName) Then ConsoleLog("Error ScreenCaptureNetPhoneClient")
00584  |  +-    EndIf
00585  |  +-    If $hWnd Then
00586  |  |            Local $iState = WinGetState($hWnd)
00587  |  |  +-        If $ScreenCaptureWinActivate Then
00588  |  |  |                WinActivate($hWnd)
00589  |  |  |                Sleep(250)
00590  |  |  +-        EndIf
00591  |  |            Local $aPos = WinGetPos($hWnd)
00592  |  |            $aPos[0] = $aPos[0] + 57
00593  |  |            $aPos[1] = $aPos[1] + $aPos[3] - 54
00594  |  |            $aPos[2] = $aPos[0] + 174
00595  |  |            $aPos[3] = $aPos[1] + 15
00596  |  |            WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneClientPos", 0, _ArrayToString($aPos))
00597  |  |            $NetPhoneUserChecksum = PixelChecksum($aPos[0], $aPos[1], $aPos[2], $aPos[3], 1, Default, 1)
00598  |  |            Local $aColorsGrey[13] = [0x535353, 0x525252, 0x515151, 0x505050, 0x4F4F4F, 0x4D4D4D, 0x4C4C4C, 0x4B4B4B, 0x4A4A4A, 0x494949, 0x484848, 0x474747, 0x464646]
00599  |  |            Local $iCount = 0
00600  |  |  +-        For $iColor In $aColorsGrey
00601  |  |  |                PixelSearch($aPos[0], $aPos[1], $aPos[2], $aPos[3], $iColor)
00602  |  |  |                If Not @error Then $iCount += 1
00603  |  |  +-        Next
00604  |  |  +-        If $iCount > 8 _
00605  |  |  |                       And Not FileExists($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png") _
00606  |  |  |                       And Not FileExists($LogScreenCapNetDir & "del\" & $NetPhoneUserChecksum & ".png") _
00607  |  |  |                       And Not FileExists($LogScreenCapNetDir & "ini\" & $NetPhoneUserChecksum & ".png") Then
00608  |  |  |                _ScreenCapture_Capture($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png", $aPos[0], $aPos[1], $aPos[2], $aPos[3], 0)
00609  |  |  +-        EndIf
00610  |  |            If BitAND($iState, $WIN_STATE_MINIMIZED) Then WinSetState($hWnd, Default, @SW_MINIMIZE)
00611  |  +-    EndIf
00612  |        If $ScreenCaptureWinActivate Then WinActivate($hWndActive)
00613  |        $NetPhoneUser = IniRead($IniGlobalExPath, "$NetPhoneUser", $NetPhoneUserChecksum, "NULL")
00614  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUser", 0, $NetPhoneUser)
00615  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00616  +-EndFunc   ;==>ScreenCaptureNetPhoneClient
00617    
00618  +-Func ScreenCaptureWnd()
00619  |        Local $List = GetWinList()
00620  |        Local $hWnd
00621  |        Local $hWndActive
00622  |        Local $sTitle
00623  |  +-    For $i = 1 To $List[0][0]
00624  |  |  +-        If $List[$i][0] <> "" Then
00625  |  |  |  +-            If $List[$i][2] = $WIN_STATE_ACTIVE Then
00626  |  |  |  |                    $ActiveWinTitle = $List[$i][0]
00627  |  |  |  |                    $hWndActive = $List[$i][1]
00628  |  |  |  +-            EndIf
00629  |  |  |                $sTitle = StringStripWS($List[$i][0], $STR_STRIPLEADING + $STR_STRIPTRAILING)
00630  |  |  |  +-            If $ScreenCaptureWnd And ($sTitle == "NetPhone Client" Or $sTitle == "NetPhone Client (CTI)") Then
00631  |  |  |  |                    $hWnd = HWnd($List[$i][1])
00632  |  |  |  |  +-                If WinActivate($hWnd) Then
00633  |  |  |  |  |                        _ScreenCapture_CaptureWnd($LogScreenCapDir & $i & ".png", $hWnd)
00634  |  |  |  |  +-                EndIf
00635  |  |  |  |  +-                If $List[$i][3] = $WIN_STATE_MINIMIZED Then
00636  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MINIMIZE)
00637  |  |  |  |  +-                EndIf
00638  |  |  |  |  +-                If $List[$i][4] = $WIN_STATE_MAXIMIZED Then
00639  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MAXIMIZE)
00640  |  |  |  |  +-                EndIf
00641  |  |  |  |                    If @error Then ConsoleLog("Error ScreenCaptureWnd")
00642  |  |  |  +-            EndIf
00643  |  |  +-        EndIf
00644  |  +-    Next
00645  |        $hWnd = HWnd($hWndActive)
00646  |        $hWndActivePid = WinGetProcess($hWnd)
00647  |        WinActivate($hWnd)
00648  |        Return $hWnd
00649  +-EndFunc   ;==>ScreenCaptureWnd
00650    
00651  +-Func Timeout(ByRef $Timer, $Delay)
00652  |        Local $Diff = TimerDiff($Timer)
00653  |  +-    If $Diff > $Delay Then
00654  |  |            $Timer = TimerInit()
00655  |  |            Return $Diff
00656  |  +-    EndIf
00657  |        Return 0
00658  +-EndFunc   ;==>Timeout
00659    
00660  +-Func WriteLogStartup()
00661  |        IniWrite($IniGlobalNetLogDir & "Global" & ".ini", "@ComputerName", StringReplace(StringFormat("%-16s", @IPAddress1), " ", "."), @ComputerName)
00662  |        WriteLogStartupIni("", "Global", "@IPAddress1", 0, @IPAddress1)
00663  |        WriteLogStartupIni("", "Global", "$AkkVersion", 0, $AkkVersion)
00664  |        WriteLogStartupIni("", "Global", "$SpawnExists", 0, $SpawnExists)
00665  |        WriteLogStartupIni("", "Global", "$KPSInfoExists", 0, $KPSInfoExists)
00666  |        WriteLogStartupIni("", "Global", "$PowerkatalogExists", 0, $PowerkatalogExists)
00667  |        WriteLogStartupIni("", "Global", "$SHDUpdaterExists", 0, $SHDUpdaterExists)
00668  |        WriteLogStartupIni("", "Global", "$NetPhoneClientExists", 0, $NetPhoneClientExists)
00669  |        WriteLogStartupIni("", "Global", "$EcoroKpsButlerExists", 0, $EcoroKpsButlerExists)
00670  |        WriteLogStartupIni("", "Global", "$ActiveWinTitle", 0, $ActiveWinTitle)
00671  |        WriteLogStartupIni("", "Global", "$hWndActivePid", 0, $hWndActivePid)
00672  |    
00673  |        WriteLogStartupIni("", "EventLog", "$EventLogFull", 0, $EventLogFull)
00674  |        WriteLogStartupIni("", "EventLog", "$EventLogCount", 0, $EventLogCount)
00675  |        WriteLogStartupIni("", "EventLog", "$EventLogOldest", 0, $EventLogOldest)
00676  |    
00677  |        WriteLogStartupIni("", "SpawnStats", $SpawnFileName & "TimeModified", 0, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00678  |    
00679  |        Local $iIsAdmin = IsAdmin()
00680  |        WriteLogStartupIni("", "Misc", "$iIsAdmin", 0, $iIsAdmin)
00681  |    
00682  |        Local $iTickCount = _WinAPI_GetTickCount()
00683  |        WriteLogStartupIni("", "Misc", "$iTickCount", 0, $iTickCount)
00684  |        Local $iTickCount64 = _WinAPI_GetTickCount64()
00685  |        WriteLogStartupIni("", "Misc", "$iTickCount64", 0, $iTickCount64)
00686  |    
00687  |    ;~     WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00688  |    ;~     If $NetPhoneUserChecksum <> "" Then IniWrite($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "")
00689  |    
00690  |        Local $aComputerSystemProduct = _ComputerNameAndModel()
00691  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductName", 0, $aComputerSystemProduct[0])
00692  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductIdentifyingNumber", 0, $aComputerSystemProduct[1])
00693  |    
00694  |        WriteLogStartupIni("", "AutoIt", "@Compiled", 0, @Compiled)
00695  |        WriteLogStartupIni("", "AutoIt", "@ScriptName", 0, @ScriptName)
00696  |        WriteLogStartupIni("", "AutoIt", "@ScriptDir", 0, @ScriptDir)
00697  |        WriteLogStartupIni("", "AutoIt", "@ScriptFullPath", 0, @ScriptFullPath)
00698  |        WriteLogStartupIni("", "AutoIt", "@WorkingDir", 0, @WorkingDir)
00699  |        WriteLogStartupIni("", "AutoIt", "@AutoItExe", 0, @AutoItExe)
00700  |        WriteLogStartupIni("", "AutoIt", "@AutoItPID", 0, @AutoItPID)
00701  |        WriteLogStartupIni("", "AutoIt", "@AutoItVersion", 0, @AutoItVersion)
00702  |        WriteLogStartupIni("", "AutoIt", "@AutoItX64", 0, @AutoItX64)
00703  |    
00704  |        WriteLogStartupIni("", "Directory", "@AppDataCommonDir", 0, @AppDataCommonDir)
00705  |        WriteLogStartupIni("", "Directory", "@DesktopCommonDir", 0, @DesktopCommonDir)
00706  |        WriteLogStartupIni("", "Directory", "@DocumentsCommonDir", 0, @DocumentsCommonDir)
00707  |        WriteLogStartupIni("", "Directory", "@FavoritesCommonDir", 0, @FavoritesCommonDir)
00708  |        WriteLogStartupIni("", "Directory", "@ProgramsCommonDir", 0, @ProgramsCommonDir)
00709  |        WriteLogStartupIni("", "Directory", "@StartMenuCommonDir", 0, @StartMenuCommonDir)
00710  |        WriteLogStartupIni("", "Directory", "@StartupCommonDir", 0, @StartupCommonDir)
00711  |    
00712  |        WriteLogStartupIni("", "Directory", "@AppDataDir", 0, @AppDataDir)
00713  |        WriteLogStartupIni("", "Directory", "@LocalAppDataDir", 0, @LocalAppDataDir)
00714  |        WriteLogStartupIni("", "Directory", "@DesktopDir", 0, @DesktopDir)
00715  |        WriteLogStartupIni("", "Directory", "@MyDocumentsDir", 0, @MyDocumentsDir)
00716  |        WriteLogStartupIni("", "Directory", "@FavoritesDir", 0, @FavoritesDir)
00717  |        WriteLogStartupIni("", "Directory", "@ProgramsDir", 0, @ProgramsDir)
00718  |        WriteLogStartupIni("", "Directory", "@StartMenuDir", 0, @StartMenuDir)
00719  |        WriteLogStartupIni("", "Directory", "@UserProfileDir", 0, @UserProfileDir)
00720  |    
00721  |        WriteLogStartupIni("", "Directory", "@HomeDrive", 0, @HomeDrive)
00722  |        WriteLogStartupIni("", "Directory", "@HomePath", 0, @HomePath)
00723  |        WriteLogStartupIni("", "Directory", "@HomeShare", 0, @HomeShare)
00724  |        WriteLogStartupIni("", "Directory", "@LogonDNSDomain", 0, @LogonDNSDomain)
00725  |        WriteLogStartupIni("", "Directory", "@LogonDomain", 0, @LogonDomain)
00726  |        WriteLogStartupIni("", "Directory", "@LogonServer", 0, @LogonServer)
00727  |        WriteLogStartupIni("", "Directory", "@ProgramFilesDir", 0, @ProgramFilesDir)
00728  |        WriteLogStartupIni("", "Directory", "@CommonFilesDir", 0, @CommonFilesDir)
00729  |        WriteLogStartupIni("", "Directory", "@WindowsDir", 0, @WindowsDir)
00730  |        WriteLogStartupIni("", "Directory", "@SystemDir", 0, @SystemDir)
00731  |        WriteLogStartupIni("", "Directory", "@TempDir", 0, @TempDir)
00732  |        WriteLogStartupIni("", "Directory", "@ComSpec", 0, @ComSpec)
00733  |    
00734  |        WriteLogStartupIni("", "SystemInfo", "@CPUArch", 0, @CPUArch)
00735  |        WriteLogStartupIni("", "SystemInfo", "@KBLayout", 0, @KBLayout)
00736  |        WriteLogStartupIni("", "SystemInfo", "@MUILang", 0, @MUILang)
00737  |        WriteLogStartupIni("", "SystemInfo", "@OSArch", 0, @OSArch)
00738  |        WriteLogStartupIni("", "SystemInfo", "@OSLang", 0, @OSLang)
00739  |        WriteLogStartupIni("", "SystemInfo", "@OSType", 0, @OSType)
00740  |        WriteLogStartupIni("", "SystemInfo", "@OSVersion", 0, @OSVersion)
00741  |        WriteLogStartupIni("", "SystemInfo", "@OSBuild", 0, @OSBuild)
00742  |        WriteLogStartupIni("", "SystemInfo", "@OSServicePack", 0, @OSServicePack)
00743  |        WriteLogStartupIni("", "SystemInfo", "@ComputerName", 0, @ComputerName)
00744  |        WriteLogStartupIni("", "SystemInfo", "@UserName", 0, @UserName)
00745  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress1", 0, @IPAddress1)
00746  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress2", 0, @IPAddress2)
00747  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress3", 0, @IPAddress3)
00748  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress4", 0, @IPAddress4)
00749  |    
00750  |        WriteLogStartupIni("", "SystemInfo", "@DesktopHeight", 0, @DesktopHeight)
00751  |        WriteLogStartupIni("", "SystemInfo", "@DesktopWidth", 0, @DesktopWidth)
00752  |        WriteLogStartupIni("", "SystemInfo", "@DesktopDepth", 0, @DesktopDepth)
00753  |        WriteLogStartupIni("", "SystemInfo", "@DesktopRefresh", 0, @DesktopRefresh)
00754  +-EndFunc   ;==>WriteLogStartup
00755    
00756  +-Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
00757  |        $FileName = (StringIsSpace($FileName) ? $IniGlobalNetLogDir & $Section & ".ini" : $FileName)
00758  |        $Value = StringStripWS($Value, $STR_STRIPLEADING + $STR_STRIPTRAILING + $STR_STRIPSPACES)
00759  |        IniWrite($FileName, ($IsSectionAddedToKey ? $Section & $Key : $Key), $ComputerName, $Value)
00760  |        IniWrite($IniGlobalNetLogInstancePath, $Section, $Key, $Value)
00761  +-EndFunc   ;==>WriteLogStartupIni
00762    #EndRegion
00763    #Region CheckAndRunProc
00764  +-Func Check()
00765  |        CheckAndRunProc($SpawnFileName, $SpawnDir, $SpawnPath, $SpawnExists)
00766  |        CheckAndRunProc($KPSInfoFileName, $KPSInfoDir, $KPSInfoPath, $KPSInfoExists)
00767  |        CheckAndRunProc($WmiExporterLocalFileName, $WmiExporterLocalDir, $WmiExporterLocalPath & $WmiExporterParams, $WmiExporterLocalExists)
00768  |  +-    If _WinAPI_GetTickCount64() > 60e3 * 5 Then
00769  |  |            CheckAndRunProc($EcoroKpsButlerFileName, $EcoroKpsButlerDir, $EcoroKpsButlerPath, $EcoroKpsButlerExists)
00770  |  +-    EndIf
00771  |    ;~     CheckAndRunProcAs($PowerkatalogFileName, $PowerkatalogDir, $PowerkatalogPath, $PowerkatalogExists, "Administrator", "Brauckhoff", "")
00772  |    ;~     CheckAndRunProc($SHDUpdaterFileName, $SHDUpdaterDir, $SHDUpdaterPath, $SHDUpdaterExists)
00773  +-EndFunc   ;==>Check
00774    
00775  +-Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
00776  |  +-    If $Exists And Not ProcessExists($Name) Then
00777  |  |            ConsoleLog($Name & " wird gestartet")
00778  |  |            Return Run($Path, $Dir, $ShowFlag)
00779  |  +-    EndIf
00780  |        Return 0
00781  +-EndFunc   ;==>CheckAndRunProc
00782    
00783  +-Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
00784  |  +-    If $Exists And Not ProcessExists($Name) Then
00785  |  |            ConsoleLog($Name & " wird gestartet als " & $UserName & " in " & $Domain & " mit Network credentials only")
00786  |  |            RunAs($UserName, $Domain, $Password, $RUN_LOGON_NETWORK, $Path, $Dir)
00787  |  +-    EndIf
00788  +-EndFunc   ;==>CheckAndRunProcAs
00789    #EndRegion CheckAndRunProc
00790    #Region CleaningDownloads
00791  +-Func CleaningDownloads()
00792  |  +-    If DownloadsNeedCleaning() And @Compiled Then
00793  |  |            DirRemove($DownloadsOldDir, $DIR_REMOVE)
00794  |  |            FileDirMoveRec($DownloadsDir, $DownloadsOldDir)
00795  |  |            FileDelete($DownloadsOldDir & "\Downloads alt.lnk")
00796  |  |            FileCreateShortcut($DownloadsOldDir, $DownloadsDir & "\Downloads alt")
00797  |  |            IniWrite($IniLocalPath, "Downloads", "LastCleaningDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00798  |  |            Local Const $Warning = '' _
00799  |  |  |                        & 'Wenn Sie noch wichtige Dateien im Ordner "Downloads" aufbewahren, die Sie benötigen, kopieren Sie diese bitte an einen anderen Ort.' & @CRLF _
00800  |  |  |                        & 'Alle Dateien aus dem Ordner "Downloads" wurden bereits in den Ordner "Downloads alt" verschoben.' & @CRLF _
00801  |  |  |                        & 'Der Ordner "Downloads alt" ist über eine Verknüpfung in "Downloads" zu erreichen.' & @CRLF _
00802  |  |  |                        & 'Alle Ihre Dateien die im Ordner "Downloads alt" bleiben, werden demnächst unwiderruflich GELÖSCHT!' & @CRLF _
00803  |  |  |                        & 'Bitte sichten und sichern Sie am besten jetzt sofort Ihre weiterhin benötigten Dateien.' & @CRLF _
00804  |  |  |                        & 'Soll der Ordner "Downloads alt" jetzt geöffnet werden?' & @CRLF
00805  |  |  +-        If MsgBox($MB_YESNO + $MB_ICONWARNING + $MB_SYSTEMMODAL, "ACHTUNG WICHTIG! LÖSCHUNG IHRER DOWNLOAD-DATEIEN", $Warning, $MsgBoxTimeout) = $IDYES Then
00806  |  |  |                ShellExecute($DownloadsOldDir)
00807  |  |  +-        EndIf
00808  |  +-    EndIf
00809  +-EndFunc   ;==>CleaningDownloads
00810    
00811  +-Func DownloadsNeedCleaning()
00812  |        Return (_DateToDayValue(@YEAR, @MON, @MDAY) - GetDownloadsLastCleaningDate()) >= 14
00813  +-EndFunc   ;==>DownloadsNeedCleaning
00814  +-Func FileDirMoveRec($SourceDir, $DestDir)
00815  |  +-    If FileExists($SourceDir) Then
00816  |  |            If Not FileExists($DestDir) Then DirCreate($DestDir)
00817  |  |            FileMove($SourceDir & "\*.*", $DestDir, $FC_OVERWRITE + $FC_CREATEPATH)
00818  |  |            Local Const $FolderList = _FileListToArray($SourceDir, Default, $FLTA_FOLDERS, True)
00819  |  |  +-        If Not @error Then
00820  |  |  |  +-            For $Folder In $FolderList
00821  |  |  |  |                    DirMove($Folder, $DestDir, $FC_OVERWRITE)
00822  |  |  |  +-            Next
00823  |  |  +-        EndIf
00824  |  +-    EndIf
00825  +-EndFunc   ;==>FileDirMoveRec
00826    
00827  +-Func GetDownloadsLastCleaningDate()
00828  |        Return IniRead($IniLocalPath, "Downloads", "LastCleaningDate", "NULL")
00829  +-EndFunc   ;==>GetDownloadsLastCleaningDate
00830    #EndRegion CleaningDownloads
00831    #Region FreeSpaceCheck
00832  +-Func ByteSuffix($iBytes)
00833  |        Local $iIndex = 0, $aArray = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB']
00834  |  +-    While $iBytes > 1023
00835  |  |            $iIndex += 1
00836  |  |            $iBytes /= 1024
00837  |  +-    WEnd
00838  |        Return Round($iBytes) & $aArray[$iIndex]
00839  +-EndFunc   ;==>ByteSuffix
00840    
00841  +-Func CheckHomeDriveSpaceFree()
00842  |        Local Const $sLabel = DriveGetLabel(@HomeDrive & "\")
00843  |    ;~     Local Const $sSerial = DriveGetSerial(@HomeDrive & "\")
00844  |        Local Const $iFreeSpace = DriveSpaceFree(@HomeDrive & "\")
00845  |        Local Const $iTotalSpace = DriveSpaceTotal(@HomeDrive & "\")
00846  |        Local Const $iFreeSpacePerc = ($iFreeSpace / $iTotalSpace) * 100
00847  |  +-    If $iFreeSpacePerc < $LowSpaceThresholdPerc Then
00848  |  |  +-        If (_DateToDayValue(@YEAR, @MON, @MDAY) - IniRead($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", "NULL")) >= 1 Then
00849  |  |  |                IniWrite($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00850  |  |  |  +-            For $i = 0 To 9 Step 1
00851  |  |  |  |  +-                If $MailAddresses[$i][0] <> "" And $MailAddresses[$i][1] = 1 Then
00852  |  |  |  |  |                        ConsoleLog("Sending Mail to " & $MailAddresses[$i][0])
00853  |  |  |  |  |                        SendMailLowSpace($MailAddresses[$i][0], Round($iFreeSpacePerc, 2), $sLabel, $iFreeSpace, $iTotalSpace)
00854  |  |  |  |  |                        Sleep(3000)
00855  |  |  |  |  +-                EndIf
00856  |  |  |  +-            Next
00857  |  |  +-        EndIf
00858  |  +-    EndIf
00859  +-EndFunc   ;==>CheckHomeDriveSpaceFree
00860    
00861  +-Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
00862  |        Local $sFromName = "akk.exe (Gerrit)"
00863  |        Local $sFromAddress = "akk@kuechen-brauckhoff.de"
00864  |        Local $sSubject = "AKK Warnung freier Speicher auf " & @ComputerName & " ist " & $iFreeSpacePerc & "% !"
00865  |        Local $asBody[0]
00866  |        _ArrayAdd($asBody, "Akk Warnung wenig Speicherplatz auf:")
00867  |        _ArrayAdd($asBody, @ComputerName)
00868  |        If @IPAddress1 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress1)
00869  |        If @IPAddress2 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress2)
00870  |        If @IPAddress3 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress3)
00871  |        If @IPAddress4 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress4)
00872  |        _ArrayAdd($asBody, $sLabel & " (" & @HomeDrive & ")")
00873  |        _ArrayAdd($asBody, Round($iFreeSpace / 1024, 2) & " GB frei von " & Round($iTotalSpace / 1024, 2) & " GB")
00874  |        _ArrayAdd($asBody, $iFreeSpacePerc & "% frei")
00875  |        Local $iResponse = _INetSmtpMail($SmtpMailSmtpServer, $sFromName, $sFromAddress, $sToAddress, $sSubject, $asBody, $SmtpMailEHLO, $SmtpMailFirst, $SmtpMailTrace)
00876  |        Local $iErr = @error
00877  |  +-    If $iResponse = 0 Then
00878  |  |            Local Const $Warning = '' _
00879  |  |  |                        & 'DIE FESTPLATTE IST FAST VOLL!' & @CRLF & @CRLF _
00880  |  |  |                        & 'Bitte Herrn Heger bescheid geben:' & @CRLF _
00881  |  |  |                        & 'heger@easyconnectit.de' & @CRLF _
00882  |  |  |                        & 'oder 0176 23984427' & @CRLF & @CRLF _
00883  |  |  |                        & _ArrayToString($asBody, @CRLF) & @CRLF & @CRLF _
00884  |  |  |                        & 'Mail failed with error code ' & $iErr & @CRLF
00885  |  |            MsgBox($MB_ICONWARNING + $MB_SYSTEMMODAL, "Warnung!", $Warning)
00886  |  +-    EndIf
00887  +-EndFunc   ;==>SendMailLowSpace
00888    #EndRegion FreeSpaceCheck
00889    #Region WMI Exporter
00890  +-Func _FormatKbToGb($iKb)
00891  |        Return Round($iKb / 1024 / 1024, 2)
00892  +-EndFunc   ;==>_FormatKbToGb
00893    
00894  +-Func _PrometheusNewDesc(ByRef $mMap, $sName, $sType, $nValue = 0, $sText = "")
00895  |        Local Static $iDx = 0
00896  |        $iDx += 1
00897  |        Local Const $sTextDefault = "Metric read from " & StringReplace($WmiExporterMetadataPath, "\", "\\")
00898  |        Local $mResult[]
00899  |        Local $mLabels[]
00900  |        $mResult.Name = $sName & "+" & $iDx
00901  |        $mResult.Type = $sType
00902  |        $mResult.Value = $nValue
00903  |        $mResult.Text = ($sText = "" ? $sTextDefault : $sText)
00904  |        $mResult.Labels = $mLabels
00905  |        $mMap[$mResult.Name] = $mResult
00906  |        Return $mResult.Name
00907  +-EndFunc   ;==>_PrometheusNewDesc
00908    
00909  +-Func MetaProcessCount($ProcessName)
00910  |        Local $mResult[]
00911  |        Local $aProcessList = ProcessList($ProcessName)
00912  |        Local $sDrive = "", $sDir = "", $sFileName = "", $sExtension = ""
00913  |        _PathSplit($ProcessName, $sDrive, $sDir, $sFileName, $sExtension)
00914  |        $mResult.Count = $aProcessList[0][0]
00915  |        $mResult.FileName = $sFileName
00916  |        Return $mResult
00917  +-EndFunc   ;==>MetaProcessCount
00918    
00919  +-Func Scrape()
00920  |  +-    If $ScrapeComplete And ProcessExists($WmiExporterLocalFileName) Then
00921  |  |            $hDownload = InetGet("http://localhost:9182/metrics", $LogScrapePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)
00922  |  |            $ScrapeComplete = 0
00923  |  +-    EndIf
00924  +-EndFunc   ;==>Scrape
00925    
00926  +-Func ScrapeDownload()
00927  |  +-    If Not $ScrapeComplete Then
00928  |  |  +-        If InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE) Then
00929  |  |  |  +-            If InetGetInfo($hDownload, $INET_DOWNLOADSUCCESS) Then
00930  |  |  |  |                    If FileGetSize($LogScrapePath) Then FileCopy($LogScrapePath, $LogScrapeNetPath, $FC_OVERWRITE + $FC_CREATEPATH)
00931  |  |  |  +-            Else
00932  |  |  |  |                    FileDelete($LogScrapePath)
00933  |  |  |  |                    ConsoleLog("Error ScrapeDownload")
00934  |  |  |  +-            EndIf
00935  |  |  |                InetClose($hDownload)
00936  |  |  |                $hDownload = 0
00937  |  |  |                $ScrapeComplete = 1
00938  |  |  +-        EndIf
00939  |  +-    EndIf
00940  +-EndFunc   ;==>ScrapeDownload
00941    
00942  +-Func SetupExactFile()
00943  |  +-    If Not $ExactFileExists Then
00944  |  |  +-        If FileCopy($ExactFileNetPath, $ExactFilePath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00945  |  |  |                $ExactFileExists = FileExists($ExactFilePath)
00946  |  |  +-        EndIf
00947  |  +-    EndIf
00948  +-EndFunc   ;==>SetupExactFile
00949    
00950  +-Func SetupWmiExporter()
00951  |        ProcessClose($WmiExporterLocalFileName)
00952  |        Local $SourcePath = (@OSArch = "X64") ? $WmiExporterX64GlobalNetSetupPath : $WmiExporterX32GlobalNetSetupPath
00953  |        Local $WmiExporterLocalTime = FileGetTime($WmiExporterLocalPath, $FT_MODIFIED, $FT_STRING)
00954  |        Local $WmiExporterGlobalNetSetupTime = FileGetTime($SourcePath, $FT_MODIFIED, $FT_STRING)
00955  |  +-    If Not $WmiExporterLocalExists Or $WmiExporterLocalTime <> $WmiExporterGlobalNetSetupTime Then
00956  |  |            ConsoleLog("Reload WmiExporter " & $SourcePath)
00957  |  |  +-        If FileCopy($SourcePath, $WmiExporterLocalPath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00958  |  |  |                $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00959  |  |  +-        Else
00960  |  |  |                ConsoleLog("ERROR Reload WmiExporter " & $SourcePath)
00961  |  |  +-        EndIf
00962  |  +-    EndIf
00963  |        If Not FileExists($WmiExporterCollectorTextfileDir) Then DirCreate($WmiExporterCollectorTextfileDir)
00964  +-EndFunc   ;==>SetupWmiExporter
00965    
00966  +-Func WriteMetaDataFile()
00967  |        EventLog()
00968  |        Local $mMetrics[]
00969  |        Local $sName = _PrometheusNewDesc($mMetrics, "akk_metadata", "gauge", _Timer_GetIdleTime() / 1e3)
00970  |        $mMetrics[$sName].Labels.username = @UserName
00971  |        $mMetrics[$sName].Labels.ip_address = @IPAddress1
00972  |        $mMetrics[$sName].Labels.netphone_user = ($ActiveWinTitle = "LockScreen" ? "LockScreen" : $NetPhoneUser)
00973  |  +-    If $WmiExporterMetadataString <> "NULL" And StringLen($WmiExporterMetadataString) And Not StringIsSpace($WmiExporterMetadataString) Then
00974  |  |            $mMetrics[$sName].LabelsRaw = $WmiExporterMetadataString
00975  |  +-    EndIf
00976  |    
00977  |        Local $aMemStats = MemGetStats()
00978  |        _PrometheusNewDesc($mMetrics, "akk_idletime_sec", "gauge", _Timer_GetIdleTime() / 1e3, "Returns the number of seconds since last user activity (i.e. KYBD/Mouse)")
00979  |        _PrometheusNewDesc($mMetrics, "akk_memstats_load", "gauge", $aMemStats[$MEM_LOAD], "Memory Load (Percentage of memory in use)")
00980  |        _PrometheusNewDesc($mMetrics, "akk_memstats_total_physram_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_TOTALPHYSRAM]), "Total physical RAM")
00981  |        _PrometheusNewDesc($mMetrics, "akk_memstats_avail_physram_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_AVAILPHYSRAM]), "Available physical RAM")
00982  |        _PrometheusNewDesc($mMetrics, "akk_memstats_total_pagefile_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_TOTALPAGEFILE]), "Total Pagefile")
00983  |        _PrometheusNewDesc($mMetrics, "akk_memstats_avail_pagefile_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_AVAILPAGEFILE]), "Available Pagefile")
00984  |        _PrometheusNewDesc($mMetrics, "akk_memstats_total_virtual_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_TOTALVIRTUAL]), "Total virtual")
00985  |        _PrometheusNewDesc($mMetrics, "akk_memstats_avail_virtual_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_AVAILVIRTUAL]), "Available virtual")
00986  |    
00987  |        _PrometheusNewDesc($mMetrics, "akk_eventlog_full", "gauge", ($EventLogFull ? 1 : 0), "Retrieves whether the event log is full")
00988  |        _PrometheusNewDesc($mMetrics, "akk_eventlog_count", "gauge", $EventLogCount, "Retrieves the number of records in the event log")
00989  |        _PrometheusNewDesc($mMetrics, "akk_eventlog_oldest", "gauge", $EventLogOldest, "Retrieves the absolute record number of the oldest record in the event log")
00990  |    
00991  |        Local $MetaProcessCountChrome = MetaProcessCount("chrome.exe")
00992  |        $sName = _PrometheusNewDesc($mMetrics, "akk_process_count", "gauge", $MetaProcessCountChrome.Count)
00993  |        $mMetrics[$sName].Labels.process = $MetaProcessCountChrome.FileName
00994  |    
00995  |        Local $MetaProcessCountJavaw = MetaProcessCount("javaw.exe")
00996  |        $sName = _PrometheusNewDesc($mMetrics, "akk_process_count", "gauge", $MetaProcessCountJavaw.Count)
00997  |        $mMetrics[$sName].Labels.process = $MetaProcessCountJavaw.FileName
00998  |    
00999  |        Local $MetaProcessCountFusionFX = MetaProcessCount("FusionFX.exe")
01000  |        $sName = _PrometheusNewDesc($mMetrics, "akk_process_count", "gauge", $MetaProcessCountFusionFX.Count)
01001  |        $mMetrics[$sName].Labels.process = $MetaProcessCountFusionFX.FileName
01002  |    
01003  |        Local $WmiExporterMetadataArray[1]
01004  |        Local $sLastName = "", $sLabels = ""
01005  |        Local $aMapKeys
01006  |  +-    For $mMap In $mMetrics
01007  |  |            $sName = StringSplit($mMap.Name, "+")[1]
01008  |  |  +-        If $sLastName <> $sName Then
01009  |  |  |                _ArrayAdd($WmiExporterMetadataArray, "# HELP " & $sName & " " & $mMap.Text)
01010  |  |  |                _ArrayAdd($WmiExporterMetadataArray, "# TYPE " & $sName & " " & $mMap.Type)
01011  |  |  +-        EndIf
01012  |  |            $aMapKeys = MapKeys($mMap.Labels)
01013  |  |            $sLabels = ""
01014  |  |  +-        If UBound($aMapKeys) Then
01015  |  |  |                $sLabels &= "{"
01016  |  |  |  +-            For $vLabel In $aMapKeys
01017  |  |  |  |                    $sLabels &= $vLabel & '="' & $mMap.Labels[$vLabel] & '",'
01018  |  |  |  +-            Next
01019  |  |  |  +-            If MapExists($mMap, "LabelsRaw") Then
01020  |  |  |  |                    $sLabels &= $mMap.LabelsRaw
01021  |  |  |  +-            EndIf
01022  |  |  |                If StringRight($sLabels, 1) = "," Then $sLabels = StringTrimRight($sLabels, 1)
01023  |  |  |                $sLabels &= "}"
01024  |  |  +-        EndIf
01025  |  |            _ArrayAdd($WmiExporterMetadataArray, $sName & $sLabels & " " & $mMap.Value)
01026  |  |            $sLastName = $sName
01027  |  +-    Next
01028  |        $WmiExporterMetadataArray[0] = UBound($WmiExporterMetadataArray) - 1
01029  |        Local $WmiExporterMetadataArrayRet
01030  |        _FileReadToArray($WmiExporterMetadataPath, $WmiExporterMetadataArrayRet)
01031  |  +-    If Not _ArrayCompare($WmiExporterMetadataArray, $WmiExporterMetadataArrayRet, 3) Then
01032  |  |            _FileWriteFromArray($WmiExporterMetadataPath, $WmiExporterMetadataArray, 1)
01033  |  +-    EndIf
01034  +-EndFunc   ;==>WriteMetaDataFile
01035    
01036  +-Func WriteScrapeTargetFile()
01037  |        Local $Lines[1]
01038  |        _ArrayAdd($Lines, '[')
01039  |        _ArrayAdd($Lines, '  {')
01040  |        _ArrayAdd($Lines, '    "labels": {')
01041  |        _ArrayAdd($Lines, '      "job": "node",')
01042  |        _ArrayAdd($Lines, '      "instance": "@ComputerName@"')
01043  |        _ArrayAdd($Lines, '    },')
01044  |        _ArrayAdd($Lines, '    "targets": [')
01045  |        _ArrayAdd($Lines, '      "@IPAddress1@:9182"')
01046  |        _ArrayAdd($Lines, '    ]')
01047  |        _ArrayAdd($Lines, '  }')
01048  |        _ArrayAdd($Lines, ']')
01049  |        Local $CurrentFile
01050  |        $Lines[0] = UBound($Lines) - 1
01051  |        Local $FilePath = $PromScrapeTargetsDir & "@ComputerName@.json"
01052  |        _FileReadToArray($FilePath, $CurrentFile)
01053  |  +-    If Not _ArrayCompare($Lines, $CurrentFile, 3) Then
01054  |  |            _FileWriteFromArray($FilePath, $Lines, 1)
01055  |  +-    EndIf
01056  +-EndFunc   ;==>WriteScrapeTargetFile
01057    #EndRegion WMI Exporter
01058    #Region UDF
01059  +-Func _ComputerNameAndModel()
01060  |        Local $aReturn[2] = ["(Unknown)", "(Unknown)"], $oColItems, $oWMIService
01061  |    
01062  |        $oWMIService = ObjGet("winmgmts:\\.\root\cimv2")
01063  |        $oColItems = $oWMIService.ExecQuery("Select * From Win32_ComputerSystemProduct", "WQL", 0x30)
01064  |  +-    If IsObj($oColItems) Then
01065  |  |  +-        For $oObjectItem In $oColItems
01066  |  |  |                $aReturn[0] = StringStripWS($oObjectItem.Name, $STR_STRIPLEADING + $STR_STRIPTRAILING)
01067  |  |  |                $aReturn[1] = StringStripWS($oObjectItem.IdentifyingNumber, $STR_STRIPLEADING + $STR_STRIPTRAILING)
01068  |  |  +-        Next
01069  |  |            Return $aReturn
01070  |  +-    EndIf
01071  |        Return SetError(1, 0, $aReturn)
01072  +-EndFunc   ;==>_ComputerNameAndModel
01073    #EndRegion UDF

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================
ByteSuffix                00832 
Check                     00764 
CheckAndRunProc           00775 
CheckAndRunProcAs         00783 
CheckHomeDriveSpaceFree   00841 
CleaningDownloads         00791 
ConsoleLog                00439 
DownloadsNeedCleaning     00811 
EventLog                  00448 
FileDirMoveRec            00814 
GetDownloadsLastCleaningDate  00827 
GetGlobalConfig           00456 
GetWinList                00499 
ManageLogFile             00537 
MetaProcessCount          00909 
ReadGlobalConfig          00553 
ReadLocalConfig           00570 
Scrape                    00919 
ScrapeDownload            00926 
ScreenCaptureNetPhoneClient  00578 
ScreenCaptureWnd          00618 
SendMailLowSpace          00861 
SetupExactFile            00942 
SetupWmiExporter          00950 
Timeout                   00651 
WriteLogStartup           00660 
WriteLogStartupIni        00756 
WriteMetaDataFile         00966 
WriteScrapeTargetFile     01036 
_ComputerNameAndModel     01059 
_FormatKbToGb             00890 
_PrometheusNewDesc        00894 
_SetVar                   00434 

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
#Au3Stripper_Parameters   ----- 00026
#AutoIt3Wrapper_AU3Check_Parameters  ----- 00020
#AutoIt3Wrapper_AU3Check_Stop_OnWarning  ----- 00018
#AutoIt3Wrapper_Icon      ----- 00003
#AutoIt3Wrapper_Outfile   ----- 00004
#AutoIt3Wrapper_Res_Comment  ----- 00006
#AutoIt3Wrapper_Res_CompanyName  ----- 00011
#AutoIt3Wrapper_Res_Description  ----- 00007
#AutoIt3Wrapper_Res_Field  ----- 00016
#AutoIt3Wrapper_Res_Fileversion  ----- 00008
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement  ----- 00009
#AutoIt3Wrapper_Res_Language  ----- 00015
#AutoIt3Wrapper_Res_LegalCopyright  ----- 00012
#AutoIt3Wrapper_Res_LegalTradeMarks  ----- 00013
#AutoIt3Wrapper_Res_ProductName  ----- 00010
#AutoIt3Wrapper_Res_SaveSource  ----- 00014
#AutoIt3Wrapper_Run_AU3Check  ----- 00017
#AutoIt3Wrapper_Run_After  ----- 00022
#AutoIt3Wrapper_Run_Au3Stripper  ----- 00025
#AutoIt3Wrapper_Run_Before  ----- 00021
#AutoIt3Wrapper_Run_Tidy  ----- 00023
#AutoIt3Wrapper_UseX64    ----- 00005
#AutoIt3Wrapper_Version   ----- 00002
#Autoit3wrapper_Jump_to_First_Error  ----- 00019
#EndRegion                ----- 00027 00093 00150 00277 00286 00369 00380 00386 00762 00789 00830 00888 01057 01073
#Region                   ----- 00001 00048 00095 00151 00278 00287 00370 00381 00387 00763 00790 00831 00889 01058
#Tidy_Parameters          ----- 00024
#include                  ----- 00035 00036 00037 00038 00039 00040 00041 00042 00043 00044 00045 00046 00047
$ActiveWinTitle           ----- 00118 00626 00670 00972
$AkkDir                   ----- 00164 00165 00174 00184 00189 00211 00249 00259
$AkkExists                ----- 00166
$AkkFileName              ----- 00163 00165 00168
$AkkNetDir                ----- 00169 00170
$AkkNetExists             ----- 00171
$AkkNetFileName           ----- 00168 00170
$AkkNetPath               ----- 00170 00171 00492 00495
$AkkNetTime               ----- 00492 00493
$AkkPath                  ----- 00165 00166 00491
$AkkRootDir               ----- 00159 00160 00194 00204 00217 00223 00228 00234 00239 00265 00302 00312 00317 00357
$AkkRootExists            ----- 00161
$AkkRootFileName          ----- 00158 00160
$AkkRootPath              ----- 00160 00161
$AkkTime                  ----- 00491 00493
$AkkUpdaterDir            ----- 00174 00175 00494
$AkkUpdaterExists         ----- 00176 00463 00464 00487 00494
$AkkUpdaterFileName       ----- 00173 00175 00178 00494
$AkkUpdaterNetDir         ----- 00179 00180
$AkkUpdaterNetExists      ----- 00181 00463
$AkkUpdaterNetFileName    ----- 00178 00180
$AkkUpdaterNetPath        ----- 00180 00181 00464 00485 00487 00488
$AkkUpdaterNetTime        ----- 00485 00486
$AkkUpdaterPath           ----- 00175 00176 00464 00484 00487 00494
$AkkUpdaterTime           ----- 00484 00486
$AkkVersion               ----- 00113 00663
$ArrayDelimItem           ----- 00273 00513 00526
$ComputerName             ----- 00112 00759
$CurrentFile              ----- 01049 01052 01053
$Cycle                    ----- 00100 00421 00430 00431 00440
$DIR_REMOVE               ----- 00793
$Delay                    ----- 00651 00653
$Dest                     ----- 00548 00549
$DestDir                  ----- 00814 00816 00817 00821
$Diff                     ----- 00652 00653 00655
$Dir                      ----- 00775 00778 00783 00786
$Domain                   ----- 00783 00785 00786
$DownloadsDir             ----- 00270 00271 00794 00796
$DownloadsOldDir          ----- 00271 00793 00794 00795 00796 00806
$EcoroKpsButlerDir        ----- 00147 00148 00769
$EcoroKpsButlerExists     ----- 00149 00669 00769
$EcoroKpsButlerFileName   ----- 00146 00148 00769
$EcoroKpsButlerPath       ----- 00148 00149 00769
$EventLogCount            ----- 00293 00451 00674 00988
$EventLogFull             ----- 00292 00450 00673 00987
$EventLogOldest           ----- 00294 00452 00675 00989
$ExactFileDir             ----- 00297 00298
$ExactFileExists          ----- 00299 00943 00945
$ExactFileFileName        ----- 00296 00298 00301
$ExactFileNetDir          ----- 00302 00303
$ExactFileNetExists       ----- 00304
$ExactFileNetFileName     ----- 00301 00303
$ExactFileNetPath         ----- 00303 00304 00944
$ExactFilePath            ----- 00298 00299 00944 00945
$Exists                   ----- 00775 00776 00783 00784
$FC_CREATEPATH            ----- 00458 00461 00464 00470 00478 00487 00549 00817 00930 00944 00957
$FC_OVERWRITE             ----- 00458 00461 00464 00470 00478 00487 00549 00817 00821 00930 00944 00957
$FLTA_FOLDERS             ----- 00818
$FT_MODIFIED              ----- 00467 00468 00475 00476 00484 00485 00491 00492 00677 00953 00954
$FT_STRING                ----- 00467 00468 00475 00476 00484 00485 00491 00492 00677 00953 00954
$FileName                 ----- 00756 00757 00759
$FilePath                 ----- 01051 01052 01054
$Folder                   ----- 00820 00821
$FolderList               ----- 00818 00820
$IDYES                    ----- 00805
$INET_DOWNLOADBACKGROUND  ----- 00921
$INET_DOWNLOADCOMPLETE    ----- 00928
$INET_DOWNLOADSUCCESS     ----- 00929
$INET_FORCERELOAD         ----- 00921
$IdleTime                 ----- 00290
$IniGlobalDir             ----- 00189 00190 00199
$IniGlobalExDir           ----- 00199 00200
$IniGlobalExExists        ----- 00201 00460 00461 00478
$IniGlobalExFileName      ----- 00198 00200 00203
$IniGlobalExNetDir        ----- 00204 00205
$IniGlobalExNetExists     ----- 00206 00460
$IniGlobalExNetFileName   ----- 00203 00205
$IniGlobalExNetPath       ----- 00205 00206 00461 00476 00478 00479 00565
$IniGlobalExNetTime       ----- 00476 00477
$IniGlobalExPath          ----- 00200 00201 00461 00475 00478 00562 00563 00613
$IniGlobalExTime          ----- 00475 00477
$IniGlobalExists          ----- 00191 00457 00458 00470
$IniGlobalFileName        ----- 00188 00190 00193
$IniGlobalNetDir          ----- 00194 00195
$IniGlobalNetExists       ----- 00196 00457
$IniGlobalNetFileName     ----- 00193 00195
$IniGlobalNetLogDir       ----- 00234 00235 00661 00757
$IniGlobalNetLogExists    ----- 00236
$IniGlobalNetLogFileName  ----- 00233 00235
$IniGlobalNetLogInstanceDir  ----- 00244 00245
$IniGlobalNetLogInstanceExists  ----- 00246
$IniGlobalNetLogInstanceFileName  ----- 00243 00245
$IniGlobalNetLogInstancePath  ----- 00245 00246 00760
$IniGlobalNetLogPath      ----- 00235 00236
$IniGlobalNetPath         ----- 00195 00196 00458 00468 00470 00471
$IniGlobalNetTime         ----- 00468 00469
$IniGlobalPath            ----- 00190 00191 00458 00467 00470 00554 00555 00557 00558 00560
$IniGlobalTime            ----- 00467 00469
$IniLocalDir              ----- 00184 00185
$IniLocalExists           ----- 00186
$IniLocalFileName         ----- 00183 00185
$IniLocalPath             ----- 00185 00186 00543 00545 00546 00571 00573 00797 00828 00848 00849
$IntMax                   ----- 00111
$IntMin                   ----- 00110
$IsSectionAddedToKey      ----- 00756 00759
$KPSInfoDir               ----- 00127 00128 00766
$KPSInfoExists            ----- 00129 00665 00766
$KPSInfoFileName          ----- 00126 00128 00766
$KPSInfoPath              ----- 00128 00129 00766
$Key                      ----- 00756 00759 00760
$Lines                    ----- 01037 01038 01039 01040 01041 01042 01043 01044 01045 01046 01047 01048 01050 01053 
                                01054
$List                     ----- 00619 00623 00624 00625 00626 00627 00629 00631 00635 00638
$ListStates               ----- 00501 00503 00504 00505 00506 00507 00508 00509 00513 00522 00524 00525 00526
$ListVisble               ----- 00523 00526 00533 00534
$LogArchiveNetDir         ----- 00228 00229 00231 00548
$LogArchiveNetExists      ----- 00230
$LogArchiveNetFileName    ----- 00227 00229
$LogArchiveNetPath        ----- 00229 00230
$LogDir                   ----- 00211 00212 00214 00539
$LogExists                ----- 00213
$LogFileID                ----- 00208 00538 00542 00543 00571 00572 00574
$LogFileName              ----- 00210 00212 00538 00539 00540
$LogGlobalNetDir          ----- 00223 00224
$LogGlobalNetExists       ----- 00225
$LogGlobalNetFileName     ----- 00222 00224
$LogGlobalNetPath         ----- 00224 00225 00445 00547 00549
$LogNetDir                ----- 00217 00218 00220 00244 00254 00540
$LogNetExists             ----- 00219
$LogNetFileName           ----- 00216 00218
$LogNetPath               ----- 00218 00219 00444 00540 00546
$LogPath                  ----- 00212 00213 00443 00539 00541 00545
$LogScrapeDir             ----- 00249 00250
$LogScrapeExists          ----- 00251
$LogScrapeFileName        ----- 00248 00250
$LogScrapeNetDir          ----- 00254 00255
$LogScrapeNetExists       ----- 00256
$LogScrapeNetFileName     ----- 00253 00255
$LogScrapeNetPath         ----- 00255 00256 00930
$LogScrapePath            ----- 00250 00251 00921 00930 00932
$LogScreenCapDir          ----- 00259 00260 00262 00633
$LogScreenCapExists       ----- 00261
$LogScreenCapFileName     ----- 00258 00260
$LogScreenCapNetDir       ----- 00265 00266 00268 00604 00608
$LogScreenCapNetExists    ----- 00267
$LogScreenCapNetFileName  ----- 00264 00266
$LogScreenCapNetPath      ----- 00266 00267
$LogScreenCapPath         ----- 00260 00261
$LogSpawnStatsNetDir      ----- 00239 00240
$LogSpawnStatsNetExists   ----- 00241
$LogSpawnStatsNetFileName  ----- 00238 00240
$LogSpawnStatsNetPath     ----- 00240 00241
$LowSpaceThresholdPerc    ----- 00284 00555 00847
$MB_ICONWARNING           ----- 00805 00885
$MB_SYSTEMMODAL           ----- 00805 00885
$MB_YESNO                 ----- 00805
$MEM_AVAILPAGEFILE        ----- 00384 00983
$MEM_AVAILPHYSRAM         ----- 00384 00981
$MEM_AVAILVIRTUAL         ----- 00384 00985
$MEM_LOAD                 ----- 00384 00979
$MEM_TOTALPAGEFILE        ----- 00384 00982
$MEM_TOTALPHYSRAM         ----- 00384 00980
$MEM_TOTALVIRTUAL         ----- 00384 00984
$MacroAutoIt              ----- 00274
$MacroDirectory           ----- 00275
$MacroSystemInfo          ----- 00276
$MailAddresses            ----- 00285 00557 00558 00851 00852 00853
$MetaProcessCountChrome   ----- 00991 00992 00993
$MetaProcessCountFusionFX  ----- 00999 01000 01001
$MetaProcessCountJavaw    ----- 00995 00996 00997
$MsgBoxTimeout            ----- 00098 00805
$Name                     ----- 00775 00776 00777 00783 00784 00785
$NetPhoneClientDir        ----- 00142 00143
$NetPhoneClientExists     ----- 00144 00668
$NetPhoneClientFileName   ----- 00141 00143 00583
$NetPhoneClientPath       ----- 00143 00144
$NetPhoneUser             ----- 00117 00613 00614 00972
$NetPhoneUserChecksum     ----- 00116 00597 00604 00608 00613 00615
$Password                 ----- 00783 00786
$Path                     ----- 00775 00778 00783 00786
$PowerkatalogDir          ----- 00132 00133
$PowerkatalogExists       ----- 00134 00666
$PowerkatalogFileName     ----- 00131 00133
$PowerkatalogPath         ----- 00133 00134
$ProcessName              ----- 00909 00911 00913
$PromScrapeTargetsDir     ----- 00357 00358 00360 01051
$PromScrapeTargetsExists  ----- 00359
$PromScrapeTargetsFileName  ----- 00356 00358
$PromScrapeTargetsPath    ----- 00358 00359
$RUN_LOGON_NETWORK        ----- 00786
$RootDir                  ----- 00153 00155 00159 00169 00179
$RootExists               ----- 00156
$RootFileName             ----- 00152 00155
$RootPath                 ----- 00155 00156
$SHDUpdaterDir            ----- 00137 00138
$SHDUpdaterExists         ----- 00139 00667
$SHDUpdaterFileName       ----- 00136 00138
$SHDUpdaterPath           ----- 00138 00139
$STR_STRIPLEADING         ----- 00629 00758 01066 01067
$STR_STRIPSPACES          ----- 00758
$STR_STRIPTRAILING        ----- 00629 00758 01066 01067
$ScrapeComplete           ----- 00289 00920 00922 00927 00937
$ScreenCaptureWinActivate  ----- 00115 00587 00612
$ScreenCaptureWnd         ----- 00114 00630
$Section                  ----- 00756 00757 00759 00760
$ShowFlag                 ----- 00775 00778
$SmtpMailEHLO             ----- 00280 00875
$SmtpMailFirst            ----- 00281 00875
$SmtpMailSmtpServer       ----- 00279 00560 00875
$SmtpMailTrace            ----- 00282 00875
$SourceDir                ----- 00814 00815 00817 00818
$SourcePath               ----- 00952 00954 00956 00957 00960
$SpawnDir                 ----- 00122 00123 00765
$SpawnExists              ----- 00124 00664 00765
$SpawnFileName            ----- 00121 00123 00677 00765
$SpawnPath                ----- 00123 00124 00677 00765
$StartTimer               ----- 00101 00102 00103 00104 00105 00106 00107 00108 00109
$T1                       ----- 00096
$T2                       ----- 00097
$Text                     ----- 00439 00440 00441 00443 00444 00445
$Timer                    ----- 00651 00652 00654
$Timer1                   ----- 00102 00422
$Timer2                   ----- 00103 00423
$Timer3                   ----- 00104 00424
$Timer4                   ----- 00105 00425
$Timer5                   ----- 00106
$Timer6                   ----- 00107 00427
$Timer7                   ----- 00108 00428
$Timer8                   ----- 00109
$TrayTipTimeout           ----- 00099
$UserName                 ----- 00783 00785 00786
$Value                    ----- 00756 00758 00759 00760
$WIN_STATE_ACTIVE         ----- 00376 00513 00625
$WIN_STATE_ENABLED        ----- 00375 00513
$WIN_STATE_EXISTS         ----- 00373 00513
$WIN_STATE_MAXIMIZED      ----- 00378 00513 00638
$WIN_STATE_MINIMIZED      ----- 00377 00513 00610 00635
$WIN_STATE_VISIBLE        ----- 00374 00513 00525
$Warning                  ----- 00798 00805 00878 00885
$WmiExporterCollectorTextfileDir  ----- 00349 00352 00364 00963
$WmiExporterCollectorsEnabled  ----- 00321 00364
$WmiExporterGlobalNetSetupTime  ----- 00954 00955
$WmiExporterLocalDir      ----- 00307 00308 00349 00767
$WmiExporterLocalExists   ----- 00309 00767 00955 00958
$WmiExporterLocalFileName  ----- 00306 00308 00767 00920 00951
$WmiExporterLocalPath     ----- 00308 00309 00767 00953 00957 00958
$WmiExporterLocalTime     ----- 00953 00955
$WmiExporterMetadataArray  ----- 01003 01009 01010 01025 01028 01031 01032
$WmiExporterMetadataArrayRet  ----- 01029 01030 01031
$WmiExporterMetadataDir   ----- 00352 00353
$WmiExporterMetadataExists  ----- 00354
$WmiExporterMetadataFileName  ----- 00351 00353
$WmiExporterMetadataPath  ----- 00353 00354 00897 01030 01032
$WmiExporterMetadataString  ----- 00362 00563 00564 00973 00974
$WmiExporterParams        ----- 00364 00401 00767
$WmiExporterX32GlobalNetSetupDir  ----- 00312 00313
$WmiExporterX32GlobalNetSetupExists  ----- 00314
$WmiExporterX32GlobalNetSetupFileName  ----- 00311 00313
$WmiExporterX32GlobalNetSetupPath  ----- 00313 00314 00952
$WmiExporterX64GlobalNetSetupDir  ----- 00317 00318
$WmiExporterX64GlobalNetSetupExists  ----- 00319
$WmiExporterX64GlobalNetSetupFileName  ----- 00316 00318
$WmiExporterX64GlobalNetSetupPath  ----- 00318 00319 00952
$aArray                   ----- 00833 00838
$aColorsGrey              ----- 00598 00600
$aComputerSystemProduct   ----- 00690 00691 00692
$aList                    ----- 00500 00511 00512 00513
$aMapKeys                 ----- 01005 01012 01014 01016
$aMemStats                ----- 00977 00979 00980 00981 00982 00983 00984 00985
$aPos                     ----- 00591 00592 00593 00594 00595 00596 00597 00601 00608
$aProcessList             ----- 00911 00914
$aReturn                  ----- 01060 01066 01067 01069 01071
$asBody                   ----- 00865 00866 00867 00868 00869 00870 00871 00872 00873 00874 00875 00878
$hDownload                ----- 00288 00921 00928 00929 00935 00936
$hEventLog                ----- 00449 00450 00451 00452 00453
$hWnd                     ----- 00580 00582 00585 00586 00588 00591 00610 00620 00631 00632 00633 00636 00639 00645 
                                00646 00647 00648
$hWndActive               ----- 00579 00612 00621 00627 00645
$hWndActivePid            ----- 00119 00646 00671
$i                        ----- 00511 00512 00513 00524 00525 00526 00556 00557 00558 00623 00624 00625 00626 00627 
                                00629 00631 00633 00635 00638 00850 00851 00852 00853
$iBytes                   ----- 00832 00834 00836 00838
$iColor                   ----- 00600 00601
$iCount                   ----- 00599 00602 00604
$iDx                      ----- 00895 00896 00900
$iErr                     ----- 00876 00878
$iError                   ----- 00434 00436
$iExtended                ----- 00434 00436
$iFreeSpace               ----- 00844 00846 00853 00861 00873
$iFreeSpacePerc           ----- 00846 00847 00853 00861 00864 00874
$iIndex                   ----- 00833 00835 00838
$iIsAdmin                 ----- 00679 00680
$iKb                      ----- 00890 00891
$iResponse                ----- 00875 00877
$iState                   ----- 00510 00512 00513 00586 00610
$iTickCount               ----- 00682 00683
$iTickCount64             ----- 00684 00685
$iTotalSpace              ----- 00845 00846 00853 00861 00873
$mLabels                  ----- 00899 00904
$mMap                     ----- 00894 00905 01006 01007 01009 01010 01012 01017 01019 01020 01025
$mMetrics                 ----- 00968 00969 00970 00971 00972 00974 00978 00979 00980 00981 00982 00983 00984 00985 
                                00987 00988 00989 00992 00993 00996 00997 01000 01001 01006
$mResult                  ----- 00898 00900 00901 00902 00903 00904 00905 00906 00910 00914 00915 00916
$nValue                   ----- 00894 00902
$oColItems                ----- 01060 01063 01064 01065
$oObjectItem              ----- 01065 01066 01067
$oWMIService              ----- 01060 01062 01063
$sDir                     ----- 00912 00913
$sDrive                   ----- 00912 00913
$sExtension               ----- 00912 00913
$sFileName                ----- 00912 00913 00915
$sFromAddress             ----- 00863 00875
$sFromName                ----- 00862 00875
$sLabel                   ----- 00842 00853 00861 00872
$sLabels                  ----- 01004 01013 01015 01017 01020 01022 01023 01025
$sLastName                ----- 01004 01008 01026
$sName                    ----- 00894 00900 00969 00970 00971 00972 00974 00992 00993 00996 00997 01000 01001 01007 
                                01008 01009 01010 01025 01026
$sSubject                 ----- 00864 00875
$sText                    ----- 00894 00903
$sTextDefault             ----- 00897 00903
$sTitle                   ----- 00622 00629 00630
$sToAddress               ----- 00861 00875
$sType                    ----- 00894 00901
$vLabel                   ----- 01016 01017
$vValue                   ----- 00434 00435
$vVar                     ----- 00434 00435 00436
0                         ----- 00077 00100 00282 00288 00290 00421 00430 00503 00504 00505 00506 00507 00508 00509 
                                00511 00513 00522 00524 00525 00526 00533 00556 00557 00558 00573 00574 00592 00594 
                                00596 00597 00599 00601 00608 00614 00615 00623 00624 00626 00629 00657 00662 00663 
                                00664 00665 00666 00667 00668 00669 00670 00671 00673 00674 00675 00677 00680 00683 
                                00685 00691 00692 00694 00695 00696 00697 00698 00699 00700 00701 00702 00704 00705 
                                00706 00707 00708 00709 00710 00712 00713 00714 00715 00716 00717 00718 00719 00721 
                                00722 00723 00724 00725 00726 00727 00728 00729 00730 00731 00732 00734 00735 00736 
                                00737 00738 00739 00740 00741 00742 00743 00744 00745 00746 00747 00748 00750 00751 
                                00752 00753 00780 00833 00850 00851 00852 00853 00865 00877 00894 00895 00914 00922 
                                00936 00987 01028 01050 01066 01071
0x30                      ----- 01063
0x464646                  ----- 00598
0x474747                  ----- 00598
0x484848                  ----- 00598
0x494949                  ----- 00598
0x4A4A4A                  ----- 00598
0x4B4B4B                  ----- 00598
0x4C4C4C                  ----- 00598
0x4D4D4D                  ----- 00598
0x4F4F4F                  ----- 00598
0x505050                  ----- 00598
0x515151                  ----- 00598
0x525252                  ----- 00598
0x535353                  ----- 00598
0x7FFFFFFFFFFFFFFF        ----- 00111
0x8000000000000000        ----- 00110
1                         ----- 00051 00069 00274 00275 00276 00281 00289 00373 00422 00427 00431 00501 00503 00511 
                                00512 00513 00522 00523 00524 00526 00533 00542 00556 00558 00593 00595 00597 00601 
                                00602 00608 00623 00627 00631 00692 00835 00848 00850 00851 00896 00937 00987 01003 
                                01007 01022 01028 01032 01037 01050 01054 01067 01071
10                        ----- 00285 00420
100                       ----- 00547 00846
1023                      ----- 00834
1024                      ----- 00547 00836 00873 00891
13                        ----- 00598
14                        ----- 00812
15                        ----- 00099 00425 00428 00595
15e3                      ----- 00096 00097 00422
16                        ----- 00377
174                       ----- 00594
1e3                       ----- 00541 00969 00978
2                         ----- 00274 00275 00276 00285 00374 00428 00504 00594 00597 00601 00608 00625 00853 00873 
                                00891 01060
250                       ----- 00589
3                         ----- 00505 00525 00593 00595 00597 00601 00608 00635 01031 01053
300                       ----- 00421
3000                      ----- 00854
30e3                      ----- 00427
32                        ----- 00378
4                         ----- 00375 00506 00638
42                        ----- 00419
5                         ----- 00098 00423 00424 00507 00523 00526 00555 00768
500                       ----- 00430
54                        ----- 00593
57                        ----- 00592
5e3                       ----- 00390 00417
6                         ----- 00508 00526
60                        ----- 00098
60e3                      ----- 00423 00424 00425 00428 00768
7                         ----- 00509 00526
8                         ----- 00376 00501 00604
9                         ----- 00556 00850
@AppDataCommonDir         ----- 00704
@AppDataDir               ----- 00712
@AutoItExe                ----- 00699
@AutoItPID                ----- 00700
@AutoItVersion            ----- 00701
@AutoItX64                ----- 00702
@CPUArch                  ----- 00734
@CRLF                     ----- 00094 00441 00798 00878
@ComSpec                  ----- 00732
@CommonFilesDir           ----- 00728
@Compiled                 ----- 00390 00401 00417 00486 00493 00694 00792
@ComputerName             ----- 00112 00217 00280 00445 00563 00565 00661 00743 00864 00867
@DesktopCommonDir         ----- 00705
@DesktopDepth             ----- 00752
@DesktopDir               ----- 00714
@DesktopHeight            ----- 00750
@DesktopRefresh           ----- 00753
@DesktopWidth             ----- 00751
@DocumentsCommonDir       ----- 00706
@FavoritesCommonDir       ----- 00707
@FavoritesDir             ----- 00716
@HomeDrive                ----- 00297 00307 00721 00842 00844 00845 00872
@HomePath                 ----- 00722
@HomeShare                ----- 00723
@IPAddress1               ----- 00661 00662 00745 00868 00971
@IPAddress2               ----- 00746 00869
@IPAddress3               ----- 00747 00870
@IPAddress4               ----- 00748 00871
@KBLayout                 ----- 00735
@LocalAppDataDir          ----- 00713
@LogonDNSDomain           ----- 00724
@LogonDomain              ----- 00725
@LogonServer              ----- 00726
@MDAY                     ----- 00548 00797 00812 00848 00849
@MIN                      ----- 00548
@MON                      ----- 00548 00797 00812 00848 00849
@MSEC                     ----- 00548
@MUILang                  ----- 00736
@MyDocumentsDir           ----- 00122 00715
@OSArch                   ----- 00737 00952
@OSBuild                  ----- 00741
@OSLang                   ----- 00738
@OSServicePack            ----- 00742
@OSType                   ----- 00739
@OSVersion                ----- 00740
@ProgramFilesDir          ----- 00127 00132 00137 00142 00147 00727
@ProgramsCommonDir        ----- 00708
@ProgramsDir              ----- 00717
@SEC                      ----- 00548
@SW_HIDE                  ----- 00775
@SW_MAXIMIZE              ----- 00639
@SW_MINIMIZE              ----- 00610 00636
@ScriptDir                ----- 00164 00696
@ScriptFullPath           ----- 00113 00697
@ScriptName               ----- 00695
@StartMenuCommonDir       ----- 00709
@StartMenuDir             ----- 00718
@StartupCommonDir         ----- 00710
@SystemDir                ----- 00730
@TempDir                  ----- 00731
@UserName                 ----- 00445 00744 00970
@UserProfileDir           ----- 00270 00719
@WindowsDir               ----- 00729
@WorkingDir               ----- 00698
@YEAR                     ----- 00548 00797 00812 00848 00849
@error                    ----- 00434 00581 00583 00602 00641 00819 00876
@extended                 ----- 00434
#### ActiveWinTitle       00118
#### AkkDir               00164
#### AkkExists            00166
#### AkkFileName          00163
#### AkkNetDir            00169
#### AkkNetExists         00171
#### AkkNetFileName       00168
#### AkkNetPath           00170
#### AkkNetTime           00492
#### AkkPath              00165
#### AkkRootDir           00159
#### AkkRootExists        00161
#### AkkRootFileName      00158
#### AkkRootPath          00160
#### AkkTime              00491
#### AkkUpdaterDir        00174
#### AkkUpdaterExists     00176
#### AkkUpdaterFileName   00173
#### AkkUpdaterNetDir     00179
#### AkkUpdaterNetExists  00181
#### AkkUpdaterNetFileName  00178
#### AkkUpdaterNetPath    00180
#### AkkUpdaterNetTime    00485
#### AkkUpdaterPath       00175
#### AkkUpdaterTime       00484
#### AkkVersion           00113
And                       ----- 00428 00457 00460 00463 00486 00493 00525 00583 00604 00776 00784 00792 00851 00920 
                                00973
Array                     ----- 00043
#### ArrayDelimItem       00273
ByRef                     ----- 00434 00651 00894
#### ComputerName         00112
Const                     ----- 00096 00097 00098 00099 00110 00111 00112 00113 00114 00115 00121 00122 00123 00124 
                                00126 00127 00128 00129 00131 00132 00133 00134 00136 00137 00138 00139 00141 00142 
                                00143 00144 00146 00147 00148 00149 00152 00153 00155 00156 00158 00159 00160 00161 
                                00163 00164 00165 00166 00168 00169 00170 00171 00173 00174 00175 00178 00179 00180 
                                00181 00183 00184 00185 00186 00188 00189 00190 00193 00194 00195 00196 00198 00199 
                                00200 00203 00204 00205 00206 00211 00217 00223 00228 00233 00234 00235 00236 00238 
                                00239 00240 00241 00243 00244 00245 00246 00248 00249 00250 00251 00253 00254 00255 
                                00256 00258 00259 00260 00261 00264 00265 00266 00267 00270 00271 00273 00280 00281 
                                00282 00296 00297 00298 00301 00302 00303 00304 00306 00307 00308 00311 00312 00313 
                                00314 00316 00317 00318 00319 00321 00349 00351 00352 00353 00356 00357 00358 00359 
                                00364 00373 00374 00375 00376 00377 00378 00798 00818 00842 00844 00845 00846 00878 
                                00897
Count                     ----- 00914 00992 00996 01000
#### CurrentFile          01049
#### Cycle                00100
Date                      ----- 00044
Debug                     ----- 00042
Default                   ----- 00597 00610 00636 00639 00818
#### Delay                00651
#### Dest                 00548
#### DestDir              00814
#### Diff                 00652
Dir                       00775 00783
#### Domain               00783
#### DownloadsDir         00270
#### DownloadsOldDir      00271
#### EcoroKpsButlerDir    00147
#### EcoroKpsButlerExists  00149
#### EcoroKpsButlerFileName  00146
#### EcoroKpsButlerPath   00148
Else                      ----- 00931 00959
EndFunc                   ----- 00437 00446 00454 00497 00535 00551 00568 00576 00616 00649 00658 00754 00761 00773 
                                00781 00788 00809 00813 00825 00829 00839 00859 00887 00892 00907 00917 00924 00940 
                                00948 00964 01034 01056 01072
EndIf                     ----- 00429 00459 00462 00465 00473 00482 00489 00496 00531 00544 00550 00561 00566 00567 
                                00575 00584 00590 00609 00611 00628 00634 00637 00640 00642 00643 00656 00770 00779 
                                00787 00807 00808 00823 00824 00855 00857 00858 00886 00923 00934 00938 00939 00946 
                                00947 00961 00962 00975 01011 01021 01024 01033 01055 01070
Enum                      ----- 00384
EventLog                  ----- 00038
#### EventLogCount        00293
#### EventLogFull         00292
#### EventLogOldest       00294
#### ExactFileDir         00297
#### ExactFileExists      00299
#### ExactFileFileName    00296
#### ExactFileNetDir      00302
#### ExactFileNetExists   00304
#### ExactFileNetFileName  00301
#### ExactFileNetPath     00303
#### ExactFilePath        00298
Exists                    00775 00783
False                     ----- 00114 00115
File                      ----- 00045
FileName                  00756 00915 00993 00997 01001
#### FilePath             01051
#### FolderList           00818
For                       ----- 00511 00524 00556 00600 00623 00820 00850 01006 01016 01065
Func                      ----- 00434 00439 00448 00456 00499 00537 00553 00570 00578 00618 00651 00660 00756 00764 
                                00775 00783 00791 00811 00814 00827 00832 00841 00861 00890 00894 00909 00919 00926 
                                00942 00950 00966 01036 01059
Global                    ----- 00096 00097 00098 00099 00100 00101 00102 00103 00104 00105 00106 00107 00108 00109 
                                00110 00111 00112 00113 00114 00115 00116 00117 00118 00119 00121 00122 00123 00124 
                                00126 00127 00128 00129 00131 00132 00133 00134 00136 00137 00138 00139 00141 00142 
                                00143 00144 00146 00147 00148 00149 00152 00153 00155 00156 00158 00159 00160 00161 
                                00163 00164 00165 00166 00168 00169 00170 00171 00173 00174 00175 00176 00178 00179 
                                00180 00181 00183 00184 00185 00186 00188 00189 00190 00191 00193 00194 00195 00196 
                                00198 00199 00200 00201 00203 00204 00205 00206 00208 00210 00211 00212 00213 00216 
                                00217 00218 00219 00222 00223 00224 00225 00227 00228 00229 00230 00233 00234 00235 
                                00236 00238 00239 00240 00241 00243 00244 00245 00246 00248 00249 00250 00251 00253 
                                00254 00255 00256 00258 00259 00260 00261 00264 00265 00266 00267 00270 00271 00273 
                                00274 00275 00276 00279 00280 00281 00282 00284 00285 00288 00289 00290 00292 00293 
                                00294 00296 00297 00298 00299 00301 00302 00303 00304 00306 00307 00308 00309 00311 
                                00312 00313 00314 00316 00317 00318 00319 00321 00349 00351 00352 00353 00354 00356 
                                00357 00358 00359 00362 00364 00373 00374 00375 00376 00377 00378 00384
IdentifyingNumber         ----- 01067
#### IdleTime             00290
If                        ----- 00214 00220 00231 00262 00268 00360 00390 00401 00417 00422 00423 00424 00425 00427 
                                00428 00457 00460 00463 00469 00477 00486 00493 00525 00541 00547 00554 00562 00564 
                                00572 00581 00583 00585 00587 00602 00604 00610 00612 00624 00625 00630 00632 00635 
                                00638 00641 00653 00768 00776 00784 00792 00805 00815 00816 00819 00847 00851 00868 
                                00869 00870 00871 00877 00920 00927 00928 00929 00930 00943 00944 00955 00957 00963 
                                00973 01008 01014 01019 01022 01031 01053 01064
In                        ----- 00600 00820 01006 01016 01065
Inet                      ----- 00046
#### IniGlobalDir         00189
#### IniGlobalExDir       00199
#### IniGlobalExExists    00201
#### IniGlobalExFileName  00198
#### IniGlobalExNetDir    00204
#### IniGlobalExNetExists  00206
#### IniGlobalExNetFileName  00203
#### IniGlobalExNetPath   00205
#### IniGlobalExNetTime   00476
#### IniGlobalExPath      00200
#### IniGlobalExTime      00475
#### IniGlobalExists      00191
#### IniGlobalFileName    00188
#### IniGlobalNetDir      00194
#### IniGlobalNetExists   00196
#### IniGlobalNetFileName  00193
#### IniGlobalNetLogDir   00234
#### IniGlobalNetLogExists  00236
#### IniGlobalNetLogFileName  00233
#### IniGlobalNetLogInstanceDir  00244
#### IniGlobalNetLogInstanceExists  00246
#### IniGlobalNetLogInstanceFileName  00243
#### IniGlobalNetLogInstancePath  00245
#### IniGlobalNetLogPath  00235
#### IniGlobalNetPath     00195
#### IniGlobalNetTime     00468
#### IniGlobalPath        00190
#### IniGlobalTime        00467
#### IniLocalDir          00184
#### IniLocalExists       00186
#### IniLocalFileName     00183
#### IniLocalPath         00185
#### IntMax               00111
#### IntMin               00110
#### IsSectionAddedToKey  00756
#### KPSInfoDir           00127
#### KPSInfoExists        00129
#### KPSInfoFileName      00126
#### KPSInfoPath          00128
#### Key                  00756
Labels                    ----- 00904 00970 00971 00972 00993 00997 01001 01012 01017
LabelsRaw                 ----- 00974 01020
#### Lines                01037
#### List                 00619
#### ListStates           00501
#### ListVisble           00523
Local                     ----- 00449 00467 00468 00475 00476 00484 00485 00491 00492 00500 00501 00510 00523 00548 
                                00579 00580 00586 00591 00598 00599 00619 00620 00621 00622 00652 00679 00682 00684 
                                00690 00798 00818 00833 00842 00844 00845 00846 00862 00863 00864 00865 00875 00876 
                                00878 00895 00897 00898 00899 00910 00911 00912 00952 00953 00954 00968 00969 00977 
                                00991 00995 00999 01003 01004 01005 01029 01037 01049 01051 01060
#### LogArchiveNetDir     00228
#### LogArchiveNetExists  00230
#### LogArchiveNetFileName  00227
#### LogArchiveNetPath    00229
#### LogDir               00211
#### LogExists            00213
#### LogFileID            00208
#### LogFileName          00210
#### LogGlobalNetDir      00223
#### LogGlobalNetExists   00225
#### LogGlobalNetFileName  00222
#### LogGlobalNetPath     00224
#### LogNetDir            00217
#### LogNetExists         00219
#### LogNetFileName       00216
#### LogNetPath           00218
#### LogPath              00212
#### LogScrapeDir         00249
#### LogScrapeExists      00251
#### LogScrapeFileName    00248
#### LogScrapeNetDir      00254
#### LogScrapeNetExists   00256
#### LogScrapeNetFileName  00253
#### LogScrapeNetPath     00255
#### LogScrapePath        00250
#### LogScreenCapDir      00259
#### LogScreenCapExists   00261
#### LogScreenCapFileName  00258
#### LogScreenCapNetDir   00265
#### LogScreenCapNetExists  00267
#### LogScreenCapNetFileName  00264
#### LogScreenCapNetPath  00266
#### LogScreenCapPath     00260
#### LogSpawnStatsNetDir  00239
#### LogSpawnStatsNetExists  00241
#### LogSpawnStatsNetFileName  00238
#### LogSpawnStatsNetPath  00240
#### LowSpaceThresholdPerc  00284
#### MEM_AVAILPAGEFILE    00384
#### MEM_AVAILPHYSRAM     00384
#### MEM_AVAILVIRTUAL     00384
#### MEM_LOAD             00384
#### MEM_TOTALPAGEFILE    00384
#### MEM_TOTALPHYSRAM     00384
#### MEM_TOTALVIRTUAL     00384
#### MacroAutoIt          00274
#### MacroDirectory       00275
#### MacroSystemInfo      00276
#### MailAddresses        00285
#### MetaProcessCountChrome  00991
#### MetaProcessCountFusionFX  00999
#### MetaProcessCountJavaw  00995
Misc                      ----- 00047
#### MsgBoxTimeout        00098
Name                      00775 00783 00900 00905 00906 01007 01066
#### NetPhoneClientDir    00142
#### NetPhoneClientExists  00144
#### NetPhoneClientFileName  00141
#### NetPhoneClientPath   00143
#### NetPhoneUser         00117
#### NetPhoneUserChecksum  00116
Next                      ----- 00521 00532 00559 00603 00644 00822 00856 01018 01027 01068
Not                       ----- 00214 00220 00231 00262 00268 00360 00401 00457 00460 00463 00602 00604 00776 00784 
                                00816 00819 00927 00943 00955 00963 00973 01031 01053
Or                        ----- 00630 00955
#### Password             00783
Path                      00775 00783
#### PowerkatalogDir      00132
#### PowerkatalogExists   00134
#### PowerkatalogFileName  00131
#### PowerkatalogPath     00133
#### ProcessName          00909
#### PromScrapeTargetsDir  00357
#### PromScrapeTargetsExists  00359
#### PromScrapeTargetsFileName  00356
#### PromScrapeTargetsPath  00358
Return                    ----- 00436 00534 00648 00655 00657 00778 00780 00828 00838 00891 00906 00916 01069 01071
#### RootDir              00153
#### RootExists           00156
#### RootFileName         00152
#### RootPath             00155
#### SHDUpdaterDir        00137
#### SHDUpdaterExists     00139
#### SHDUpdaterFileName   00136
#### SHDUpdaterPath       00138
#### ScrapeComplete       00289
ScreenCapture             ----- 00035
#### ScreenCaptureWinActivate  00115
#### ScreenCaptureWnd     00114
#### Section              00756
#### ShowFlag             00775
#### SmtpMailEHLO         00280
#### SmtpMailFirst        00281
#### SmtpMailSmtpServer   00279
#### SmtpMailTrace        00282
#### SourceDir            00814
#### SourcePath           00952
#### SpawnDir             00122
#### SpawnExists          00124
#### SpawnFileName        00121
#### SpawnPath            00123
#### StartTimer           00101
Static                    ----- 00895
#### Static$iDx           00895
Step                      ----- 00556 00850
#### T1                   00096
#### T2                   00097
Text                      00439 00903 01009
Then                      ----- 00214 00220 00231 00262 00268 00360 00390 00401 00417 00421 00422 00423 00424 00425 
                                00427 00428 00430 00457 00460 00463 00469 00477 00486 00493 00525 00541 00547 00554 
                                00562 00564 00572 00581 00583 00585 00587 00602 00604 00610 00612 00624 00625 00630 
                                00632 00635 00638 00641 00653 00768 00776 00784 00792 00805 00815 00816 00819 00847 
                                00848 00851 00868 00869 00870 00871 00877 00920 00927 00928 00929 00930 00943 00944 
                                00955 00957 00963 00973 01008 01014 01019 01022 01031 01053 01064
#### Timer                00651
#### Timer1               00102
#### Timer2               00103
#### Timer3               00104
#### Timer4               00105
#### Timer5               00106
#### Timer6               00107
#### Timer7               00108
#### Timer8               00109
Timers                    ----- 00041
To                        ----- 00511 00524 00556 00623 00850
#### TrayTipTimeout       00099
True                      ----- 00818
Type                      ----- 00901 01010
#### UserName             00783
Value                     00756 00902 01025
WEnd                      ----- 00432 00837
#### WIN_STATE_ACTIVE     00376
#### WIN_STATE_ENABLED    00375
#### WIN_STATE_EXISTS     00373
#### WIN_STATE_MAXIMIZED  00378
#### WIN_STATE_MINIMIZED  00377
#### WIN_STATE_VISIBLE    00374
Warning                   00798 00878
While                     ----- 00419 00834
WinAPISys                 ----- 00037
#### WmiExporterCollectorTextfileDir  00349
#### WmiExporterCollectorsEnabled  00321
#### WmiExporterGlobalNetSetupTime  00954
#### WmiExporterLocalDir  00307
#### WmiExporterLocalExists  00309
#### WmiExporterLocalFileName  00306
#### WmiExporterLocalPath  00308
#### WmiExporterLocalTime  00953
#### WmiExporterMetadataArray  01003
#### WmiExporterMetadataArrayRet  01029
#### WmiExporterMetadataDir  00352
#### WmiExporterMetadataExists  00354
#### WmiExporterMetadataFileName  00351
#### WmiExporterMetadataPath  00353
#### WmiExporterMetadataString  00362
#### WmiExporterParams    00364
#### WmiExporterX32GlobalNetSetupDir  00312
#### WmiExporterX32GlobalNetSetupExists  00314
#### WmiExporterX32GlobalNetSetupFileName  00311
#### WmiExporterX32GlobalNetSetupPath  00313
#### WmiExporterX64GlobalNetSetupDir  00317
#### WmiExporterX64GlobalNetSetupExists  00319
#### WmiExporterX64GlobalNetSetupFileName  00316
#### WmiExporterX64GlobalNetSetupPath  00318
#### aArray               00833
#### aColorsGrey          00598
#### aComputerSystemProduct  00690
#### aList                00500
#### aMapKeys             01005
#### aMemStats            00977
#### aPos                 00591
#### aProcessList         00911
#### aReturn              01060
#### asBody               00865
au3                       ----- 00035 00037 00038 00041 00042 00043 00044 00045 00046 00047
#### dieSiebenötigen     00798
#### hDownload            00288
#### hEventLog            00449
hWnd                      00580 00620
hWndActive                00579 00621
#### hWndActivePid        00119
#### iBytes               00832
#### iCount               00599
#### iErr                 00876
#### iError               00434
#### iExtended            00434
iFreeSpace                00844 00861
iFreeSpacePerc            00846 00861
#### iIndex               00833
#### iIsAdmin             00679
#### iKb                  00890
#### iResponse            00875
iState                    00510 00586
#### iTickCount           00682
#### iTickCount64         00684
iTotalSpace               00845 00861
ip_address                ----- 00971
#### kopierenSiediesebitteaneinenanderenOrt.'&@CRLF&'AlleDateienausdemOrdnerwurdenbereitsindenOrdnerverschoben.'&@CRLF&'DerOrdneristübereineVerknüpfunginzuerreichen.'&@CRLF&'AlleIhreDateiendieimOrdnerble  00798
#### mLabels              00899
#### mMap                 00894
#### mMetrics             00968
mResult                   00898 00910
#### nValue               00894
netphone_user             ----- 00972
#### oColItems            01060
#### oWMIService          01060
process                   ----- 00993 00997 01001
#### sDir                 00912
#### sDrive               00912
#### sExtension           00912
#### sFileName            00912
#### sFromAddress         00863
#### sFromName            00862
sLabel                    00842 00861
#### sLabels              01004
#### sLastName            01004
sName                     00894 00969
#### sSubject             00864
#### sText                00894
#### sTextDefault         00897
#### sTitle               00622
#### sToAddress           00861
#### sType                00894
username                  ----- 00970
#### vValue               00434
#### vVar                 00434
#### werdendemnächstunwiderruflichGELÖSCHT!'&@CRLF&'BittesichtenundsichernSieambestenjetztsofortIhreweiterhinbenötigtenDateien.'&@CRLF&'SollderOrdnerjetztgeöffnetwerden?'&@CRLF  00798
== Sort Func Names Within #regions =====================================================================
 --------------- Current sequence  ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000027   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000048   #Region - Options
0000000093   #EndRegion - Options
0000000095   #Region Globals 1
0000000150   #EndRegion Globals 1
0000000151   #Region Globals 2
0000000277   #EndRegion Globals 2
0000000278   #Region Globals SMTP
0000000286   #EndRegion Globals SMTP
0000000287   #Region Globals Prometheus WMI Exporter
0000000369   #EndRegion Globals Prometheus WMI Exporter
0000000370   #Region AutoItConstants
0000000380   #EndRegion AutoItConstants
0000000381   #Region MemoryConstants
0000000386   #EndRegion MemoryConstants
0000000387   #Region
0000000434   Func _SetVar(ByRef $vVar, $vValue, $iError = @error, $iExtended = @extended)
0000000437   EndFunc   ;==>_SetVar
0000000439   Func ConsoleLog($Text)
0000000446   EndFunc   ;==>ConsoleLog
0000000448   Func EventLog()
0000000454   EndFunc   ;==>EventLog
0000000456   Func GetGlobalConfig()
0000000497   EndFunc   ;==>GetGlobalConfig
0000000499   Func GetWinList()
0000000535   EndFunc   ;==>GetWinList
0000000537   Func ManageLogFile()
0000000551   EndFunc   ;==>ManageLogFile
0000000553   Func ReadGlobalConfig()
0000000568   EndFunc   ;==>ReadGlobalConfig
0000000570   Func ReadLocalConfig()
0000000576   EndFunc   ;==>ReadLocalConfig
0000000578   Func ScreenCaptureNetPhoneClient()
0000000616   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000618   Func ScreenCaptureWnd()
0000000649   EndFunc   ;==>ScreenCaptureWnd
0000000651   Func Timeout(ByRef $Timer, $Delay)
0000000658   EndFunc   ;==>Timeout
0000000660   Func WriteLogStartup()
0000000754   EndFunc   ;==>WriteLogStartup
0000000756   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000761   EndFunc   ;==>WriteLogStartupIni
0000000762   #EndRegion
0000000763   #Region CheckAndRunProc
0000000764   Func Check()
0000000773   EndFunc   ;==>Check
0000000775   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000781   EndFunc   ;==>CheckAndRunProc
0000000783   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000788   EndFunc   ;==>CheckAndRunProcAs
0000000789   #EndRegion CheckAndRunProc
0000000790   #Region CleaningDownloads
0000000791   Func CleaningDownloads()
0000000809   EndFunc   ;==>CleaningDownloads
0000000811   Func DownloadsNeedCleaning()
0000000813   EndFunc   ;==>DownloadsNeedCleaning
0000000814   Func FileDirMoveRec($SourceDir, $DestDir)
0000000825   EndFunc   ;==>FileDirMoveRec
0000000827   Func GetDownloadsLastCleaningDate()
0000000829   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000830   #EndRegion CleaningDownloads
0000000831   #Region FreeSpaceCheck
0000000832   Func ByteSuffix($iBytes)
0000000839   EndFunc   ;==>ByteSuffix
0000000841   Func CheckHomeDriveSpaceFree()
0000000859   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000861   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000887   EndFunc   ;==>SendMailLowSpace
0000000888   #EndRegion FreeSpaceCheck
0000000889   #Region WMI Exporter
0000000890   Func _FormatKbToGb($iKb)
0000000892   EndFunc   ;==>_FormatKbToGb
0000000894   Func _PrometheusNewDesc(ByRef $mMap, $sName, $sType, $nValue = 0, $sText = "")
0000000907   EndFunc   ;==>_PrometheusNewDesc
0000000909   Func MetaProcessCount($ProcessName)
0000000917   EndFunc   ;==>MetaProcessCount
0000000919   Func Scrape()
0000000924   EndFunc   ;==>Scrape
0000000926   Func ScrapeDownload()
0000000940   EndFunc   ;==>ScrapeDownload
0000000942   Func SetupExactFile()
0000000948   EndFunc   ;==>SetupExactFile
0000000950   Func SetupWmiExporter()
0000000964   EndFunc   ;==>SetupWmiExporter
0000000966   Func WriteMetaDataFile()
0000001034   EndFunc   ;==>WriteMetaDataFile
0000001036   Func WriteScrapeTargetFile()
0000001056   EndFunc   ;==>WriteScrapeTargetFile
0000001057   #EndRegion WMI Exporter
0000001058   #Region UDF
0000001059   Func _ComputerNameAndModel()
0000001072   EndFunc   ;==>_ComputerNameAndModel
0000001073   #EndRegion UDF
 --------------- New Sequence      ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000027   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000048   #Region - Options
0000000093   #EndRegion - Options
0000000095   #Region Globals 1
0000000150   #EndRegion Globals 1
0000000151   #Region Globals 2
0000000277   #EndRegion Globals 2
0000000278   #Region Globals SMTP
0000000286   #EndRegion Globals SMTP
0000000287   #Region Globals Prometheus WMI Exporter
0000000369   #EndRegion Globals Prometheus WMI Exporter
0000000370   #Region AutoItConstants
0000000380   #EndRegion AutoItConstants
0000000381   #Region MemoryConstants
0000000386   #EndRegion MemoryConstants
0000000387   #Region
0000000434   Func _SetVar(ByRef $vVar, $vValue, $iError = @error, $iExtended = @extended)
0000000437   EndFunc   ;==>_SetVar
0000000439   Func ConsoleLog($Text)
0000000446   EndFunc   ;==>ConsoleLog
0000000448   Func EventLog()
0000000454   EndFunc   ;==>EventLog
0000000456   Func GetGlobalConfig()
0000000497   EndFunc   ;==>GetGlobalConfig
0000000499   Func GetWinList()
0000000535   EndFunc   ;==>GetWinList
0000000537   Func ManageLogFile()
0000000551   EndFunc   ;==>ManageLogFile
0000000553   Func ReadGlobalConfig()
0000000568   EndFunc   ;==>ReadGlobalConfig
0000000570   Func ReadLocalConfig()
0000000576   EndFunc   ;==>ReadLocalConfig
0000000578   Func ScreenCaptureNetPhoneClient()
0000000616   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000618   Func ScreenCaptureWnd()
0000000649   EndFunc   ;==>ScreenCaptureWnd
0000000651   Func Timeout(ByRef $Timer, $Delay)
0000000658   EndFunc   ;==>Timeout
0000000660   Func WriteLogStartup()
0000000754   EndFunc   ;==>WriteLogStartup
0000000756   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000761   EndFunc   ;==>WriteLogStartupIni
0000000762   #EndRegion
0000000763   #Region CheckAndRunProc
0000000764   Func Check()
0000000773   EndFunc   ;==>Check
0000000775   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000781   EndFunc   ;==>CheckAndRunProc
0000000783   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000788   EndFunc   ;==>CheckAndRunProcAs
0000000789   #EndRegion CheckAndRunProc
0000000790   #Region CleaningDownloads
0000000791   Func CleaningDownloads()
0000000809   EndFunc   ;==>CleaningDownloads
0000000811   Func DownloadsNeedCleaning()
0000000813   EndFunc   ;==>DownloadsNeedCleaning
0000000814   Func FileDirMoveRec($SourceDir, $DestDir)
0000000825   EndFunc   ;==>FileDirMoveRec
0000000827   Func GetDownloadsLastCleaningDate()
0000000829   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000830   #EndRegion CleaningDownloads
0000000831   #Region FreeSpaceCheck
0000000832   Func ByteSuffix($iBytes)
0000000839   EndFunc   ;==>ByteSuffix
0000000841   Func CheckHomeDriveSpaceFree()
0000000859   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000861   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000887   EndFunc   ;==>SendMailLowSpace
0000000888   #EndRegion FreeSpaceCheck
0000000889   #Region WMI Exporter
0000000890   Func _FormatKbToGb($iKb)
0000000892   EndFunc   ;==>_FormatKbToGb
0000000894   Func _PrometheusNewDesc(ByRef $mMap, $sName, $sType, $nValue = 0, $sText = "")
0000000907   EndFunc   ;==>_PrometheusNewDesc
0000000909   Func MetaProcessCount($ProcessName)
0000000917   EndFunc   ;==>MetaProcessCount
0000000919   Func Scrape()
0000000924   EndFunc   ;==>Scrape
0000000926   Func ScrapeDownload()
0000000940   EndFunc   ;==>ScrapeDownload
0000000942   Func SetupExactFile()
0000000948   EndFunc   ;==>SetupExactFile
0000000950   Func SetupWmiExporter()
0000000964   EndFunc   ;==>SetupWmiExporter
0000000966   Func WriteMetaDataFile()
0000001034   EndFunc   ;==>WriteMetaDataFile
0000001036   Func WriteScrapeTargetFile()
0000001056   EndFunc   ;==>WriteScrapeTargetFile
0000001057   #EndRegion WMI Exporter
0000001058   #Region UDF
0000001059   Func _ComputerNameAndModel()
0000001072   EndFunc   ;==>_ComputerNameAndModel
0000001073   #EndRegion UDF
== END Sort Func Names Within #Region - #EndRegion =====================================================

