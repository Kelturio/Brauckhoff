========================================================================================================
===  Tidy report for :C:\Users\bauer\Documents\GitHub\Brauckhoff\src\akk.au3
========================================================================================================

00001    #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_Icon=icons\MyAutoIt3_Blue.ico
00003    #AutoIt3Wrapper_Outfile=..\bin\akk.exe
00004    #AutoIt3Wrapper_Res_Comment=Hallo Werner!
00005    #AutoIt3Wrapper_Res_Description=Akk Brauckhoff Bot
00006    #AutoIt3Wrapper_Res_Fileversion=1.0.0.92
00007    #AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
00008    #AutoIt3Wrapper_Res_ProductName=Akk Brauckhoff Bot
00009    #AutoIt3Wrapper_Res_CompanyName=Sliph Co.
00010    #AutoIt3Wrapper_Res_LegalCopyright=Searinox
00011    #AutoIt3Wrapper_Res_LegalTradeMarks=Akk
00012    #AutoIt3Wrapper_Res_SaveSource=y
00013    #AutoIt3Wrapper_Res_Language=1031
00014    #AutoIt3Wrapper_Res_Field=Made By|Searinox
00015    #AutoIt3Wrapper_Run_AU3Check=n
00016    #AutoIt3Wrapper_AU3Check_Stop_OnWarning=y
00017    #AutoIt3Wrapper_AU3Check_Parameters=-d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -v 1 -v 3
00018    #AutoIt3Wrapper_Run_Before=call "..\compile\before.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00019    #AutoIt3Wrapper_Run_After=call "..\compile\after.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00020    #AutoIt3Wrapper_Run_Tidy=y
00021    #Tidy_Parameters=/tc 4 /gd /reel /sci 9 /kv 0 /bdir "tidy\bdir\" /sf
00022    #AutoIt3Wrapper_Run_Au3Stripper=y
00023    #Au3Stripper_Parameters=/tl /debug /pe /mi=99 /rm /rsln
00024    #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
00025    #cs ----------------------------------------------------------------------------
00026       
00027    #ce ----------------------------------------------------------------------------
00028    #include <AutoItConstants.au3>
00029    #include <MsgBoxConstants.au3>
00030    #include <TrayConstants.au3>
00031    #include <FileConstants.au3>
00032    #include <ScreenCapture.au3>
00033    #include <EventLog.au3>
00034    #include <Timers.au3>
00035    #include <Debug.au3>
00036    #include <Array.au3>
00037    #include <File.au3>
00038    #include <Misc.au3>
00039    #include <Date.au3>
00040    #include <Inet.au3>
00041    #Region - Options
00042    ;~ Opt('CaretCoordMode', 0)				; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.
00043    ;~ Opt('ExpandEnvStrings', 1)			; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).
00044    Opt('ExpandVarStrings', 1)            ; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).
00045    ;~ Opt('FtpBinaryMode', 0)				; 1 = Binary transfer, 0 = ASCII transfer.
00046    ;~ Opt('GUICloseOnESC', 0)				; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).
00047    ; 										  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.
00048    ;~ Opt('GUICoordMode', 2)				; 1 = Absolute coordinates still relative to the dialog box.
00049    ; 										  0 = Relative position to the start of the last control (Upper left corner).
00050    ; 										  2 = Cell positionining relative to current cell.
00051    ;~ Opt('GUIDataSeparatorChar', '')		; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is ''.
00052    ;~ Opt('GUIEventOptions', 1)			; 0 = Windows behavior on click on Minimize, Restore and Maximize.
00053    ;										  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.
00054    ;										  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.
00055    ;										  3 = Combined mode of 1 & 2.
00056    ;~ Opt('GUIOnEventMode', 1)				; 0 = Disable, 1 = Enable.
00057    ;~ Opt('GUIResizeMode', 1)				; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).
00058    ;~ Opt('MouseClickDelay', 10)			; ? = 10 milliseconds by default.
00059    ;~ Opt('MouseClickDownDelay', 10)		; ? = 10 milliseconds by default.
00060    ;~ Opt('MouseClickDragDelay', 250)		; ? = 250 milliseconds by default.
00061    ;~ Opt('MouseCoordMode', 0)				; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.
00062    Opt('MustDeclareVars', 1)            ; 0 = No, 1 = Require pre-declare.
00063    ;~ Opt('OnExitFunc', '')				; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).
00064    ;~ Opt('PixelCoordMode', 2)                ; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.
00065    ;~ Opt('SendAttachMode', 1)				; 0 = Don't attach, 1 = Attach.
00066    ;~ Opt('SendCapslockMode', 0)			; 1 = Store and restore, 0 = Don't store / restore.
00067    ;~ Opt('SendKeyDelay', 5)				; ? = 5 milliseconds by default.
00068    ;~ Opt('SendKeyDownDelay', 1)			; ? = 1 millisecond by default.
00069    ;~ Opt('TCPTimeout', 100)				; ? = 100 milliseconds by default.
00070    Opt('TrayAutoPause', 0)                ; 1 = AutoPausing is On, 0 = AutoPausing is Off.
00071    ;~ Opt('TrayIconDebug', 1)				; 0 = No info, 1 = Debug line info.
00072    ;~ Opt('TrayIconHide', 1)				; 0 = Show, 1 = Hide.
00073    ;~ Opt('TrayMenuMode', 1)				; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,
00074    ;											user created checked items will automatically unchecked, if you double click the tray
00075    ;											icon then the controlid is returned which has the "Default"-style.
00076    ;										  1 = No default menu.
00077    ;										  2 = User created checked items will not automatically unchecked if you click it.
00078    ;										  4 = Don't return the menuitemID which has the "default"-style in
00079    ;											the main contextmenu if you double click the tray icon.
00080    ;~ Opt('TrayOnEventMode', 1)			; 0 = disable, 1 = enable.
00081    ;~ Opt('WinDetectHiddenText', 1)		; 0 = Don't detect, 1=Do detect.
00082    ;~ Opt('WinSearchChildren', 1)			; 0 = No, 1 = Search children also.
00083    ;~ Opt('WinTextMatchMode', 4)			; 1 = Complete / Slow mode, 2 = Quick mode.
00084    ;~ Opt('WinTitleMatchMode', 4)			; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.
00085    ;~ Opt('WinWaitDelay', 250)				; ? = 250 milliseconds by default.
00086    #EndRegion - Options
00087    ConsoleWrite(@CRLF)
00088    #Region Globals 1
00089    Global Const $T1 = 15e3
00090    Global Const $T2 = 15e3
00091    Global Const $MsgBoxTimeout = 60 * 5
00092    Global Const $TrayTipTimeout = 15
00093    Global $Cycle = 0
00094    Global $StartTimer = TimerInit()
00095    Global $Timer1 = $StartTimer
00096    Global $Timer2 = $StartTimer
00097    Global $Timer3 = $StartTimer
00098    Global $Timer4 = $StartTimer
00099    Global $Timer5 = $StartTimer
00100    Global $Timer6 = $StartTimer
00101    Global $Timer7 = $StartTimer
00102    Global $Timer8 = $StartTimer
00103    Global Const $IntMin = 0x8000000000000000
00104    Global Const $IntMax = 0x7FFFFFFFFFFFFFFF
00105    Global Const $ComputerName = StringReplace(StringFormat("%-16s", @ComputerName), " ", ".")
00106    Global Const $AkkVersion = FileGetVersion(@ScriptFullPath)
00107    Global Const $ScreenCaptureWnd = False
00108    Global $NetPhoneUserChecksum = ""
00109    
00110    Global Const $SpawnFileName = "ShadowSpawn.exe"
00111    Global Const $SpawnDir = @MyDocumentsDir & "\Isopedia GmbH\ShadowSpawn\"
00112    Global Const $SpawnPath = $SpawnDir & $SpawnFileName
00113    Global Const $SpawnExists = FileExists($SpawnPath)
00114    
00115    Global Const $KPSInfoFileName = "KPSInfo.exe"
00116    Global Const $KPSInfoDir = @ProgramFilesDir & "\KPS designstudio\KPSInfo\"
00117    Global Const $KPSInfoPath = $KPSInfoDir & $KPSInfoFileName
00118    Global Const $KPSInfoExists = FileExists($KPSInfoPath)
00119    
00120    Global Const $PowerkatalogFileName = "Powerkatalog-Schnittstelle.exe"
00121    Global Const $PowerkatalogDir = @ProgramFilesDir & "\KPS designstudio\Powerkatalog-Schnittstelle\"
00122    Global Const $PowerkatalogPath = $PowerkatalogDir & $PowerkatalogFileName
00123    Global Const $PowerkatalogExists = FileExists($PowerkatalogPath)
00124    
00125    Global Const $SHDUpdaterFileName = "SHDUpdater_min.exe"
00126    Global Const $SHDUpdaterDir = @ProgramFilesDir & "\SHDUpdater\"
00127    Global Const $SHDUpdaterPath = $SHDUpdaterDir & $SHDUpdaterFileName
00128    Global Const $SHDUpdaterExists = FileExists($SHDUpdaterPath)
00129    
00130    Global Const $NetPhoneClientFileName = "NetPhone Client.exe"
00131    Global Const $NetPhoneClientDir = @ProgramFilesDir & "\NetPhone Client\"
00132    Global Const $NetPhoneClientPath = $NetPhoneClientDir & $NetPhoneClientFileName
00133    Global Const $NetPhoneClientExists = FileExists($NetPhoneClientPath)
00134    #EndRegion Globals 1
00135    #Region Globals 2
00136    Global Const $RootFileName = ""
00137    Global Const $RootDir = "\\172.16.128.4\edv\Gerrit\"
00138    Global Const $RootPath = $RootDir & $RootFileName
00139    Global Const $RootExists = FileExists($RootPath)
00140    
00141    Global Const $AkkRootFileName = ""
00142    Global Const $AkkRootDir = $RootDir & "akk\"
00143    Global Const $AkkRootPath = $AkkRootDir & $AkkRootFileName
00144    Global Const $AkkRootExists = FileExists($AkkRootPath)
00145    
00146    Global Const $AkkFileName = "akk.exe"
00147    Global Const $AkkDir = @ScriptDir & "\"
00148    Global Const $AkkPath = $AkkDir & $AkkFileName
00149    Global Const $AkkExists = FileExists($AkkPath)
00150    
00151    Global Const $AkkNetFileName = $AkkFileName
00152    Global Const $AkkNetDir = $RootDir
00153    Global Const $AkkNetPath = $AkkNetDir & $AkkNetFileName
00154    Global Const $AkkNetExists = FileExists($AkkNetPath)
00155    
00156    Global Const $AkkUpdaterFileName = "akkUpdater.exe"
00157    Global Const $AkkUpdaterDir = $AkkDir
00158    Global Const $AkkUpdaterPath = $AkkUpdaterDir & $AkkUpdaterFileName
00159    Global $AkkUpdaterExists = FileExists($AkkUpdaterPath)
00160    
00161    Global Const $AkkUpdaterNetFileName = $AkkUpdaterFileName
00162    Global Const $AkkUpdaterNetDir = $RootDir
00163    Global Const $AkkUpdaterNetPath = $AkkUpdaterNetDir & $AkkUpdaterNetFileName
00164    Global Const $AkkUpdaterNetExists = FileExists($AkkUpdaterNetPath)
00165    
00166    Global Const $IniLocalFileName = "akk.ini"
00167    Global Const $IniLocalDir = $AkkDir
00168    Global Const $IniLocalPath = $IniLocalDir & $IniLocalFileName
00169    Global Const $IniLocalExists = FileExists($IniLocalPath)
00170    
00171    Global Const $IniGlobalFileName = "akkGlobalConfig.ini"
00172    Global Const $IniGlobalDir = $AkkDir
00173    Global Const $IniGlobalPath = $IniGlobalDir & $IniGlobalFileName
00174    Global $IniGlobalExists = FileExists($IniGlobalPath)
00175    
00176    Global Const $IniGlobalNetFileName = $IniGlobalFileName
00177    Global Const $IniGlobalNetDir = $AkkRootDir
00178    Global Const $IniGlobalNetPath = $IniGlobalNetDir & $IniGlobalNetFileName
00179    Global Const $IniGlobalNetExists = FileExists($IniGlobalNetPath)
00180    
00181    Global Const $IniGlobalExFileName = "akkGlobalConfigExtended.ini"
00182    Global Const $IniGlobalExDir = $IniGlobalDir
00183    Global Const $IniGlobalExPath = $IniGlobalExDir & $IniGlobalExFileName
00184    Global $IniGlobalExExists = FileExists($IniGlobalExPath)
00185    
00186    Global Const $IniGlobalExNetFileName = $IniGlobalExFileName
00187    Global Const $IniGlobalExNetDir = $AkkRootDir
00188    Global Const $IniGlobalExNetPath = $IniGlobalExNetDir & $IniGlobalExNetFileName
00189    Global Const $IniGlobalExNetExists = FileExists($IniGlobalExNetPath)
00190    
00191    Global $LogFileID
00192    
00193    Global $LogFileName = ""
00194    Global Const $LogDir = $AkkDir & "log\"
00195    Global $LogPath = $LogDir & $LogFileName
00196    Global $LogExists = FileExists($LogPath)
00197    If Not $LogExists Then DirCreate($LogDir)
00198    
00199    Global $LogNetFileName = ""
00200    Global Const $LogNetDir = $AkkRootDir & "log\" & @ComputerName & "\"
00201    Global $LogNetPath = $LogNetDir & $LogNetFileName
00202    Global $LogNetExists = FileExists($LogNetPath)
00203    If Not $LogNetExists Then DirCreate($LogNetDir)
00204    
00205    Global $LogGlobalNetFileName = "akkGlobal.log"
00206    Global Const $LogGlobalNetDir = $AkkRootDir & "log\"
00207    Global $LogGlobalNetPath = $LogGlobalNetDir & $LogGlobalNetFileName
00208    Global $LogGlobalNetExists = FileExists($LogGlobalNetPath)
00209    
00210    Global $LogArchiveNetFileName = ""
00211    Global Const $LogArchiveNetDir = $AkkRootDir & "log\_archive\"
00212    Global $LogArchiveNetPath = $LogArchiveNetDir & $LogArchiveNetFileName
00213    Global $LogArchiveNetExists = FileExists($LogArchiveNetPath)
00214    If Not $LogArchiveNetExists Then DirCreate($LogArchiveNetDir)
00215    
00216    Global Const $IniGlobalNetLogFileName = "akkGlobal.ini"
00217    Global Const $IniGlobalNetLogDir = $AkkRootDir & "log\"
00218    Global Const $IniGlobalNetLogPath = $IniGlobalNetLogDir & $IniGlobalNetLogFileName
00219    Global Const $IniGlobalNetLogExists = FileExists($IniGlobalNetLogPath)
00220    
00221    Global Const $LogSpawnStatsNetFileName = "akkGlobalSpawnStats.ini"
00222    Global Const $LogSpawnStatsNetDir = $AkkRootDir & "log\"
00223    Global Const $LogSpawnStatsNetPath = $LogSpawnStatsNetDir & $LogSpawnStatsNetFileName
00224    Global Const $LogSpawnStatsNetExists = FileExists($LogSpawnStatsNetPath)
00225    
00226    Global Const $IniGlobalNetLogInstanceFileName = "akkMacro.ini"
00227    Global Const $IniGlobalNetLogInstanceDir = $LogNetDir
00228    Global Const $IniGlobalNetLogInstancePath = $IniGlobalNetLogInstanceDir & $IniGlobalNetLogInstanceFileName
00229    Global Const $IniGlobalNetLogInstanceExists = FileExists($IniGlobalNetLogInstancePath)
00230    
00231    Global Const $LogScrapeFileName = "scrape.prom"
00232    Global Const $LogScrapeDir = $AkkDir & "log\"
00233    Global Const $LogScrapePath = $LogScrapeDir & $LogScrapeFileName
00234    Global Const $LogScrapeExists = FileExists($LogScrapePath)
00235    
00236    Global Const $LogScrapeNetFileName = "scrape.prom"
00237    Global Const $LogScrapeNetDir = $LogNetDir
00238    Global Const $LogScrapeNetPath = $LogScrapeNetDir & $LogScrapeNetFileName
00239    Global Const $LogScrapeNetExists = FileExists($LogScrapeNetPath)
00240    
00241    Global Const $LogScreenCapFileName = ""
00242    Global Const $LogScreenCapDir = $AkkDir & "log\sc\"
00243    Global Const $LogScreenCapPath = $LogScreenCapDir & $LogScreenCapFileName
00244    Global Const $LogScreenCapExists = FileExists($LogScreenCapPath)
00245    If Not $LogScreenCapExists Then DirCreate($LogScreenCapDir)
00246    
00247    Global Const $LogScreenCapNetFileName = ""
00248    Global Const $LogScreenCapNetDir = $AkkRootDir & "log\_sc\NetPhoneUser\"
00249    Global Const $LogScreenCapNetPath = $LogScreenCapNetDir & $LogScreenCapNetFileName
00250    Global Const $LogScreenCapNetExists = FileExists($LogScreenCapNetPath)
00251    If Not $LogScreenCapNetExists Then DirCreate($LogScreenCapNetDir)
00252    
00253    Global Const $DownloadsDir = @UserProfileDir & "\Downloads"
00254    Global Const $DownloadsOldDir = $DownloadsDir & " alt"
00255    
00256    Global Const $ArrayDelimItem = "|"
00257    Global $MacroAutoIt[1][2]
00258    Global $MacroDirectory[1][2]
00259    Global $MacroSystemInfo[1][2]
00260    #EndRegion Globals 2
00261    #Region Globals SMTP
00262    Global $SmtpMailSmtpServer = ""
00263    Global Const $SmtpMailEHLO = @ComputerName
00264    Global Const $SmtpMailFirst = -1
00265    Global Const $SmtpMailTrace = 0
00266    
00267    Global $LowSpaceThresholdPerc
00268    Global $MailAddresses[10][2]
00269    #EndRegion Globals SMTP
00270    #Region Globals Prometheus WMI Exporter
00271    Global $hDownload = 0
00272    Global $ScrapeComplete = 1
00273    Global $WmiExporter1PID
00274    Global $IdleTime = 0
00275    
00276    Global $EventLogFull
00277    Global $EventLogCount
00278    Global $EventLogOldest
00279    
00280    Global Const $ExactFileFileName = "exf.exe"
00281    Global Const $ExactFileDir = @HomeDrive & "\Brauckhoff\akk\" ;@SCRIPTDIR?
00282    Global Const $ExactFilePath = $ExactFileDir & $ExactFileFileName
00283    Global $ExactFileExists = FileExists($ExactFilePath)
00284    
00285    Global Const $ExactFileNetFileName = $ExactFileFileName
00286    Global Const $ExactFileNetDir = $AkkRootDir
00287    Global Const $ExactFileNetPath = $ExactFileNetDir & $ExactFileNetFileName
00288    Global Const $ExactFileNetExists = FileExists($ExactFileNetPath)
00289    
00290    Global Const $WmiExporterLocalFileName = "wmi_exporter.exe"
00291    Global Const $WmiExporterLocalDir = @HomeDrive & "\Brauckhoff\wmi_exporter\" ;@SCRIPTDIR?
00292    Global Const $WmiExporterLocalPath = $WmiExporterLocalDir & $WmiExporterLocalFileName
00293    Global $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00294    
00295    Global Const $WmiExporterX32GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-386.exe"
00296    Global Const $WmiExporterX32GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00297    Global Const $WmiExporterX32GlobalNetSetupPath = $WmiExporterX32GlobalNetSetupDir & $WmiExporterX32GlobalNetSetupFileName
00298    Global Const $WmiExporterX32GlobalNetSetupExists = FileExists($WmiExporterX32GlobalNetSetupPath)
00299    
00300    Global Const $WmiExporterX64GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-amd64.exe"
00301    Global Const $WmiExporterX64GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00302    Global Const $WmiExporterX64GlobalNetSetupPath = $WmiExporterX64GlobalNetSetupDir & $WmiExporterX64GlobalNetSetupFileName
00303    Global Const $WmiExporterX64GlobalNetSetupExists = FileExists($WmiExporterX64GlobalNetSetupPath)
00304    
00305    Global Const $WmiExporterCollectorsEnabled = "cs,logical_disk,memory,net,os,process,service,system,textfile"
00306    ;~          & "" _ ;~ & "ad" _ ; Active Directory Domain Services
00307    ;~          & "" _ ;~ & ",cpu" _ ; CPU usage
00308    ;~          & "cs" _ ; "Computer System" metrics (system properties, num cpus/total memory)
00309    ;~          & "" _ ;~ & ",dns" _ ; DNS Server
00310    ;~          & "" _ ;~ & ",hyperv" _ ; Hyper-V hosts
00311    ;~          & "" _ ;~ & ",iis" _ ; IIS sites and applications
00312    ;~          & ",logical_disk" _ ; Logical disks, disk I/O
00313    ;~          & ",memory" _ ; Memory usage metrics
00314    ;~          & "" _ ;~ & ",msmq" _ ; MSMQ queues
00315    ;~          & "" _ ;~ & ",mssql" _ ; SQL Server Performance Objects metrics
00316    ;~          & "" _ ;~ & ",netframework_clrexceptions" _ ; .NET Framework CLR Exceptions
00317    ;~          & "" _ ;~ & ",netframework_clrinterop" _ ; .NET Framework Interop Metrics
00318    ;~          & "" _ ;~ & ",netframework_clrjit" _ ; .NET Framework JIT metrics
00319    ;~          & "" _ ;~ & ",netframework_clrloading" _ ; .NET Framework CLR Loading metrics
00320    ;~          & "" _ ;~ & ",netframework_clrlocksandthreads" _ ; .NET Framework locks and metrics threads
00321    ;~          & "" _ ;~ & ",netframework_clrmemory" _ ; .NET Framework Memory metrics
00322    ;~          & "" _ ;~ & ",netframework_clrremoting" _ ; .NET Framework Remoting metrics
00323    ;~          & "" _ ;~ & ",netframework_clrsecurity" _ ; .NET Framework Security Check metrics
00324    ;~          & ",net" _ ; Network interface I/O
00325    ;~          & ",os" _ ; OS metrics (memory, processes, users)
00326    ;~          & ",process" _ ; Per-process metrics
00327    ;~          & ",service" _ ; Service state metrics
00328    ;~          & ",system" _ ; System calls
00329    ;~          & "" _ ;~ & ",tcp" _ ; TCP connections
00330    ;~          & ",textfile" _ ; Read prometheus metrics from a text file
00331    ;~          & "" _ ;~ & ",vmware" ; Performance counters installed by the Vmware Guest agent
00332    
00333    Global Const $WmiExporterCollectorTextfileDir = $WmiExporterLocalDir & "textfile_inputs\"
00334    
00335    Global Const $WmiExporterMetadataFileName = "metadata.prom"
00336    Global Const $WmiExporterMetadataDir = $WmiExporterCollectorTextfileDir
00337    Global Const $WmiExporterMetadataPath = $WmiExporterMetadataDir & $WmiExporterMetadataFileName
00338    Global $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00339    
00340    Global $WmiExporterMetadataString
00341    Global $WmiExporterMetadataArray[13]
00342    Global $WmiExporterMetadataArrayRet
00343    
00344    Global Const $WmiExporterParams = '' _
00345                   & ' --log.format logger:eventlog?name=wmi_exporter' _
00346                   & ' --collectors.enabled ' & $WmiExporterCollectorsEnabled _
00347                   & ' --telemetry.addr :9182 ' _
00348                   & ' --collector.textfile.directory ' & $WmiExporterCollectorTextfileDir
00349    #EndRegion Globals Prometheus WMI Exporter
00350    #Region
00351    _Singleton("akk")
00352    
00353    If @Compiled Then Sleep(5e3)
00354    
00355    ReadLocalConfig()
00356    
00357    ManageLogFile()
00358    
00359    ConsoleLog("akk.exe läuft Spawn, KPSInfo & WMI Exporter werden überwacht")
00360    ;~ ConsoleLog($SpawnPath)
00361    ;~ ConsoleLog($KPSInfoPath)
00362    ;~ ConsoleLog($WmiExporterLocalPath)
00363    ;~ ConsoleLog("werden überwacht")
00364    If Not @Compiled Then ConsoleLog("$WmiExporterParams: " & $WmiExporterParams)
00365    
00366    GetGlobalConfig()
00367    ReadGlobalConfig()
00368    EventLog()
00369    SetupWmiExporter()
00370    SetupExactFile()
00371    CleaningDownloads()
00372    CheckHomeDriveSpaceFree()
00373    ;~ GetWinList()
00374    ;~ ScreenCaptureWnd()
00375    ScreenCaptureNetPhoneClient()
00376    WriteLogStartup()
00377    
00378    If @Compiled Then Sleep(5e3)
00379    
00380  +-While 42
00381  |        Sleep(10)
00382  |  +-    If (Mod($Cycle, 300) = 0) Then
00383  |  |            If Timeout($Timer1, 15e3 * 1) Then Check()
00384  |  |            If Timeout($Timer2, 60e3 * 5) Then GetGlobalConfig()
00385  |  |            If Timeout($Timer3, 60e3 * 5) Then ManageLogFile()
00386  |  |            If Timeout($Timer4, 60e3 * 10) Then Scrape()
00387  |  |            If Timeout($Timer5, 30e3 * 1) Then EventLog()
00388  |  |            If Timeout($Timer6, 30e3 * 1) Then WriteMetaDataFile()
00389  |  |            If $IdleTime > 60e3 * 2 And Timeout($Timer7, 60e3 * 15) Then ScreenCaptureNetPhoneClient()
00390  |  +-    EndIf
00391  |        If (Mod($Cycle, 500) = 0) Then ScrapeDownload()
00392  |        $Cycle += 1
00393  +-WEnd
00394    
00395  +-Func ConsoleLog($Text)
00396  |        $Text = StringFormat("%10s", $Cycle) & " : " & $Text
00397  |        ConsoleWrite($Text & @CRLF)
00398  |    ;~     If @OSArch <> "WIN_10" Then TrayTip("", $Text, $TrayTipTimeout, $TIP_ICONEXCLAMATION)
00399  |        _FileWriteLog($LogPath, $Text)
00400  |        _FileWriteLog($LogNetPath, $Text)
00401  |        _FileWriteLog($LogGlobalNetPath, StringFormat("%-16s", @ComputerName) & " " & StringFormat("%-16s", @UserName) & " " & $Text)
00402  +-EndFunc   ;==>ConsoleLog
00403    
00404  +-Func EventLog()
00405  |        Local $hEventLog = _EventLog__Open("", "Application")
00406  |        $EventLogFull = _EventLog__Full($hEventLog)
00407  |        $EventLogCount = _EventLog__Count($hEventLog)
00408  |        $EventLogOldest = _EventLog__Oldest($hEventLog)
00409  |        _EventLog__Close($hEventLog)
00410  +-EndFunc   ;==>EventLog
00411    
00412  +-Func GetGlobalConfig()
00413  |  +-    If $IniGlobalNetExists And Not $IniGlobalExists Then
00414  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00415  |  +-    EndIf
00416  |  +-    If $IniGlobalExNetExists And Not $IniGlobalExExists Then
00417  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00418  |  +-    EndIf
00419  |  +-    If $AkkUpdaterNetExists And Not $AkkUpdaterExists Then
00420  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00421  |  +-    EndIf
00422  |    
00423  |        Local $IniGlobalTime = FileGetTime($IniGlobalPath, $FT_MODIFIED, $FT_STRING)
00424  |        Local $IniGlobalNetTime = FileGetTime($IniGlobalNetPath, $FT_MODIFIED, $FT_STRING)
00425  |  +-    If $IniGlobalTime <> $IniGlobalNetTime Then
00426  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00427  |  |            ConsoleLog("Reload Config " & $IniGlobalNetPath)
00428  |  |            ReadGlobalConfig()
00429  |  +-    EndIf
00430  |    
00431  |        Local $IniGlobalExTime = FileGetTime($IniGlobalExPath, $FT_MODIFIED, $FT_STRING)
00432  |        Local $IniGlobalExNetTime = FileGetTime($IniGlobalExNetPath, $FT_MODIFIED, $FT_STRING)
00433  |  +-    If $IniGlobalExTime <> $IniGlobalExNetTime Then
00434  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00435  |  |            ConsoleLog("Reload Config Ex" & $IniGlobalExNetPath)
00436  |  |            ReadGlobalConfig()
00437  |  |            WriteMetaDataFile()
00438  |  +-    EndIf
00439  |    
00440  |        Local $AkkUpdaterTime = FileGetTime($AkkUpdaterPath, $FT_MODIFIED, $FT_STRING)
00441  |        Local $AkkUpdaterNetTime = FileGetTime($AkkUpdaterNetPath, $FT_MODIFIED, $FT_STRING)
00442  |  +-    If $AkkUpdaterTime <> $AkkUpdaterNetTime And @Compiled Then
00443  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00444  |  |            ConsoleLog("Reload Akk Updater " & $AkkUpdaterNetPath)
00445  |  +-    EndIf
00446  |    
00447  |        Local $AkkTime = FileGetTime($AkkPath, $FT_MODIFIED, $FT_STRING)
00448  |        Local $AkkNetTime = FileGetTime($AkkNetPath, $FT_MODIFIED, $FT_STRING)
00449  |  +-    If $AkkTime <> $AkkNetTime And @Compiled Then
00450  |  |            CheckAndRunProc($AkkUpdaterFileName, $AkkUpdaterDir, $AkkUpdaterPath, $AkkUpdaterExists)
00451  |  |            ConsoleLog("Reload Akk " & $AkkNetPath)
00452  |  +-    EndIf
00453  +-EndFunc   ;==>GetGlobalConfig
00454    
00455  +-Func GetWinList()
00456  |        Local $aList = WinList()
00457  |    ;~     _DebugArrayDisplay($aList)
00458  |        Local $ListStates[1][8]
00459  |    ;~     $ListStates[0][0] = "title"
00460  |        $ListStates[0][1] = "hWnd"
00461  |        $ListStates[0][2] = "$WIN_STATE_EXISTS"
00462  |        $ListStates[0][3] = "$WIN_STATE_VISIBLE"
00463  |        $ListStates[0][4] = "$WIN_STATE_ENABLED"
00464  |        $ListStates[0][5] = "$WIN_STATE_ACTIVE"
00465  |        $ListStates[0][6] = "$WIN_STATE_MINIMIZED"
00466  |        $ListStates[0][7] = "$WIN_STATE_MAXIMIZED"
00467  |        Local $iState
00468  |  +-    For $i = 1 To $aList[0][0]
00469  |  |            $iState = WinGetState($aList[$i][1])
00470  |  |            _ArrayAdd($ListStates, $aList[$i][0] & $ArrayDelimItem _
00471  |  |  |                        & String($aList[$i][1]) & $ArrayDelimItem _
00472  |  |  |                        & BitAND($iState, $WIN_STATE_EXISTS) & $ArrayDelimItem _
00473  |  |  |                        & BitAND($iState, $WIN_STATE_VISIBLE) & $ArrayDelimItem _
00474  |  |  |                        & BitAND($iState, $WIN_STATE_ENABLED) & $ArrayDelimItem _
00475  |  |  |                        & BitAND($iState, $WIN_STATE_ACTIVE) & $ArrayDelimItem _
00476  |  |  |                        & BitAND($iState, $WIN_STATE_MINIMIZED) & $ArrayDelimItem _
00477  |  |  |                        & BitAND($iState, $WIN_STATE_MAXIMIZED), 0, $ArrayDelimItem)
00478  |  +-    Next
00479  |        $ListStates[0][0] = UBound($ListStates) - 1
00480  |    ;~     _DebugArrayDisplay($ListStates)
00481  |        Local $ListVisble[1][5] = [["", "hWnd", "$WIN_STATE_ACTIVE", "$WIN_STATE_MINIMIZED", "$WIN_STATE_MAXIMIZED"]]
00482  |  +-    For $i = 1 To $ListStates[0][0]
00483  |  |  +-        If $ListStates[$i][0] <> "" And $ListStates[$i][3] = $WIN_STATE_VISIBLE Then
00484  |  |  |                _ArrayAdd($ListVisble, $ListStates[$i][0] & $ArrayDelimItem _
00485  |  |  |  |                            & $ListStates[$i][1] & $ArrayDelimItem _
00486  |  |  |  |                            & $ListStates[$i][5] & $ArrayDelimItem _
00487  |  |  |  |                            & $ListStates[$i][6] & $ArrayDelimItem _
00488  |  |  |  |                            & $ListStates[$i][7], 0, $ArrayDelimItem)
00489  |  |  +-        EndIf
00490  |  +-    Next
00491  |        $ListVisble[0][0] = UBound($ListVisble) - 1
00492  |    ;~     _DebugArrayDisplay($ListVisble)
00493  |        Return $ListVisble
00494  +-EndFunc   ;==>GetWinList
00495    
00496  +-Func ManageLogFile()
00497  |        $LogFileName = StringFormat("%04s", $LogFileID) & ".log"
00498  |        $LogPath = $LogDir & $LogFileName
00499  |        $LogNetPath = $LogNetDir & $LogFileName
00500  |  +-    If _FileCountLines($LogPath) > 1e3 Then
00501  |  |            $LogFileID += 1
00502  |  |            IniWrite($IniLocalPath, "LogFile", "ID", $LogFileID)
00503  |  +-    EndIf
00504  |        IniWrite($IniLocalPath, "LogFile", "LogPath", $LogPath)
00505  |        IniWrite($IniLocalPath, "LogFile", "LogNetPath", $LogNetPath)
00506  |  +-    If FileGetSize($LogGlobalNetPath) / 1024 > 100 Then
00507  |  |            Local $Dest = $LogArchiveNetDir & @YEAR & @MON & @MDAY & @MIN & @SEC & @MSEC & ".log"
00508  |  |            FileMove($LogGlobalNetPath, $Dest, $FC_OVERWRITE + $FC_CREATEPATH)
00509  |  +-    EndIf
00510  +-EndFunc   ;==>ManageLogFile
00511    
00512  +-Func ReadGlobalConfig()
00513  |  +-    If FileExists($IniGlobalPath) Then
00514  |  |            $LowSpaceThresholdPerc = IniRead($IniGlobalPath, "FreeSpaceCheck", "LowSpaceThresholdPerc", 5)
00515  |  |  +-        For $i = 0 To 9 Step 1
00516  |  |  |                $MailAddresses[$i][0] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Address", "")
00517  |  |  |                $MailAddresses[$i][1] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Active", 0)
00518  |  |  +-        Next
00519  |  |            $SmtpMailSmtpServer = IniRead($IniGlobalPath, "SmtpMail", "SmtpServer", "")
00520  |  +-    EndIf
00521  |  +-    If FileExists($IniGlobalExPath) Then
00522  |  |            $WmiExporterMetadataString = IniRead($IniGlobalExPath, "MetaData", @ComputerName, "NULL")
00523  |  |  +-        If $WmiExporterMetadataString = "NULL" Then
00524  |  |  |                IniWrite($IniGlobalExNetPath, "MetaData", @ComputerName, "")
00525  |  |  +-        EndIf
00526  |  +-    EndIf
00527  +-EndFunc   ;==>ReadGlobalConfig
00528    
00529  +-Func ReadLocalConfig()
00530  |        $LogFileID = IniRead($IniLocalPath, "LogFile", "ID", "NULL")
00531  |  +-    If $LogFileID = "NULL" Then
00532  |  |            IniWrite($IniLocalPath, "LogFile", "ID", 0)
00533  |  |            $LogFileID = 0
00534  |  +-    EndIf
00535  +-EndFunc   ;==>ReadLocalConfig
00536    
00537  +-Func ScreenCaptureNetPhoneClient()
00538  |        Local $hWndActive = ScreenCaptureWnd()
00539  |        Local $hWnd = WinGetHandle("NetPhone Client")
00540  |    ;~     Local $NetPhoneUserChecksumIni = "NULL"
00541  |  +-    If @error Then
00542  |  |            If ProcessExists($NetPhoneClientFileName) Then ConsoleLog("Error ScreenCaptureNetPhoneClient")
00543  |  +-    Else
00544  |  |            Local $iState = WinGetState($hWnd)
00545  |  |  +-        If WinActivate($hWnd) Then
00546  |  |  |                Sleep(250)
00547  |  |  |                Local $aPos = WinGetPos($hWnd)
00548  |  |  |                $aPos[0] = $aPos[0] + 57
00549  |  |  |                $aPos[1] = $aPos[1] + $aPos[3] - 54
00550  |  |  |                $aPos[2] = $aPos[0] + 174
00551  |  |  |                $aPos[3] = $aPos[1] + 15
00552  |  |  |                WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneClientPos", 0, _ArrayToString($aPos))
00553  |  |  |                $NetPhoneUserChecksum = PixelChecksum($aPos[0], $aPos[1], $aPos[2], $aPos[3], 1, Default, 1)
00554  |  |  |    ;~             $NetPhoneUserChecksumIni = IniRead($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "NULL")
00555  |  |  |    ;~             If $NetPhoneUserChecksumIni = "NULL" Then
00556  |  |  |  +-            If Not FileExists($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png") _
00557  |  |  |  |                           And Not FileExists($LogScreenCapNetDir & "del\" & $NetPhoneUserChecksum & ".png") _
00558  |  |  |  |                           And Not FileExists($LogScreenCapNetDir & "ini\" & $NetPhoneUserChecksum & ".png") Then
00559  |  |  |  |                    _ScreenCapture_Capture($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png", $aPos[0], $aPos[1], $aPos[2], $aPos[3], 0)
00560  |  |  |  +-            EndIf
00561  |  |  |                If BitAND($iState, $WIN_STATE_MINIMIZED) Then WinSetState($hWnd, Default, @SW_MINIMIZE)
00562  |  |  +-        EndIf
00563  |  +-    EndIf
00564  |        WinActivate($hWndActive)
00565  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00566  |    ;~     If StringStripWS($NetPhoneUserChecksum, $STR_STRIPLEADING + $STR_STRIPTRAILING) <> "" Then
00567  |    ;~         If $NetPhoneUserChecksumIni = "NULL" Then
00568  |    ;~             IniWrite($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "")
00569  |    ;~         EndIf
00570  |    ;~     EndIf
00571  +-EndFunc   ;==>ScreenCaptureNetPhoneClient
00572    
00573  +-Func ScreenCaptureWnd()
00574  |        Local $List = GetWinList()
00575  |        Local $hWnd
00576  |        Local $hWndActive
00577  |  +-    For $i = 1 To $List[0][0]
00578  |  |  +-        If $List[$i][0] <> "" Then
00579  |  |  |  +-            If $List[$i][2] = $WIN_STATE_ACTIVE Then
00580  |  |  |  |                    $hWndActive = $List[$i][1]
00581  |  |  |  +-            EndIf
00582  |  |  |  +-            If $ScreenCaptureWnd & StringStripWS($List[$i][0], $STR_STRIPLEADING + $STR_STRIPTRAILING) = "NetPhone Client" Then
00583  |  |  |  |                    $hWnd = HWnd($List[$i][1])
00584  |  |  |  |  +-                If WinActivate($hWnd) Then
00585  |  |  |  |  |                        _ScreenCapture_CaptureWnd($LogScreenCapDir & $i & ".png", $hWnd)
00586  |  |  |  |  +-                EndIf
00587  |  |  |  |  +-                If $List[$i][3] = $WIN_STATE_MINIMIZED Then
00588  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MINIMIZE)
00589  |  |  |  |  +-                EndIf
00590  |  |  |  |  +-                If $List[$i][4] = $WIN_STATE_MAXIMIZED Then
00591  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MAXIMIZE)
00592  |  |  |  |  +-                EndIf
00593  |  |  |  |                    If @error Then ConsoleLog("Error ScreenCaptureWnd")
00594  |  |  |  +-            EndIf
00595  |  |  +-        EndIf
00596  |  +-    Next
00597  |        $hWnd = HWnd($hWndActive)
00598  |        WinActivate($hWnd)
00599  |        Return $hWnd
00600  +-EndFunc   ;==>ScreenCaptureWnd
00601    
00602  +-Func SetVar(ByRef $Var, $Value)
00603  |        $Var = $Value
00604  |        Return $Value
00605  +-EndFunc   ;==>SetVar
00606    
00607  +-Func Timeout(ByRef $Timer, $Delay)
00608  |        Local $Diff = TimerDiff($Timer)
00609  |  +-    If $Diff > $Delay Then
00610  |  |            $Timer = TimerInit()
00611  |  |            Return $Diff
00612  |  +-    EndIf
00613  |        Return 0
00614  +-EndFunc   ;==>Timeout
00615    
00616  +-Func WriteLogStartup()
00617  |    ;~     Local Const $DelimItem = $ArrayDelimItem
00618  |    
00619  |        IniWrite($IniGlobalNetLogDir & "Global" & ".ini", "@ComputerName", StringReplace(StringFormat("%-16s", @IPAddress1), " ", "."), @ComputerName)
00620  |        WriteLogStartupIni("", "Global", "@IPAddress1", 0, @IPAddress1)
00621  |        WriteLogStartupIni("", "Global", "$AkkVersion", 0, $AkkVersion)
00622  |        WriteLogStartupIni("", "Global", "$SpawnExists", 0, $SpawnExists)
00623  |        WriteLogStartupIni("", "Global", "$KPSInfoExists", 0, $KPSInfoExists)
00624  |        WriteLogStartupIni("", "Global", "$PowerkatalogExists", 0, $PowerkatalogExists)
00625  |        WriteLogStartupIni("", "Global", "$SHDUpdaterExists", 0, $SHDUpdaterExists)
00626  |        WriteLogStartupIni("", "Global", "$NetPhoneClientExists", 0, $NetPhoneClientExists)
00627  |    
00628  |        WriteLogStartupIni("", "EventLog", "$EventLogFull", 0, $EventLogFull)
00629  |        WriteLogStartupIni("", "EventLog", "$EventLogCount", 0, $EventLogCount)
00630  |        WriteLogStartupIni("", "EventLog", "$EventLogOldest", 0, $EventLogOldest)
00631  |    
00632  |        WriteLogStartupIni("", "SpawnStats", $SpawnFileName & "TimeModified", 0, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00633  |    
00634  |    ;~     WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00635  |    ;~     If $NetPhoneUserChecksum <> "" Then IniWrite($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "")
00636  |    
00637  |        WriteLogStartupIni("", "AutoIt", "@Compiled", 0, @Compiled)
00638  |        WriteLogStartupIni("", "AutoIt", "@ScriptName", 0, @ScriptName)
00639  |        WriteLogStartupIni("", "AutoIt", "@ScriptDir", 0, @ScriptDir)
00640  |        WriteLogStartupIni("", "AutoIt", "@ScriptFullPath", 0, @ScriptFullPath)
00641  |        WriteLogStartupIni("", "AutoIt", "@WorkingDir", 0, @WorkingDir)
00642  |        WriteLogStartupIni("", "AutoIt", "@AutoItExe", 0, @AutoItExe)
00643  |        WriteLogStartupIni("", "AutoIt", "@AutoItPID", 0, @AutoItPID)
00644  |        WriteLogStartupIni("", "AutoIt", "@AutoItVersion", 0, @AutoItVersion)
00645  |        WriteLogStartupIni("", "AutoIt", "@AutoItX64", 0, @AutoItX64)
00646  |    
00647  |        WriteLogStartupIni("", "Directory", "@AppDataCommonDir", 0, @AppDataCommonDir)
00648  |        WriteLogStartupIni("", "Directory", "@DesktopCommonDir", 0, @DesktopCommonDir)
00649  |        WriteLogStartupIni("", "Directory", "@DocumentsCommonDir", 0, @DocumentsCommonDir)
00650  |        WriteLogStartupIni("", "Directory", "@FavoritesCommonDir", 0, @FavoritesCommonDir)
00651  |        WriteLogStartupIni("", "Directory", "@ProgramsCommonDir", 0, @ProgramsCommonDir)
00652  |        WriteLogStartupIni("", "Directory", "@StartMenuCommonDir", 0, @StartMenuCommonDir)
00653  |        WriteLogStartupIni("", "Directory", "@StartupCommonDir", 0, @StartupCommonDir)
00654  |    
00655  |        WriteLogStartupIni("", "Directory", "@AppDataDir", 0, @AppDataDir)
00656  |        WriteLogStartupIni("", "Directory", "@LocalAppDataDir", 0, @LocalAppDataDir)
00657  |        WriteLogStartupIni("", "Directory", "@DesktopDir", 0, @DesktopDir)
00658  |        WriteLogStartupIni("", "Directory", "@MyDocumentsDir", 0, @MyDocumentsDir)
00659  |        WriteLogStartupIni("", "Directory", "@FavoritesDir", 0, @FavoritesDir)
00660  |        WriteLogStartupIni("", "Directory", "@ProgramsDir", 0, @ProgramsDir)
00661  |        WriteLogStartupIni("", "Directory", "@StartMenuDir", 0, @StartMenuDir)
00662  |        WriteLogStartupIni("", "Directory", "@UserProfileDir", 0, @UserProfileDir)
00663  |    
00664  |        WriteLogStartupIni("", "Directory", "@HomeDrive", 0, @HomeDrive)
00665  |        WriteLogStartupIni("", "Directory", "@HomePath", 0, @HomePath)
00666  |        WriteLogStartupIni("", "Directory", "@HomeShare", 0, @HomeShare)
00667  |        WriteLogStartupIni("", "Directory", "@LogonDNSDomain", 0, @LogonDNSDomain)
00668  |        WriteLogStartupIni("", "Directory", "@LogonDomain", 0, @LogonDomain)
00669  |        WriteLogStartupIni("", "Directory", "@LogonServer", 0, @LogonServer)
00670  |        WriteLogStartupIni("", "Directory", "@ProgramFilesDir", 0, @ProgramFilesDir)
00671  |        WriteLogStartupIni("", "Directory", "@CommonFilesDir", 0, @CommonFilesDir)
00672  |        WriteLogStartupIni("", "Directory", "@WindowsDir", 0, @WindowsDir)
00673  |        WriteLogStartupIni("", "Directory", "@SystemDir", 0, @SystemDir)
00674  |        WriteLogStartupIni("", "Directory", "@TempDir", 0, @TempDir)
00675  |        WriteLogStartupIni("", "Directory", "@ComSpec", 0, @ComSpec)
00676  |    
00677  |        WriteLogStartupIni("", "SystemInfo", "@CPUArch", 0, @CPUArch)
00678  |        WriteLogStartupIni("", "SystemInfo", "@KBLayout", 0, @KBLayout)
00679  |        WriteLogStartupIni("", "SystemInfo", "@MUILang", 0, @MUILang)
00680  |        WriteLogStartupIni("", "SystemInfo", "@OSArch", 0, @OSArch)
00681  |        WriteLogStartupIni("", "SystemInfo", "@OSLang", 0, @OSLang)
00682  |        WriteLogStartupIni("", "SystemInfo", "@OSType", 0, @OSType)
00683  |        WriteLogStartupIni("", "SystemInfo", "@OSVersion", 0, @OSVersion)
00684  |        WriteLogStartupIni("", "SystemInfo", "@OSBuild", 0, @OSBuild)
00685  |        WriteLogStartupIni("", "SystemInfo", "@OSServicePack", 0, @OSServicePack)
00686  |        WriteLogStartupIni("", "SystemInfo", "@ComputerName", 0, @ComputerName)
00687  |        WriteLogStartupIni("", "SystemInfo", "@UserName", 0, @UserName)
00688  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress1", 0, @IPAddress1)
00689  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress2", 0, @IPAddress2)
00690  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress3", 0, @IPAddress3)
00691  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress4", 0, @IPAddress4)
00692  |    
00693  |        WriteLogStartupIni("", "SystemInfo", "@DesktopHeight", 0, @DesktopHeight)
00694  |        WriteLogStartupIni("", "SystemInfo", "@DesktopWidth", 0, @DesktopWidth)
00695  |        WriteLogStartupIni("", "SystemInfo", "@DesktopDepth", 0, @DesktopDepth)
00696  |        WriteLogStartupIni("", "SystemInfo", "@DesktopRefresh", 0, @DesktopRefresh)
00697  |    
00698  |    ;~     IniWrite($IniGlobalNetLogPath, "Computername", @IPAddress1, @ComputerName)
00699  |    ;~     IniWrite($IniGlobalNetLogPath, "IPAddress1", $ComputerName, @IPAddress1)
00700  |    ;~     IniWrite($IniGlobalNetLogPath, "AkkVersion", $ComputerName, FileGetVersion(@ScriptFullPath))
00701  |    ;~     IniWrite($IniGlobalNetLogPath, "SpawnExists", $ComputerName, $SpawnExists)
00702  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogFull", $ComputerName, $EventLogFull)
00703  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogCount", $ComputerName, $EventLogCount)
00704  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogOldest", $ComputerName, $EventLogOldest)
00705  |    
00706  |    ;~     IniWrite($LogSpawnStatsNetPath, "SpawnTimeModified", $ComputerName, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00707  |    
00708  |    ;~     _ArrayAdd($MacroAutoIt, "Compiled" & $DelimItem & @Compiled, 0, $DelimItem)
00709  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptName" & $DelimItem & @ScriptName, 0, $DelimItem)
00710  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptDir" & $DelimItem & @ScriptDir, 0, $DelimItem)
00711  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptFullPath" & $DelimItem & @ScriptFullPath, 0, $DelimItem)
00712  |    ;~     _ArrayAdd($MacroAutoIt, "WorkingDir" & $DelimItem & @WorkingDir, 0, $DelimItem)
00713  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItExe" & $DelimItem & @AutoItExe, 0, $DelimItem)
00714  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItPID" & $DelimItem & @AutoItPID, 0, $DelimItem)
00715  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItVersion" & $DelimItem & @AutoItVersion, 0, $DelimItem)
00716  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItX64" & $DelimItem & @AutoItX64, 0, $DelimItem)
00717  |    ;~     _ArrayDisplay($MacroAutoIt)
00718  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroAutoIt", $MacroAutoIt)
00719  |    
00720  |    ;~     _ArrayAdd($MacroDirectory, "AppDataCommonDir" & $DelimItem & @AppDataCommonDir, 0, $DelimItem)
00721  |    ;~     _ArrayAdd($MacroDirectory, "DesktopCommonDir" & $DelimItem & @DesktopCommonDir, 0, $DelimItem)
00722  |    ;~     _ArrayAdd($MacroDirectory, "DocumentsCommonDir" & $DelimItem & @DocumentsCommonDir, 0, $DelimItem)
00723  |    ;~     _ArrayAdd($MacroDirectory, "FavoritesCommonDir" & $DelimItem & @FavoritesCommonDir, 0, $DelimItem)
00724  |    ;~     _ArrayAdd($MacroDirectory, "ProgramsCommonDir" & $DelimItem & @ProgramsCommonDir, 0, $DelimItem)
00725  |    ;~     _ArrayAdd($MacroDirectory, "StartMenuCommonDir" & $DelimItem & @StartMenuCommonDir, 0, $DelimItem)
00726  |    ;~     _ArrayAdd($MacroDirectory, "StartupCommonDir" & $DelimItem & @StartupCommonDir, 0, $DelimItem)
00727  |    
00728  |    ;~     _ArrayAdd($MacroDirectory, "AppDataDir" & $DelimItem & @AppDataDir, 0, $DelimItem)
00729  |    ;~     _ArrayAdd($MacroDirectory, "LocalAppDataDir" & $DelimItem & @LocalAppDataDir, 0, $DelimItem)
00730  |    ;~     _ArrayAdd($MacroDirectory, "DesktopDir" & $DelimItem & @DesktopDir, 0, $DelimItem)
00731  |    ;~     _ArrayAdd($MacroDirectory, "MyDocumentsDir" & $DelimItem & @MyDocumentsDir, 0, $DelimItem)
00732  |    ;~     _ArrayAdd($MacroDirectory, "FavoritesDir" & $DelimItem & @FavoritesDir, 0, $DelimItem)
00733  |    ;~     _ArrayAdd($MacroDirectory, "ProgramsDir" & $DelimItem & @ProgramsDir, 0, $DelimItem)
00734  |    ;~     _ArrayAdd($MacroDirectory, "StartMenuDir" & $DelimItem & @StartMenuDir, 0, $DelimItem)
00735  |    ;~     _ArrayAdd($MacroDirectory, "StartupDir" & $DelimItem & @StartupDir, 0, $DelimItem)
00736  |    ;~     _ArrayAdd($MacroDirectory, "UserProfileDir" & $DelimItem & @UserProfileDir, 0, $DelimItem)
00737  |    
00738  |    ;~     _ArrayAdd($MacroDirectory, "HomeDrive" & $DelimItem & @HomeDrive, 0, $DelimItem)
00739  |    ;~     _ArrayAdd($MacroDirectory, "HomePath" & $DelimItem & @HomePath, 0, $DelimItem)
00740  |    ;~     _ArrayAdd($MacroDirectory, "HomeShare" & $DelimItem & @HomeShare, 0, $DelimItem)
00741  |    ;~     _ArrayAdd($MacroDirectory, "LogonDNSDomain" & $DelimItem & @LogonDNSDomain, 0, $DelimItem)
00742  |    ;~     _ArrayAdd($MacroDirectory, "LogonDomain" & $DelimItem & @LogonDomain, 0, $DelimItem)
00743  |    ;~     _ArrayAdd($MacroDirectory, "LogonServer" & $DelimItem & @LogonServer, 0, $DelimItem)
00744  |    ;~     _ArrayAdd($MacroDirectory, "ProgramFilesDir" & $DelimItem & @ProgramFilesDir, 0, $DelimItem)
00745  |    ;~     _ArrayAdd($MacroDirectory, "CommonFilesDir" & $DelimItem & @CommonFilesDir, 0, $DelimItem)
00746  |    ;~     _ArrayAdd($MacroDirectory, "WindowsDir" & $DelimItem & @WindowsDir, 0, $DelimItem)
00747  |    ;~     _ArrayAdd($MacroDirectory, "SystemDir" & $DelimItem & @SystemDir, 0, $DelimItem)
00748  |    ;~     _ArrayAdd($MacroDirectory, "TempDir" & $DelimItem & @TempDir, 0, $DelimItem)
00749  |    ;~     _ArrayAdd($MacroDirectory, "ComSpec" & $DelimItem & @ComSpec, 0, $DelimItem)
00750  |    ;~     _ArrayDisplay($MacroDirectory)
00751  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroDirectory", $MacroDirectory)
00752  |    
00753  |    ;~     _ArrayAdd($MacroSystemInfo, "CPUArch" & $DelimItem & @CPUArch, 0, $DelimItem)
00754  |    ;~     _ArrayAdd($MacroSystemInfo, "KBLayout" & $DelimItem & @KBLayout, 0, $DelimItem)
00755  |    ;~     _ArrayAdd($MacroSystemInfo, "MUILang" & $DelimItem & @MUILang, 0, $DelimItem)
00756  |    ;~     _ArrayAdd($MacroSystemInfo, "OSArch" & $DelimItem & @OSArch, 0, $DelimItem)
00757  |    ;~     _ArrayAdd($MacroSystemInfo, "OSLang" & $DelimItem & @OSLang, 0, $DelimItem)
00758  |    ;~     _ArrayAdd($MacroSystemInfo, "OSType" & $DelimItem & @OSType, 0, $DelimItem)
00759  |    ;~     _ArrayAdd($MacroSystemInfo, "OSVersion" & $DelimItem & @OSVersion, 0, $DelimItem)
00760  |    ;~     _ArrayAdd($MacroSystemInfo, "OSBuild" & $DelimItem & @OSBuild, 0, $DelimItem)
00761  |    ;~     _ArrayAdd($MacroSystemInfo, "OSServicePack" & $DelimItem & @OSServicePack, 0, $DelimItem)
00762  |    ;~     _ArrayAdd($MacroSystemInfo, "ComputerName" & $DelimItem & @ComputerName, 0, $DelimItem)
00763  |    ;~     _ArrayAdd($MacroSystemInfo, "UserName" & $DelimItem & @UserName, 0, $DelimItem)
00764  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress1" & $DelimItem & @IPAddress1, 0, $DelimItem)
00765  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress2" & $DelimItem & @IPAddress2, 0, $DelimItem)
00766  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress3" & $DelimItem & @IPAddress3, 0, $DelimItem)
00767  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress4" & $DelimItem & @IPAddress4, 0, $DelimItem)
00768  |    
00769  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopHeight" & $DelimItem & @DesktopHeight, 0, $DelimItem)
00770  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopWidth" & $DelimItem & @DesktopWidth, 0, $DelimItem)
00771  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopDepth" & $DelimItem & @DesktopDepth, 0, $DelimItem)
00772  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopRefresh" & $DelimItem & @DesktopRefresh, 0, $DelimItem)
00773  |    ;~     _ArrayDisplay($MacroSystemInfo)
00774  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroSystemInfo", $MacroSystemInfo)
00775  +-EndFunc   ;==>WriteLogStartup
00776    
00777  +-Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
00778  |  +-    If $FileName = "" Then
00779  |  |            $FileName = $IniGlobalNetLogDir & $Section & ".ini"
00780  |  +-    EndIf
00781  |        IniWrite($FileName, ($IsSectionAddedToKey ? $Section & $Key : $Key), $ComputerName, $Value)
00782  |        IniWrite($IniGlobalNetLogInstancePath, $Section, $Key, $Value)
00783  |    ;~ 	IniWrite ( "filename", "section", "key", "value" )
00784  +-EndFunc   ;==>WriteLogStartupIni
00785    #EndRegion
00786    #Region CheckAndRunProc
00787  +-Func Check()
00788  |        CheckAndRunProc($SpawnFileName, $SpawnDir, $SpawnPath, $SpawnExists)
00789  |        CheckAndRunProc($KPSInfoFileName, $KPSInfoDir, $KPSInfoPath, $KPSInfoExists)
00790  |        $WmiExporter1PID = CheckAndRunProc($WmiExporterLocalFileName, $WmiExporterLocalDir, $WmiExporterLocalPath & $WmiExporterParams, $WmiExporterLocalExists)
00791  |    ;~     CheckAndRunProcAs($PowerkatalogFileName, $PowerkatalogDir, $PowerkatalogPath, $PowerkatalogExists, "Administrator", "Brauckhoff", "")
00792  |    ;~     CheckAndRunProc($SHDUpdaterFileName, $SHDUpdaterDir, $SHDUpdaterPath, $SHDUpdaterExists)
00793  +-EndFunc   ;==>Check
00794    
00795  +-Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
00796  |  +-    If $Exists And Not ProcessExists($Name) Then
00797  |  |            ConsoleLog($Name & " wird gestartet")
00798  |  |            Return Run($Path, $Dir, $ShowFlag)
00799  |  +-    EndIf
00800  |        Return 0
00801  +-EndFunc   ;==>CheckAndRunProc
00802    
00803  +-Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
00804  |  +-    If $Exists And Not ProcessExists($Name) Then
00805  |  |            ConsoleLog($Name & " wird gestartet als " & $UserName & " in " & $Domain & " mit Network credentials only")
00806  |  |            RunAs($UserName, $Domain, $Password, $RUN_LOGON_NETWORK, $Path, $Dir)
00807  |  +-    EndIf
00808  +-EndFunc   ;==>CheckAndRunProcAs
00809    #EndRegion CheckAndRunProc
00810    #Region CleaningDownloads
00811  +-Func CleaningDownloads()
00812  |  +-    If DownloadsNeedCleaning() Then
00813  |  |            DirRemove($DownloadsOldDir, $DIR_REMOVE)
00814  |  |            FileDirMoveRec($DownloadsDir, $DownloadsOldDir)
00815  |  |            FileDelete($DownloadsOldDir & "\Downloads alt.lnk")
00816  |  |            FileCreateShortcut($DownloadsOldDir, $DownloadsDir & "\Downloads alt")
00817  |  |            IniWrite($IniLocalPath, "Downloads", "LastCleaningDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00818  |  |            Local Const $Warning = '' _
00819  |  |  |                        & 'Wenn Sie noch wichtige Dateien im Ordner "Downloads" aufbewahren, die Sie benötigen, kopieren Sie diese bitte an einen anderen Ort.' & @CRLF _
00820  |  |  |                        & 'Alle Dateien aus dem Ordner "Downloads" wurden bereits in den Ordner "Downloads alt" verschoben.' & @CRLF _
00821  |  |  |                        & 'Der Ordner "Downloads alt" ist über eine Verknüpfung in "Downloads" zu erreichen.' & @CRLF _
00822  |  |  |                        & 'Alle Ihre Dateien die im Ordner "Downloads alt" bleiben, werden demnächst unwiderruflich GELÖSCHT!' & @CRLF _
00823  |  |  |                        & 'Bitte sichten und sichern Sie am besten jetzt sofort Ihre weiterhin benötigten Dateien.' & @CRLF _
00824  |  |  |                        & 'Soll der Ordner "Downloads alt" jetzt geöffnet werden?' & @CRLF
00825  |  |  +-        If MsgBox($MB_YESNO + $MB_ICONWARNING + $MB_SYSTEMMODAL, "ACHTUNG WICHTIG! LÖSCHUNG IHRER DOWNLOAD-DATEIEN", $Warning, $MsgBoxTimeout) = $IDYES Then
00826  |  |  |                ShellExecute($DownloadsOldDir)
00827  |  |  +-        EndIf
00828  |  +-    EndIf
00829  +-EndFunc   ;==>CleaningDownloads
00830    
00831  +-Func DownloadsNeedCleaning()
00832  |        Return (_DateToDayValue(@YEAR, @MON, @MDAY) - GetDownloadsLastCleaningDate()) >= 14
00833  +-EndFunc   ;==>DownloadsNeedCleaning
00834  +-Func FileDirMoveRec($SourceDir, $DestDir)
00835  |  +-    If FileExists($SourceDir) Then
00836  |  |            If Not FileExists($DestDir) Then DirCreate($DestDir)
00837  |  |            FileMove($SourceDir & "\*.*", $DestDir, $FC_OVERWRITE + $FC_CREATEPATH)
00838  |  |            Local Const $FolderList = _FileListToArray($SourceDir, Default, $FLTA_FOLDERS, True)
00839  |  |  +-        If Not @error Then
00840  |  |  |  +-            For $Folder In $FolderList
00841  |  |  |  |                    DirMove($Folder, $DestDir, $FC_OVERWRITE)
00842  |  |  |  +-            Next
00843  |  |  +-        EndIf
00844  |  +-    EndIf
00845  +-EndFunc   ;==>FileDirMoveRec
00846    
00847  +-Func GetDownloadsLastCleaningDate()
00848  |        Return IniRead($IniLocalPath, "Downloads", "LastCleaningDate", "NULL")
00849  +-EndFunc   ;==>GetDownloadsLastCleaningDate
00850    #EndRegion CleaningDownloads
00851    #Region FreeSpaceCheck
00852  +-Func ByteSuffix($iBytes)
00853  |        Local $iIndex = 0, $aArray = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB']
00854  |  +-    While $iBytes > 1023
00855  |  |            $iIndex += 1
00856  |  |            $iBytes /= 1024
00857  |  +-    WEnd
00858  |        Return Round($iBytes) & $aArray[$iIndex]
00859  +-EndFunc   ;==>ByteSuffix
00860    
00861  +-Func CheckHomeDriveSpaceFree()
00862  |        Local Const $sLabel = DriveGetLabel(@HomeDrive & "\")
00863  |    ;~     Local Const $sSerial = DriveGetSerial(@HomeDrive & "\")
00864  |        Local Const $iFreeSpace = DriveSpaceFree(@HomeDrive & "\")
00865  |        Local Const $iTotalSpace = DriveSpaceTotal(@HomeDrive & "\")
00866  |        Local Const $iFreeSpacePerc = ($iFreeSpace / $iTotalSpace) * 100
00867  |  +-    If $iFreeSpacePerc < $LowSpaceThresholdPerc Then
00868  |  |  +-        If (_DateToDayValue(@YEAR, @MON, @MDAY) - IniRead($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", "NULL")) >= 1 Then
00869  |  |  |                IniWrite($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00870  |  |  |  +-            For $i = 0 To 9 Step 1
00871  |  |  |  |  +-                If $MailAddresses[$i][0] <> "" And $MailAddresses[$i][1] = 1 Then
00872  |  |  |  |  |                        ConsoleLog("Sending Mail to " & $MailAddresses[$i][0])
00873  |  |  |  |  |                        SendMailLowSpace($MailAddresses[$i][0], Round($iFreeSpacePerc, 2), $sLabel, $iFreeSpace, $iTotalSpace)
00874  |  |  |  |  |                        Sleep(3000)
00875  |  |  |  |  +-                EndIf
00876  |  |  |  +-            Next
00877  |  |  +-        EndIf
00878  |  +-    EndIf
00879  +-EndFunc   ;==>CheckHomeDriveSpaceFree
00880    
00881  +-Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
00882  |        Local $sFromName = "akk.exe (Gerrit)"
00883  |        Local $sFromAddress = "akk@kuechen-brauckhoff.de"
00884  |        Local $sSubject = "AKK Warnung freier Speicher auf " & @ComputerName & " ist " & $iFreeSpacePerc & "% !"
00885  |        Local $asBody[0]
00886  |        _ArrayAdd($asBody, "Akk Warnung wenig Speicherplatz auf:")
00887  |        _ArrayAdd($asBody, @ComputerName)
00888  |        If @IPAddress1 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress1)
00889  |        If @IPAddress2 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress2)
00890  |        If @IPAddress3 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress3)
00891  |        If @IPAddress4 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress4)
00892  |        _ArrayAdd($asBody, $sLabel & " (" & @HomeDrive & ")")
00893  |        _ArrayAdd($asBody, Round($iFreeSpace / 1024, 2) & " GB frei von " & Round($iTotalSpace / 1024, 2) & " GB")
00894  |        _ArrayAdd($asBody, $iFreeSpacePerc & "% frei")
00895  |        Local $iResponse = _INetSmtpMail($SmtpMailSmtpServer, $sFromName, $sFromAddress, $sToAddress, $sSubject, $asBody, $SmtpMailEHLO, $SmtpMailFirst, $SmtpMailTrace)
00896  |        Local $iErr = @error
00897  |  +-    If $iResponse = 0 Then
00898  |  |            Local Const $Warning = '' _
00899  |  |  |                        & 'DIE FESTPLATTE IST FAST VOLL!' & @CRLF & @CRLF _
00900  |  |  |                        & 'Bitte Herrn Heger bescheid geben:' & @CRLF _
00901  |  |  |                        & 'heger@easyconnectit.de' & @CRLF _
00902  |  |  |                        & 'oder 0176 23984427' & @CRLF & @CRLF _
00903  |  |  |                        & _ArrayToString($asBody, @CRLF) & @CRLF & @CRLF _
00904  |  |  |                        & 'Mail failed with error code ' & $iErr & @CRLF
00905  |  |            MsgBox($MB_ICONWARNING + $MB_SYSTEMMODAL, "Warnung!", $Warning)
00906  |  +-    EndIf
00907  +-EndFunc   ;==>SendMailLowSpace
00908    #EndRegion FreeSpaceCheck
00909    #Region WMI Exporter
00910  +-Func Scrape()
00911  |  +-    If $ScrapeComplete And ProcessExists($WmiExporterLocalFileName) Then
00912  |  |            $hDownload = InetGet("http://localhost:9182/metrics", $LogScrapePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)
00913  |  |            $ScrapeComplete = 0
00914  |  +-    EndIf
00915  +-EndFunc   ;==>Scrape
00916    
00917  +-Func ScrapeDownload()
00918  |  +-    If Not $ScrapeComplete Then
00919  |  |  +-        If InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE) Then
00920  |  |  |  +-            If InetGetInfo($hDownload, $INET_DOWNLOADSUCCESS) Then
00921  |  |  |  |                    If FileGetSize($LogScrapePath) Then FileCopy($LogScrapePath, $LogScrapeNetPath, $FC_OVERWRITE + $FC_CREATEPATH)
00922  |  |  |  +-            Else
00923  |  |  |  |                    FileDelete($LogScrapePath)
00924  |  |  |  |                    ConsoleLog("Error ScrapeDownload")
00925  |  |  |  +-            EndIf
00926  |  |  |                InetClose($hDownload)
00927  |  |  |                $hDownload = 0
00928  |  |  |                $ScrapeComplete = 1
00929  |  |  +-        EndIf
00930  |  +-    EndIf
00931  +-EndFunc   ;==>ScrapeDownload
00932    
00933  +-Func SetupExactFile()
00934  |  +-    If Not $ExactFileExists Then
00935  |  |  +-        If FileCopy($ExactFileNetPath, $ExactFilePath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00936  |  |  |                $ExactFileExists = FileExists($ExactFilePath)
00937  |  |  +-        EndIf
00938  |  +-    EndIf
00939  +-EndFunc   ;==>SetupExactFile
00940    
00941  +-Func SetupWmiExporter()
00942  |        ProcessClose($WmiExporterLocalFileName)
00943  |  +-    If Not $WmiExporterLocalExists Then
00944  |  |            Local $SourcePath = (@OSArch = "X64") ? $WmiExporterX64GlobalNetSetupPath : $WmiExporterX32GlobalNetSetupPath
00945  |  |  +-        If FileCopy($SourcePath, $WmiExporterLocalPath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00946  |  |  |                $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00947  |  |  +-        EndIf
00948  |  +-    EndIf
00949  |        If Not FileExists($WmiExporterCollectorTextfileDir) Then DirCreate($WmiExporterCollectorTextfileDir)
00950  +-EndFunc   ;==>SetupWmiExporter
00951    
00952  +-Func WriteMetaDataFile()
00953  |        Local $MetaData = 'metadata{computername="@ComputerName@",username="@UserName@"'
00954  |  +-    If $WmiExporterMetadataString <> "NULL" And StringLen($WmiExporterMetadataString) And Not StringIsSpace($WmiExporterMetadataString) Then
00955  |  |            $MetaData &= "," & $WmiExporterMetadataString
00956  |  +-    EndIf
00957  |        $MetaData &= '} 1'
00958  |    
00959  |        $IdleTime = _Timer_GetIdleTime()
00960  |        Local $MetaIdleTime = 'akk_idletime_sec{computername="@ComputerName@"} ' & $IdleTime / 1e3
00961  |    
00962  |        Local $aMemStats = MemGetStats()
00963  |        Local $MetaMemLoad = 'akk_memstats_load{computername="@ComputerName@"} ' & $aMemStats[$MEM_LOAD] ; Memory Load (Percentage of memory in use)
00964  |        Local $MetaMemTotalPhysRam = 'akk_memstats_total_physram_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_TOTALPHYSRAM] / 1024 / 1024, 2) ; Total physical RAM
00965  |        Local $MetaMemAvailPhysRam = 'akk_memstats_avail_physram_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_AVAILPHYSRAM] / 1024 / 1024, 2) ; Available physical RAM
00966  |        Local $MetaMemTotalPageFile = 'akk_memstats_total_pagefile_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_TOTALPAGEFILE] / 1024 / 1024, 2) ; Total Pagefile
00967  |        Local $MetaMemAvailPageFile = 'akk_memstats_avail_pagefile_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_AVAILPAGEFILE] / 1024 / 1024, 2) ; Available Pagefile
00968  |        Local $MetaMemTotalVirtual = 'akk_memstats_total_virtual_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_TOTALVIRTUAL] / 1024 / 1024, 2) ; Total virtual
00969  |        Local $MetaMemAvailVirtual = 'akk_memstats_avail_virtual_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_AVAILVIRTUAL] / 1024 / 1024, 2) ; Available virtual
00970  |    
00971  |        Local $MetaEventLogFull = 'akk_eventlog_full{computername="@ComputerName@"} ' & ($EventLogFull ? 1 : 0)
00972  |        Local $MetaEventLogCount = 'akk_eventlog_count{computername="@ComputerName@"} ' & $EventLogCount
00973  |        Local $MetaEventLogOldest = 'akk_eventlog_oldest{computername="@ComputerName@"} ' & $EventLogOldest
00974  |    
00975  |        $WmiExporterMetadataArray[1] = $MetaData
00976  |        $WmiExporterMetadataArray[2] = $MetaIdleTime
00977  |        $WmiExporterMetadataArray[3] = $MetaMemLoad
00978  |        $WmiExporterMetadataArray[4] = $MetaMemTotalPhysRam
00979  |        $WmiExporterMetadataArray[5] = $MetaMemAvailPhysRam
00980  |        $WmiExporterMetadataArray[6] = $MetaMemTotalPageFile
00981  |        $WmiExporterMetadataArray[7] = $MetaMemAvailPageFile
00982  |        $WmiExporterMetadataArray[8] = $MetaMemTotalVirtual
00983  |        $WmiExporterMetadataArray[9] = $MetaMemAvailVirtual
00984  |        $WmiExporterMetadataArray[10] = $MetaEventLogFull
00985  |        $WmiExporterMetadataArray[11] = $MetaEventLogCount
00986  |        $WmiExporterMetadataArray[12] = $MetaEventLogOldest
00987  |        $WmiExporterMetadataArray[0] = UBound($WmiExporterMetadataArray) - 1
00988  |        _FileReadToArray($WmiExporterMetadataPath, $WmiExporterMetadataArrayRet)
00989  |  +-    If Not _ArrayCompare($WmiExporterMetadataArray, $WmiExporterMetadataArrayRet, 3) Then
00990  |  |            _FileWriteFromArray($WmiExporterMetadataPath, $WmiExporterMetadataArray, 1)
00991  |  +-    EndIf
00992  +-EndFunc   ;==>WriteMetaDataFile
00993    #EndRegion WMI Exporter
00994    #Region UDF
00995    ;~ https://www.autoitscript.com/forum/topic/182506-array-comparison/
00996    ;~ Melba23
00997  +-Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
00998  |    
00999  |        ; Check if arrays
01000  |  +-    If Not (IsArray($aArray1)) Or Not (IsArray($aArray2)) Then
01001  |  |            Return SetError(1, 0, 0)
01002  |  +-    EndIf
01003  |    
01004  |        ; Check if same number of dimensions
01005  |        Local $iDims = UBound($aArray1, $UBOUND_DIMENSIONS)
01006  |  +-    If $iDims <> UBound($aArray2, $UBOUND_DIMENSIONS) Then
01007  |  |            Return SetError(2, 0, 0)
01008  |  +-    EndIf
01009  |    
01010  |        ; Check if same size
01011  |        Local $iRows = UBound($aArray1, $UBOUND_ROWS)
01012  |        Local $iCols = UBound($aArray1, $UBOUND_COLUMNS)
01013  |  +-    If $iRows <> UBound($aArray2, $UBOUND_ROWS) Or $iCols <> UBound($aArray2, $UBOUND_COLUMNS) Then
01014  |  |            Return SetError(3, 0, 0)
01015  |  +-    EndIf
01016  |    
01017  |        Local $sString_1, $sString_2
01018  |    
01019  |  +-    Switch $iMode
01020  |  |    
01021  |  |  +-        Case 0     ; Compare each element
01022  |  |  |  +-            For $i = 0 To $iRows - 1
01023  |  |  |  |  +-                For $j = 0 To $iCols - 1
01024  |  |  |  |  |  +-                    If $aArray1[$i][$j] <> $aArray1[$i][$j] Then
01025  |  |  |  |  |  |                            Return SetError(4, 0, 0)
01026  |  |  |  |  |  +-                    EndIf
01027  |  |  |  |  +-                Next
01028  |  |  |  +-            Next
01029  |  |  |    
01030  |  |  +-        Case 1     ; Convert rows to strings
01031  |  |  |  +-            For $i = 0 To $iRows - 1
01032  |  |  |  |  +-                For $j = 0 To $iCols - 1
01033  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
01034  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
01035  |  |  |  |  +-                Next
01036  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
01037  |  |  |  |  |                        Return SetError(4, 0, 0)
01038  |  |  |  |  +-                EndIf
01039  |  |  |  +-            Next
01040  |  |  |    
01041  |  |  +-        Case 2     ; Convert columnss to strings
01042  |  |  |  +-            For $j = 0 To $iCols - 1
01043  |  |  |  |  +-                For $i = 0 To $iRows - 1
01044  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
01045  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
01046  |  |  |  |  +-                Next
01047  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
01048  |  |  |  |  |                        Return SetError(4, 0, 0)
01049  |  |  |  |  +-                EndIf
01050  |  |  |  +-            Next
01051  |  |  |    
01052  |  |  +-        Case 3     ; Convert whole array to string
01053  |  |  |  +-            If _ArrayToString($aArray1) <> _ArrayToString($aArray2) Then
01054  |  |  |  |                    Return SetError(4, 0, 0)
01055  |  |  |  +-            EndIf
01056  |  |  |    
01057  |  +-    EndSwitch
01058  |    
01059  |        ; Looks as if they match
01060  |        Return 1
01061  |    
01062  +-EndFunc   ;==>_ArrayCompare
01063    #EndRegion UDF
01064    

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================
ByteSuffix                00852 
Check                     00787 
CheckAndRunProc           00795 
CheckAndRunProcAs         00803 
CheckHomeDriveSpaceFree   00861 
CleaningDownloads         00811 
ConsoleLog                00395 
DownloadsNeedCleaning     00831 
EventLog                  00404 
FileDirMoveRec            00834 
GetDownloadsLastCleaningDate  00847 
GetGlobalConfig           00412 
GetWinList                00455 
ManageLogFile             00496 
ReadGlobalConfig          00512 
ReadLocalConfig           00529 
Scrape                    00910 
ScrapeDownload            00917 
ScreenCaptureNetPhoneClient  00537 
ScreenCaptureWnd          00573 
SendMailLowSpace          00881 
SetVar                    00602 
SetupExactFile            00933 
SetupWmiExporter          00941 
Timeout                   00607 
WriteLogStartup           00616 
WriteLogStartupIni        00777 
WriteMetaDataFile         00952 
_ArrayCompare             00997 

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
#Au3Stripper_Parameters   ----- 00023
#AutoIt3Wrapper_AU3Check_Parameters  ----- 00017
#AutoIt3Wrapper_AU3Check_Stop_OnWarning  ----- 00016
#AutoIt3Wrapper_Icon      ----- 00002
#AutoIt3Wrapper_Outfile   ----- 00003
#AutoIt3Wrapper_Res_Comment  ----- 00004
#AutoIt3Wrapper_Res_CompanyName  ----- 00009
#AutoIt3Wrapper_Res_Description  ----- 00005
#AutoIt3Wrapper_Res_Field  ----- 00014
#AutoIt3Wrapper_Res_Fileversion  ----- 00006
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement  ----- 00007
#AutoIt3Wrapper_Res_Language  ----- 00013
#AutoIt3Wrapper_Res_LegalCopyright  ----- 00010
#AutoIt3Wrapper_Res_LegalTradeMarks  ----- 00011
#AutoIt3Wrapper_Res_ProductName  ----- 00008
#AutoIt3Wrapper_Res_SaveSource  ----- 00012
#AutoIt3Wrapper_Run_AU3Check  ----- 00015
#AutoIt3Wrapper_Run_After  ----- 00019
#AutoIt3Wrapper_Run_Au3Stripper  ----- 00022
#AutoIt3Wrapper_Run_Before  ----- 00018
#AutoIt3Wrapper_Run_Tidy  ----- 00020
#EndRegion                ----- 00024 00086 00134 00260 00269 00349 00785 00809 00850 00908 00993 01063
#Region                   ----- 00001 00041 00088 00135 00261 00270 00350 00786 00810 00851 00909 00994
#Tidy_Parameters          ----- 00021
#include                  ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036 00037 00038 00039 00040
$AkkDir                   ----- 00147 00148 00157 00167 00172 00194 00232 00242
$AkkExists                ----- 00149
$AkkFileName              ----- 00146 00148 00151
$AkkNetDir                ----- 00152 00153
$AkkNetExists             ----- 00154
$AkkNetFileName           ----- 00151 00153
$AkkNetPath               ----- 00153 00154 00448 00451
$AkkNetTime               ----- 00448 00449
$AkkPath                  ----- 00148 00149 00447
$AkkRootDir               ----- 00142 00143 00177 00187 00200 00206 00211 00217 00222 00248 00286 00296 00301
$AkkRootExists            ----- 00144
$AkkRootFileName          ----- 00141 00143
$AkkRootPath              ----- 00143 00144
$AkkTime                  ----- 00447 00449
$AkkUpdaterDir            ----- 00157 00158 00450
$AkkUpdaterExists         ----- 00159 00419 00420 00443 00450
$AkkUpdaterFileName       ----- 00156 00158 00161 00450
$AkkUpdaterNetDir         ----- 00162 00163
$AkkUpdaterNetExists      ----- 00164 00419
$AkkUpdaterNetFileName    ----- 00161 00163
$AkkUpdaterNetPath        ----- 00163 00164 00420 00441 00443 00444
$AkkUpdaterNetTime        ----- 00441 00442
$AkkUpdaterPath           ----- 00158 00159 00420 00440 00443 00450
$AkkUpdaterTime           ----- 00440 00442
$AkkVersion               ----- 00106 00621
$ArrayDelimItem           ----- 00256 00470 00484
$ComputerName             ----- 00105 00781
$Cycle                    ----- 00093 00382 00391 00392 00396
$DIR_REMOVE               ----- 00813
$Delay                    ----- 00607 00609
$Dest                     ----- 00507 00508
$DestDir                  ----- 00834 00836 00837 00841
$Diff                     ----- 00608 00609 00611
$Dir                      ----- 00795 00798 00803 00806
$Domain                   ----- 00803 00805 00806
$DownloadsDir             ----- 00253 00254 00814 00816
$DownloadsOldDir          ----- 00254 00813 00814 00815 00816 00826
$EventLogCount            ----- 00277 00407 00629 00972
$EventLogFull             ----- 00276 00406 00628 00971
$EventLogOldest           ----- 00278 00408 00630 00973
$ExactFileDir             ----- 00281 00282
$ExactFileExists          ----- 00283 00934 00936
$ExactFileFileName        ----- 00280 00282 00285
$ExactFileNetDir          ----- 00286 00287
$ExactFileNetExists       ----- 00288
$ExactFileNetFileName     ----- 00285 00287
$ExactFileNetPath         ----- 00287 00288 00935
$ExactFilePath            ----- 00282 00283 00935 00936
$Exists                   ----- 00795 00796 00803 00804
$FC_CREATEPATH            ----- 00414 00417 00420 00426 00434 00443 00508 00837 00921 00935 00945
$FC_OVERWRITE             ----- 00414 00417 00420 00426 00434 00443 00508 00837 00841 00921 00935 00945
$FLTA_FOLDERS             ----- 00838
$FT_MODIFIED              ----- 00423 00424 00431 00432 00440 00441 00447 00448 00632
$FT_STRING                ----- 00423 00424 00431 00432 00440 00441 00447 00448 00632
$FileName                 ----- 00777 00778 00779 00781
$Folder                   ----- 00840 00841
$FolderList               ----- 00838 00840
$IDYES                    ----- 00825
$INET_DOWNLOADBACKGROUND  ----- 00912
$INET_DOWNLOADCOMPLETE    ----- 00919
$INET_DOWNLOADSUCCESS     ----- 00920
$INET_FORCERELOAD         ----- 00912
$IdleTime                 ----- 00274 00389 00959 00960
$IniGlobalDir             ----- 00172 00173 00182
$IniGlobalExDir           ----- 00182 00183
$IniGlobalExExists        ----- 00184 00416 00417 00434
$IniGlobalExFileName      ----- 00181 00183 00186
$IniGlobalExNetDir        ----- 00187 00188
$IniGlobalExNetExists     ----- 00189 00416
$IniGlobalExNetFileName   ----- 00186 00188
$IniGlobalExNetPath       ----- 00188 00189 00417 00432 00434 00435 00524
$IniGlobalExNetTime       ----- 00432 00433
$IniGlobalExPath          ----- 00183 00184 00417 00431 00434 00521 00522
$IniGlobalExTime          ----- 00431 00433
$IniGlobalExists          ----- 00174 00413 00414 00426
$IniGlobalFileName        ----- 00171 00173 00176
$IniGlobalNetDir          ----- 00177 00178
$IniGlobalNetExists       ----- 00179 00413
$IniGlobalNetFileName     ----- 00176 00178
$IniGlobalNetLogDir       ----- 00217 00218 00619 00779
$IniGlobalNetLogExists    ----- 00219
$IniGlobalNetLogFileName  ----- 00216 00218
$IniGlobalNetLogInstanceDir  ----- 00227 00228
$IniGlobalNetLogInstanceExists  ----- 00229
$IniGlobalNetLogInstanceFileName  ----- 00226 00228
$IniGlobalNetLogInstancePath  ----- 00228 00229 00782
$IniGlobalNetLogPath      ----- 00218 00219
$IniGlobalNetPath         ----- 00178 00179 00414 00424 00426 00427
$IniGlobalNetTime         ----- 00424 00425
$IniGlobalPath            ----- 00173 00174 00414 00423 00426 00513 00514 00516 00517 00519
$IniGlobalTime            ----- 00423 00425
$IniLocalDir              ----- 00167 00168
$IniLocalExists           ----- 00169
$IniLocalFileName         ----- 00166 00168
$IniLocalPath             ----- 00168 00169 00502 00504 00505 00530 00532 00817 00848 00868 00869
$IntMax                   ----- 00104
$IntMin                   ----- 00103
$IsSectionAddedToKey      ----- 00777 00781
$KPSInfoDir               ----- 00116 00117 00789
$KPSInfoExists            ----- 00118 00623 00789
$KPSInfoFileName          ----- 00115 00117 00789
$KPSInfoPath              ----- 00117 00118 00789
$Key                      ----- 00777 00781 00782
$List                     ----- 00574 00577 00578 00579 00580 00582 00583 00587 00590
$ListStates               ----- 00458 00460 00461 00462 00463 00464 00465 00466 00470 00479 00482 00483 00484
$ListVisble               ----- 00481 00484 00491 00493
$LogArchiveNetDir         ----- 00211 00212 00214 00507
$LogArchiveNetExists      ----- 00213 00214
$LogArchiveNetFileName    ----- 00210 00212
$LogArchiveNetPath        ----- 00212 00213
$LogDir                   ----- 00194 00195 00197 00498
$LogExists                ----- 00196 00197
$LogFileID                ----- 00191 00497 00501 00502 00530 00531 00533
$LogFileName              ----- 00193 00195 00497 00498 00499
$LogGlobalNetDir          ----- 00206 00207
$LogGlobalNetExists       ----- 00208
$LogGlobalNetFileName     ----- 00205 00207
$LogGlobalNetPath         ----- 00207 00208 00401 00506 00508
$LogNetDir                ----- 00200 00201 00203 00227 00237 00499
$LogNetExists             ----- 00202 00203
$LogNetFileName           ----- 00199 00201
$LogNetPath               ----- 00201 00202 00400 00499 00505
$LogPath                  ----- 00195 00196 00399 00498 00500 00504
$LogScrapeDir             ----- 00232 00233
$LogScrapeExists          ----- 00234
$LogScrapeFileName        ----- 00231 00233
$LogScrapeNetDir          ----- 00237 00238
$LogScrapeNetExists       ----- 00239
$LogScrapeNetFileName     ----- 00236 00238
$LogScrapeNetPath         ----- 00238 00239 00921
$LogScrapePath            ----- 00233 00234 00912 00921 00923
$LogScreenCapDir          ----- 00242 00243 00245 00585
$LogScreenCapExists       ----- 00244 00245
$LogScreenCapFileName     ----- 00241 00243
$LogScreenCapNetDir       ----- 00248 00249 00251 00556 00559
$LogScreenCapNetExists    ----- 00250 00251
$LogScreenCapNetFileName  ----- 00247 00249
$LogScreenCapNetPath      ----- 00249 00250
$LogScreenCapPath         ----- 00243 00244
$LogSpawnStatsNetDir      ----- 00222 00223
$LogSpawnStatsNetExists   ----- 00224
$LogSpawnStatsNetFileName  ----- 00221 00223
$LogSpawnStatsNetPath     ----- 00223 00224
$LowSpaceThresholdPerc    ----- 00267 00514 00867
$MB_ICONWARNING           ----- 00825 00905
$MB_SYSTEMMODAL           ----- 00825 00905
$MB_YESNO                 ----- 00825
$MEM_AVAILPAGEFILE        ----- 00967
$MEM_AVAILPHYSRAM         ----- 00965
$MEM_AVAILVIRTUAL         ----- 00969
$MEM_LOAD                 ----- 00963
$MEM_TOTALPAGEFILE        ----- 00966
$MEM_TOTALPHYSRAM         ----- 00964
$MEM_TOTALVIRTUAL         ----- 00968
$MacroAutoIt              ----- 00257
$MacroDirectory           ----- 00258
$MacroSystemInfo          ----- 00259
$MailAddresses            ----- 00268 00516 00517 00871 00872 00873
$MetaData                 ----- 00953 00955 00957 00975
$MetaEventLogCount        ----- 00972 00985
$MetaEventLogFull         ----- 00971 00984
$MetaEventLogOldest       ----- 00973 00986
$MetaIdleTime             ----- 00960 00976
$MetaMemAvailPageFile     ----- 00967 00981
$MetaMemAvailPhysRam      ----- 00965 00979
$MetaMemAvailVirtual      ----- 00969 00983
$MetaMemLoad              ----- 00963 00977
$MetaMemTotalPageFile     ----- 00966 00980
$MetaMemTotalPhysRam      ----- 00964 00978
$MetaMemTotalVirtual      ----- 00968 00982
$MsgBoxTimeout            ----- 00091 00825
$Name                     ----- 00795 00796 00797 00803 00804 00805
$NetPhoneClientDir        ----- 00131 00132
$NetPhoneClientExists     ----- 00133 00626
$NetPhoneClientFileName   ----- 00130 00132 00542
$NetPhoneClientPath       ----- 00132 00133
$NetPhoneUserChecksum     ----- 00108 00553 00556 00559 00565
$Password                 ----- 00803 00806
$Path                     ----- 00795 00798 00803 00806
$PowerkatalogDir          ----- 00121 00122
$PowerkatalogExists       ----- 00123 00624
$PowerkatalogFileName     ----- 00120 00122
$PowerkatalogPath         ----- 00122 00123
$RUN_LOGON_NETWORK        ----- 00806
$RootDir                  ----- 00137 00138 00142 00152 00162
$RootExists               ----- 00139
$RootFileName             ----- 00136 00138
$RootPath                 ----- 00138 00139
$SHDUpdaterDir            ----- 00126 00127
$SHDUpdaterExists         ----- 00128 00625
$SHDUpdaterFileName       ----- 00125 00127
$SHDUpdaterPath           ----- 00127 00128
$STR_STRIPLEADING         ----- 00582
$STR_STRIPTRAILING        ----- 00582
$ScrapeComplete           ----- 00272 00911 00913 00918 00928
$ScreenCaptureWnd         ----- 00107 00582
$Section                  ----- 00777 00779 00781 00782
$ShowFlag                 ----- 00795 00798
$SmtpMailEHLO             ----- 00263 00895
$SmtpMailFirst            ----- 00264 00895
$SmtpMailSmtpServer       ----- 00262 00519 00895
$SmtpMailTrace            ----- 00265 00895
$SourceDir                ----- 00834 00835 00837 00838
$SourcePath               ----- 00944 00945
$SpawnDir                 ----- 00111 00112 00788
$SpawnExists              ----- 00113 00622 00788
$SpawnFileName            ----- 00110 00112 00632 00788
$SpawnPath                ----- 00112 00113 00632 00788
$StartTimer               ----- 00094 00095 00096 00097 00098 00099 00100 00101 00102
$T1                       ----- 00089
$T2                       ----- 00090
$Text                     ----- 00395 00396 00397 00399 00400 00401
$Timer                    ----- 00607 00608 00610
$Timer1                   ----- 00095 00383
$Timer2                   ----- 00096 00384
$Timer3                   ----- 00097 00385
$Timer4                   ----- 00098 00386
$Timer5                   ----- 00099 00387
$Timer6                   ----- 00100 00388
$Timer7                   ----- 00101 00389
$Timer8                   ----- 00102
$TrayTipTimeout           ----- 00092
$UBOUND_COLUMNS           ----- 01012 01013
$UBOUND_DIMENSIONS        ----- 01005 01006
$UBOUND_ROWS              ----- 01011 01013
$UserName                 ----- 00803 00805 00806
$Value                    ----- 00602 00603 00604 00777 00781 00782
$Var                      ----- 00602 00603
$WIN_STATE_ACTIVE         ----- 00470 00579
$WIN_STATE_ENABLED        ----- 00470
$WIN_STATE_EXISTS         ----- 00470
$WIN_STATE_MAXIMIZED      ----- 00470 00590
$WIN_STATE_MINIMIZED      ----- 00470 00561 00587
$WIN_STATE_VISIBLE        ----- 00470 00483
$Warning                  ----- 00818 00825 00898 00905
$WmiExporter1PID          ----- 00273 00790
$WmiExporterCollectorTextfileDir  ----- 00333 00336 00344 00949
$WmiExporterCollectorsEnabled  ----- 00305 00344
$WmiExporterLocalDir      ----- 00291 00292 00333 00790
$WmiExporterLocalExists   ----- 00293 00790 00943 00946
$WmiExporterLocalFileName  ----- 00290 00292 00790 00911 00942
$WmiExporterLocalPath     ----- 00292 00293 00790 00945 00946
$WmiExporterMetadataArray  ----- 00341 00975 00976 00977 00978 00979 00980 00981 00982 00983 00984 00985 00986 00987 
                                00989 00990
$WmiExporterMetadataArrayRet  ----- 00342 00988 00989
$WmiExporterMetadataDir   ----- 00336 00337
$WmiExporterMetadataExists  ----- 00338
$WmiExporterMetadataFileName  ----- 00335 00337
$WmiExporterMetadataPath  ----- 00337 00338 00988 00990
$WmiExporterMetadataString  ----- 00340 00522 00523 00954 00955
$WmiExporterParams        ----- 00344 00364 00790
$WmiExporterX32GlobalNetSetupDir  ----- 00296 00297
$WmiExporterX32GlobalNetSetupExists  ----- 00298
$WmiExporterX32GlobalNetSetupFileName  ----- 00295 00297
$WmiExporterX32GlobalNetSetupPath  ----- 00297 00298 00944
$WmiExporterX64GlobalNetSetupDir  ----- 00301 00302
$WmiExporterX64GlobalNetSetupExists  ----- 00303
$WmiExporterX64GlobalNetSetupFileName  ----- 00300 00302
$WmiExporterX64GlobalNetSetupPath  ----- 00302 00303 00944
$aArray                   ----- 00853 00858
$aArray1                  ----- 00997 01000 01005 01011 01012 01024 01033 01044 01053
$aArray2                  ----- 00997 01000 01006 01013 01034 01045 01053
$aList                    ----- 00456 00468 00469 00470
$aMemStats                ----- 00962 00963 00964 00965 00966 00967 00968 00969
$aPos                     ----- 00547 00548 00549 00550 00551 00552 00553 00559
$asBody                   ----- 00885 00886 00887 00888 00889 00890 00891 00892 00893 00894 00895 00898
$hDownload                ----- 00271 00912 00919 00920 00926 00927
$hEventLog                ----- 00405 00406 00407 00408 00409
$hWnd                     ----- 00539 00544 00545 00547 00561 00575 00583 00584 00585 00588 00591 00597 00598 00599
$hWndActive               ----- 00538 00564 00576 00580 00597
$i                        ----- 00468 00469 00470 00482 00483 00484 00515 00516 00517 00577 00578 00579 00580 00582 
                                00583 00585 00587 00590 00870 00871 00872 00873 01022 01024 01031 01033 01034 01043 
                                01044 01045
$iBytes                   ----- 00852 00854 00856 00858
$iCols                    ----- 01012 01013 01023 01032 01042
$iDims                    ----- 01005 01006
$iErr                     ----- 00896 00898
$iFreeSpace               ----- 00864 00866 00873 00881 00893
$iFreeSpacePerc           ----- 00866 00867 00873 00881 00884 00894
$iIndex                   ----- 00853 00855 00858
$iMode                    ----- 00997 01019
$iResponse                ----- 00895 00897
$iRows                    ----- 01011 01013 01022 01031 01043
$iState                   ----- 00467 00469 00470 00544 00561
$iTotalSpace              ----- 00865 00866 00873 00881 00893
$j                        ----- 01023 01024 01032 01033 01034 01042 01044 01045
$sFromAddress             ----- 00883 00895
$sFromName                ----- 00882 00895
$sLabel                   ----- 00862 00873 00881 00892
$sString_1                ----- 01017 01033 01036 01044 01047
$sString_2                ----- 01017 01034 01036 01045 01047
$sSubject                 ----- 00884 00895
$sToAddress               ----- 00881 00895
0                         ----- 00070 00093 00265 00271 00274 00382 00391 00460 00461 00462 00463 00464 00465 00466 
                                00468 00470 00479 00482 00483 00484 00491 00515 00516 00517 00532 00533 00548 00550 
                                00552 00553 00559 00565 00577 00578 00582 00613 00620 00621 00622 00623 00624 00625 
                                00626 00628 00629 00630 00632 00637 00638 00639 00640 00641 00642 00643 00644 00645 
                                00647 00648 00649 00650 00651 00652 00653 00655 00656 00657 00658 00659 00660 00661 
                                00662 00664 00665 00666 00667 00668 00669 00670 00671 00672 00673 00674 00675 00677 
                                00678 00679 00680 00681 00682 00683 00684 00685 00686 00687 00688 00689 00690 00691 
                                00693 00694 00695 00696 00800 00853 00870 00871 00872 00873 00885 00897 00913 00927 
                                00971 00987 00997 01001 01007 01014 01021 01022 01023 01025 01031 01032 01037 01042 
                                01043 01048 01054
0x7FFFFFFFFFFFFFFF        ----- 00104
0x8000000000000000        ----- 00103
1                         ----- 00044 00062 00257 00258 00259 00264 00272 00383 00387 00388 00392 00458 00460 00468 
                                00469 00470 00479 00481 00482 00484 00491 00501 00515 00517 00549 00551 00553 00559 
                                00577 00580 00583 00855 00868 00870 00871 00928 00971 00975 00987 00990 01001 01022 
                                01023 01030 01031 01032 01042 01043 01060
10                        ----- 00268 00381 00386 00984
100                       ----- 00506 00866
1023                      ----- 00854
1024                      ----- 00506 00856 00893 00964 00965 00966 00967 00968 00969
11                        ----- 00985
12                        ----- 00986
13                        ----- 00341
14                        ----- 00832
15                        ----- 00092 00389 00551
15e3                      ----- 00089 00090 00383
174                       ----- 00550
1e3                       ----- 00500 00960
2                         ----- 00257 00258 00259 00268 00389 00461 00550 00553 00559 00579 00873 00893 00964 00965 
                                00966 00967 00968 00969 00976 01007 01041
250                       ----- 00546
3                         ----- 00462 00483 00549 00551 00553 00559 00587 00977 00989 01014 01052
300                       ----- 00382
3000                      ----- 00874
30e3                      ----- 00387 00388
4                         ----- 00463 00590 00978 01025 01037 01048 01054
42                        ----- 00380
5                         ----- 00091 00384 00385 00464 00481 00484 00514 00979
500                       ----- 00391
54                        ----- 00549
57                        ----- 00548
5e3                       ----- 00353 00378
6                         ----- 00465 00484 00980
60                        ----- 00091
60e3                      ----- 00384 00385 00386 00389
7                         ----- 00466 00484 00981
8                         ----- 00458 00982
9                         ----- 00515 00870 00983
@AppDataCommonDir         ----- 00647
@AppDataDir               ----- 00655
@AutoItExe                ----- 00642
@AutoItPID                ----- 00643
@AutoItVersion            ----- 00644
@AutoItX64                ----- 00645
@CPUArch                  ----- 00677
@CRLF                     ----- 00087 00397 00818 00898
@ComSpec                  ----- 00675
@CommonFilesDir           ----- 00671
@Compiled                 ----- 00353 00364 00378 00442 00449 00637
@ComputerName             ----- 00105 00200 00263 00401 00522 00524 00619 00686 00884 00887
@DesktopCommonDir         ----- 00648
@DesktopDepth             ----- 00695
@DesktopDir               ----- 00657
@DesktopHeight            ----- 00693
@DesktopRefresh           ----- 00696
@DesktopWidth             ----- 00694
@DocumentsCommonDir       ----- 00649
@FavoritesCommonDir       ----- 00650
@FavoritesDir             ----- 00659
@HomeDrive                ----- 00281 00291 00664 00862 00864 00865 00892
@HomePath                 ----- 00665
@HomeShare                ----- 00666
@IPAddress1               ----- 00619 00620 00688 00888
@IPAddress2               ----- 00689 00889
@IPAddress3               ----- 00690 00890
@IPAddress4               ----- 00691 00891
@KBLayout                 ----- 00678
@LocalAppDataDir          ----- 00656
@LogonDNSDomain           ----- 00667
@LogonDomain              ----- 00668
@LogonServer              ----- 00669
@MDAY                     ----- 00507 00817 00832 00868 00869
@MIN                      ----- 00507
@MON                      ----- 00507 00817 00832 00868 00869
@MSEC                     ----- 00507
@MUILang                  ----- 00679
@MyDocumentsDir           ----- 00111 00658
@OSArch                   ----- 00680 00944
@OSBuild                  ----- 00684
@OSLang                   ----- 00681
@OSServicePack            ----- 00685
@OSType                   ----- 00682
@OSVersion                ----- 00683
@ProgramFilesDir          ----- 00116 00121 00126 00131 00670
@ProgramsCommonDir        ----- 00651
@ProgramsDir              ----- 00660
@SEC                      ----- 00507
@SW_HIDE                  ----- 00795
@SW_MAXIMIZE              ----- 00591
@SW_MINIMIZE              ----- 00561 00588
@ScriptDir                ----- 00147 00639
@ScriptFullPath           ----- 00106 00640
@ScriptName               ----- 00638
@StartMenuCommonDir       ----- 00652
@StartMenuDir             ----- 00661
@StartupCommonDir         ----- 00653
@SystemDir                ----- 00673
@TempDir                  ----- 00674
@UserName                 ----- 00401 00687
@UserProfileDir           ----- 00253 00662
@WindowsDir               ----- 00672
@WorkingDir               ----- 00641
@YEAR                     ----- 00507 00817 00832 00868 00869
@error                    ----- 00541 00593 00839 00896
#### AkkDir               00147
#### AkkExists            00149
#### AkkFileName          00146
#### AkkNetDir            00152
#### AkkNetExists         00154
#### AkkNetFileName       00151
#### AkkNetPath           00153
#### AkkNetTime           00448
#### AkkPath              00148
#### AkkRootDir           00142
#### AkkRootExists        00144
#### AkkRootFileName      00141
#### AkkRootPath          00143
#### AkkTime              00447
#### AkkUpdaterDir        00157
#### AkkUpdaterExists     00159
#### AkkUpdaterFileName   00156
#### AkkUpdaterNetDir     00162
#### AkkUpdaterNetExists  00164
#### AkkUpdaterNetFileName  00161
#### AkkUpdaterNetPath    00163
#### AkkUpdaterNetTime    00441
#### AkkUpdaterPath       00158
#### AkkUpdaterTime       00440
#### AkkVersion           00106
And                       ----- 00389 00413 00416 00419 00442 00449 00483 00556 00796 00804 00871 00911 00954
Array                     ----- 00036
#### ArrayDelimItem       00256
AutoItConstants           ----- 00028
ByRef                     ----- 00602 00607 00997
Case                      ----- 01021 01030 01041 01052
#### ComputerName         00105
Const                     ----- 00089 00090 00091 00092 00103 00104 00105 00106 00107 00110 00111 00112 00113 00115 
                                00116 00117 00118 00120 00121 00122 00123 00125 00126 00127 00128 00130 00131 00132 
                                00133 00136 00137 00138 00139 00141 00142 00143 00144 00146 00147 00148 00149 00151 
                                00152 00153 00154 00156 00157 00158 00161 00162 00163 00164 00166 00167 00168 00169 
                                00171 00172 00173 00176 00177 00178 00179 00181 00182 00183 00186 00187 00188 00189 
                                00194 00200 00206 00211 00216 00217 00218 00219 00221 00222 00223 00224 00226 00227 
                                00228 00229 00231 00232 00233 00234 00236 00237 00238 00239 00241 00242 00243 00244 
                                00247 00248 00249 00250 00253 00254 00256 00263 00264 00265 00280 00281 00282 00285 
                                00286 00287 00288 00290 00291 00292 00295 00296 00297 00298 00300 00301 00302 00303 
                                00305 00333 00335 00336 00337 00344 00818 00838 00862 00864 00865 00866 00898 00997
#### Const$aArray2        00997
#### Cycle                00093
Date                      ----- 00039
Debug                     ----- 00035
Default                   ----- 00553 00561 00588 00591 00838
#### Delay                00607
#### Dest                 00507
#### DestDir              00834
#### Diff                 00608
Dir                       00795 00803
#### Domain               00803
#### DownloadsDir         00253
#### DownloadsOldDir      00254
Else                      ----- 00543 00922
EndFunc                   ----- 00402 00410 00453 00494 00510 00527 00535 00571 00600 00605 00614 00775 00784 00793 
                                00801 00808 00829 00833 00845 00849 00859 00879 00907 00915 00931 00939 00950 00992 
                                01062
EndIf                     ----- 00390 00415 00418 00421 00429 00438 00445 00452 00489 00503 00509 00520 00525 00526 
                                00534 00560 00562 00563 00581 00586 00589 00592 00594 00595 00612 00780 00799 00807 
                                00827 00828 00843 00844 00875 00877 00878 00906 00914 00925 00929 00930 00937 00938 
                                00947 00948 00956 00991 01002 01008 01015 01026 01038 01049 01055
EndSwitch                 ----- 01057
EventLog                  ----- 00033
#### EventLogCount        00277
#### EventLogFull         00276
#### EventLogOldest       00278
#### ExactFileDir         00281
#### ExactFileExists      00283
#### ExactFileFileName    00280
#### ExactFileNetDir      00286
#### ExactFileNetExists   00288
#### ExactFileNetFileName  00285
#### ExactFileNetPath     00287
#### ExactFilePath        00282
Exists                    00795 00803
False                     ----- 00107
File                      ----- 00037
FileConstants             ----- 00031
#### FileName             00777
#### FolderList           00838
For                       ----- 00468 00482 00515 00577 00840 00870 01022 01023 01031 01032 01042 01043
Func                      ----- 00395 00404 00412 00455 00496 00512 00529 00537 00573 00602 00607 00616 00777 00787 
                                00795 00803 00811 00831 00834 00847 00852 00861 00881 00910 00917 00933 00941 00952 
                                00997
Global                    ----- 00089 00090 00091 00092 00093 00094 00095 00096 00097 00098 00099 00100 00101 00102 
                                00103 00104 00105 00106 00107 00108 00110 00111 00112 00113 00115 00116 00117 00118 
                                00120 00121 00122 00123 00125 00126 00127 00128 00130 00131 00132 00133 00136 00137 
                                00138 00139 00141 00142 00143 00144 00146 00147 00148 00149 00151 00152 00153 00154 
                                00156 00157 00158 00159 00161 00162 00163 00164 00166 00167 00168 00169 00171 00172 
                                00173 00174 00176 00177 00178 00179 00181 00182 00183 00184 00186 00187 00188 00189 
                                00191 00193 00194 00195 00196 00199 00200 00201 00202 00205 00206 00207 00208 00210 
                                00211 00212 00213 00216 00217 00218 00219 00221 00222 00223 00224 00226 00227 00228 
                                00229 00231 00232 00233 00234 00236 00237 00238 00239 00241 00242 00243 00244 00247 
                                00248 00249 00250 00253 00254 00256 00257 00258 00259 00262 00263 00264 00265 00267 
                                00268 00271 00272 00273 00274 00276 00277 00278 00280 00281 00282 00283 00285 00286 
                                00287 00288 00290 00291 00292 00293 00295 00296 00297 00298 00300 00301 00302 00303 
                                00305 00333 00335 00336 00337 00338 00340 00341 00342 00344
#### IdleTime             00274
If                        ----- 00197 00203 00214 00245 00251 00353 00364 00378 00383 00384 00385 00386 00387 00388 
                                00389 00413 00416 00419 00425 00433 00442 00449 00483 00500 00506 00513 00521 00523 
                                00531 00541 00542 00545 00556 00561 00578 00579 00582 00584 00587 00590 00593 00609 
                                00778 00796 00804 00812 00825 00835 00836 00839 00867 00871 00888 00889 00890 00891 
                                00897 00911 00918 00919 00920 00921 00934 00935 00943 00945 00949 00954 00989 01000 
                                01006 01013 01024 01036 01047 01053
In                        ----- 00840
Inet                      ----- 00040
#### IniGlobalDir         00172
#### IniGlobalExDir       00182
#### IniGlobalExExists    00184
#### IniGlobalExFileName  00181
#### IniGlobalExNetDir    00187
#### IniGlobalExNetExists  00189
#### IniGlobalExNetFileName  00186
#### IniGlobalExNetPath   00188
#### IniGlobalExNetTime   00432
#### IniGlobalExPath      00183
#### IniGlobalExTime      00431
#### IniGlobalExists      00174
#### IniGlobalFileName    00171
#### IniGlobalNetDir      00177
#### IniGlobalNetExists   00179
#### IniGlobalNetFileName  00176
#### IniGlobalNetLogDir   00217
#### IniGlobalNetLogExists  00219
#### IniGlobalNetLogFileName  00216
#### IniGlobalNetLogInstanceDir  00227
#### IniGlobalNetLogInstanceExists  00229
#### IniGlobalNetLogInstanceFileName  00226
#### IniGlobalNetLogInstancePath  00228
#### IniGlobalNetLogPath  00218
#### IniGlobalNetPath     00178
#### IniGlobalNetTime     00424
#### IniGlobalPath        00173
#### IniGlobalTime        00423
#### IniLocalDir          00167
#### IniLocalExists       00169
#### IniLocalFileName     00166
#### IniLocalPath         00168
#### IntMax               00104
#### IntMin               00103
#### IsSectionAddedToKey  00777
#### KPSInfoDir           00116
#### KPSInfoExists        00118
#### KPSInfoFileName      00115
#### KPSInfoPath          00117
#### Key                  00777
#### List                 00574
#### ListStates           00458
#### ListVisble           00481
Local                     ----- 00405 00423 00424 00431 00432 00440 00441 00447 00448 00456 00458 00467 00481 00507 
                                00538 00539 00544 00547 00574 00575 00576 00608 00818 00838 00853 00862 00864 00865 
                                00866 00882 00883 00884 00885 00895 00896 00898 00944 00953 00960 00962 00963 00964 
                                00965 00966 00967 00968 00969 00971 00972 00973 01005 01011 01012 01017
#### LogArchiveNetDir     00211
#### LogArchiveNetExists  00213
#### LogArchiveNetFileName  00210
#### LogArchiveNetPath    00212
#### LogDir               00194
#### LogExists            00196
#### LogFileID            00191
#### LogFileName          00193
#### LogGlobalNetDir      00206
#### LogGlobalNetExists   00208
#### LogGlobalNetFileName  00205
#### LogGlobalNetPath     00207
#### LogNetDir            00200
#### LogNetExists         00202
#### LogNetFileName       00199
#### LogNetPath           00201
#### LogPath              00195
#### LogScrapeDir         00232
#### LogScrapeExists      00234
#### LogScrapeFileName    00231
#### LogScrapeNetDir      00237
#### LogScrapeNetExists   00239
#### LogScrapeNetFileName  00236
#### LogScrapeNetPath     00238
#### LogScrapePath        00233
#### LogScreenCapDir      00242
#### LogScreenCapExists   00244
#### LogScreenCapFileName  00241
#### LogScreenCapNetDir   00248
#### LogScreenCapNetExists  00250
#### LogScreenCapNetFileName  00247
#### LogScreenCapNetPath  00249
#### LogScreenCapPath     00243
#### LogSpawnStatsNetDir  00222
#### LogSpawnStatsNetExists  00224
#### LogSpawnStatsNetFileName  00221
#### LogSpawnStatsNetPath  00223
#### LowSpaceThresholdPerc  00267
#### MacroAutoIt          00257
#### MacroDirectory       00258
#### MacroSystemInfo      00259
#### MailAddresses        00268
#### MetaData             00953
#### MetaEventLogCount    00972
#### MetaEventLogFull     00971
#### MetaEventLogOldest   00973
#### MetaIdleTime         00960
#### MetaMemAvailPageFile  00967
#### MetaMemAvailPhysRam  00965
#### MetaMemAvailVirtual  00969
#### MetaMemLoad          00963
#### MetaMemTotalPageFile  00966
#### MetaMemTotalPhysRam  00964
#### MetaMemTotalVirtual  00968
Misc                      ----- 00038
MsgBoxConstants           ----- 00029
#### MsgBoxTimeout        00091
Name                      00795 00803
#### NetPhoneClientDir    00131
#### NetPhoneClientExists  00133
#### NetPhoneClientFileName  00130
#### NetPhoneClientPath   00132
#### NetPhoneUserChecksum  00108
Next                      ----- 00478 00490 00518 00596 00842 00876 01027 01028 01035 01039 01046 01050
Not                       ----- 00197 00203 00214 00245 00251 00364 00413 00416 00419 00556 00796 00804 00836 00839 
                                00918 00934 00943 00949 00954 00989
Or                        ----- 01000 01013
#### Password             00803
Path                      00795 00803
#### PowerkatalogDir      00121
#### PowerkatalogExists   00123
#### PowerkatalogFileName  00120
#### PowerkatalogPath     00122
Return                    ----- 00493 00599 00604 00611 00613 00798 00800 00848 00858 01001 01007 01014 01025 01037 
                                01048 01054 01060
#### RootDir              00137
#### RootExists           00139
#### RootFileName         00136
#### RootPath             00138
#### SHDUpdaterDir        00126
#### SHDUpdaterExists     00128
#### SHDUpdaterFileName   00125
#### SHDUpdaterPath       00127
#### ScrapeComplete       00272
ScreenCapture             ----- 00032
#### ScreenCaptureWnd     00107
#### Section              00777
#### ShowFlag             00795
#### SmtpMailEHLO         00263
#### SmtpMailFirst        00264
#### SmtpMailSmtpServer   00262
#### SmtpMailTrace        00265
#### SourceDir            00834
#### SourcePath           00944
#### SpawnDir             00111
#### SpawnExists          00113
#### SpawnFileName        00110
#### SpawnPath            00112
#### StartTimer           00094
Step                      ----- 00515 00870
Switch                    ----- 01019
#### T1                   00089
#### T2                   00090
#### Text                 00395
Then                      ----- 00197 00203 00214 00245 00251 00353 00364 00378 00382 00383 00384 00385 00386 00387 
                                00388 00389 00391 00413 00416 00419 00425 00433 00442 00449 00483 00500 00506 00513 
                                00521 00523 00531 00541 00542 00545 00556 00561 00578 00579 00582 00584 00587 00590 
                                00593 00609 00778 00796 00804 00812 00825 00835 00836 00839 00867 00868 00871 00888 
                                00889 00890 00891 00897 00911 00918 00919 00920 00921 00934 00935 00943 00945 00949 
                                00954 00989 01000 01006 01013 01024 01036 01047 01053
#### Timer                00607
#### Timer1               00095
#### Timer2               00096
#### Timer3               00097
#### Timer4               00098
#### Timer5               00099
#### Timer6               00100
#### Timer7               00101
#### Timer8               00102
Timers                    ----- 00034
To                        ----- 00468 00482 00515 00577 00870 01022 01023 01031 01032 01042 01043
TrayConstants             ----- 00030
#### TrayTipTimeout       00092
True                      ----- 00838
#### UserName             00803
Value                     00602 00777
#### Var                  00602
WEnd                      ----- 00393 00857
Warning                   00818 00898
While                     ----- 00380 00854
#### WmiExporter1PID      00273
#### WmiExporterCollectorTextfileDir  00333
#### WmiExporterCollectorsEnabled  00305
#### WmiExporterLocalDir  00291
#### WmiExporterLocalExists  00293
#### WmiExporterLocalFileName  00290
#### WmiExporterLocalPath  00292
#### WmiExporterMetadataArray  00341
#### WmiExporterMetadataArrayRet  00342
#### WmiExporterMetadataDir  00336
#### WmiExporterMetadataExists  00338
#### WmiExporterMetadataFileName  00335
#### WmiExporterMetadataPath  00337
#### WmiExporterMetadataString  00340
#### WmiExporterParams    00344
#### WmiExporterX32GlobalNetSetupDir  00296
#### WmiExporterX32GlobalNetSetupExists  00298
#### WmiExporterX32GlobalNetSetupFileName  00295
#### WmiExporterX32GlobalNetSetupPath  00297
#### WmiExporterX64GlobalNetSetupDir  00301
#### WmiExporterX64GlobalNetSetupExists  00303
#### WmiExporterX64GlobalNetSetupFileName  00300
#### WmiExporterX64GlobalNetSetupPath  00302
#### aArray               00853
#### aArray1              00997
#### aList                00456
#### aMemStats            00962
#### aPos                 00547
#### asBody               00885
au3                       ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036 00037 00038 00039 00040
#### dieSiebenötigen     00818
#### hDownload            00271
#### hEventLog            00405
hWnd                      00539 00575
hWndActive                00538 00576
#### iBytes               00852
#### iCols                01013
#### iDims                01006
#### iErr                 00896
iFreeSpace                00864 00881
iFreeSpacePerc            00866 00881
#### iIndex               00853
#### iMode                00997
#### iResponse            00895
#### iRows                01012
iState                    00467 00544
iTotalSpace               00865 00881
#### kopierenSiediesebitteaneinenanderenOrt.'&@CRLF&'AlleDateienausdemOrdnerwurdenbereitsindenOrdnerverschoben.'&@CRLF&'DerOrdneristübereineVerknüpfunginzuerreichen.'&@CRLF&'AlleIhreDateiendieimOrdnerble  00818
#### sFromAddress         00883
#### sFromName            00882
sLabel                    00862 00881
#### sString_1            01018
#### sString_2            01018
#### sSubject             00884
#### sToAddress           00881
#### username             00953
#### werdendemnächstunwiderruflichGELÖSCHT!'&@CRLF&'BittesichtenundsichernSieambestenjetztsofortIhreweiterhinbenötigtenDateien.'&@CRLF&'SollderOrdnerjetztgeöffnetwerden?'&@CRLF  00818
== Sort Func Names Within #regions =====================================================================
 --------------- Current sequence  ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000041   #Region - Options
0000000086   #EndRegion - Options
0000000088   #Region Globals 1
0000000134   #EndRegion Globals 1
0000000135   #Region Globals 2
0000000260   #EndRegion Globals 2
0000000261   #Region Globals SMTP
0000000269   #EndRegion Globals SMTP
0000000270   #Region Globals Prometheus WMI Exporter
0000000349   #EndRegion Globals Prometheus WMI Exporter
0000000350   #Region
0000000395   Func ConsoleLog($Text)
0000000402   EndFunc   ;==>ConsoleLog
0000000404   Func EventLog()
0000000410   EndFunc   ;==>EventLog
0000000412   Func GetGlobalConfig()
0000000453   EndFunc   ;==>GetGlobalConfig
0000000455   Func GetWinList()
0000000494   EndFunc   ;==>GetWinList
0000000496   Func ManageLogFile()
0000000510   EndFunc   ;==>ManageLogFile
0000000512   Func ReadGlobalConfig()
0000000527   EndFunc   ;==>ReadGlobalConfig
0000000529   Func ReadLocalConfig()
0000000535   EndFunc   ;==>ReadLocalConfig
0000000537   Func ScreenCaptureNetPhoneClient()
0000000571   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000573   Func ScreenCaptureWnd()
0000000600   EndFunc   ;==>ScreenCaptureWnd
0000000602   Func SetVar(ByRef $Var, $Value)
0000000605   EndFunc   ;==>SetVar
0000000607   Func Timeout(ByRef $Timer, $Delay)
0000000614   EndFunc   ;==>Timeout
0000000616   Func WriteLogStartup()
0000000775   EndFunc   ;==>WriteLogStartup
0000000777   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000784   EndFunc   ;==>WriteLogStartupIni
0000000785   #EndRegion
0000000786   #Region CheckAndRunProc
0000000787   Func Check()
0000000793   EndFunc   ;==>Check
0000000795   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000801   EndFunc   ;==>CheckAndRunProc
0000000803   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000808   EndFunc   ;==>CheckAndRunProcAs
0000000809   #EndRegion CheckAndRunProc
0000000810   #Region CleaningDownloads
0000000811   Func CleaningDownloads()
0000000829   EndFunc   ;==>CleaningDownloads
0000000831   Func DownloadsNeedCleaning()
0000000833   EndFunc   ;==>DownloadsNeedCleaning
0000000834   Func FileDirMoveRec($SourceDir, $DestDir)
0000000845   EndFunc   ;==>FileDirMoveRec
0000000847   Func GetDownloadsLastCleaningDate()
0000000849   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000850   #EndRegion CleaningDownloads
0000000851   #Region FreeSpaceCheck
0000000852   Func ByteSuffix($iBytes)
0000000859   EndFunc   ;==>ByteSuffix
0000000861   Func CheckHomeDriveSpaceFree()
0000000879   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000881   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000907   EndFunc   ;==>SendMailLowSpace
0000000908   #EndRegion FreeSpaceCheck
0000000909   #Region WMI Exporter
0000000910   Func Scrape()
0000000915   EndFunc   ;==>Scrape
0000000917   Func ScrapeDownload()
0000000931   EndFunc   ;==>ScrapeDownload
0000000933   Func SetupExactFile()
0000000939   EndFunc   ;==>SetupExactFile
0000000941   Func SetupWmiExporter()
0000000950   EndFunc   ;==>SetupWmiExporter
0000000952   Func WriteMetaDataFile()
0000000992   EndFunc   ;==>WriteMetaDataFile
0000000993   #EndRegion WMI Exporter
0000000994   #Region UDF
0000000997   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000001062   EndFunc   ;==>_ArrayCompare
0000001063   #EndRegion UDF
 --------------- New Sequence      ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000041   #Region - Options
0000000086   #EndRegion - Options
0000000088   #Region Globals 1
0000000134   #EndRegion Globals 1
0000000135   #Region Globals 2
0000000260   #EndRegion Globals 2
0000000261   #Region Globals SMTP
0000000269   #EndRegion Globals SMTP
0000000270   #Region Globals Prometheus WMI Exporter
0000000349   #EndRegion Globals Prometheus WMI Exporter
0000000350   #Region
0000000395   Func ConsoleLog($Text)
0000000402   EndFunc   ;==>ConsoleLog
0000000404   Func EventLog()
0000000410   EndFunc   ;==>EventLog
0000000412   Func GetGlobalConfig()
0000000453   EndFunc   ;==>GetGlobalConfig
0000000455   Func GetWinList()
0000000494   EndFunc   ;==>GetWinList
0000000496   Func ManageLogFile()
0000000510   EndFunc   ;==>ManageLogFile
0000000512   Func ReadGlobalConfig()
0000000527   EndFunc   ;==>ReadGlobalConfig
0000000529   Func ReadLocalConfig()
0000000535   EndFunc   ;==>ReadLocalConfig
0000000537   Func ScreenCaptureNetPhoneClient()
0000000571   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000573   Func ScreenCaptureWnd()
0000000600   EndFunc   ;==>ScreenCaptureWnd
0000000602   Func SetVar(ByRef $Var, $Value)
0000000605   EndFunc   ;==>SetVar
0000000607   Func Timeout(ByRef $Timer, $Delay)
0000000614   EndFunc   ;==>Timeout
0000000616   Func WriteLogStartup()
0000000775   EndFunc   ;==>WriteLogStartup
0000000777   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000784   EndFunc   ;==>WriteLogStartupIni
0000000785   #EndRegion
0000000786   #Region CheckAndRunProc
0000000787   Func Check()
0000000793   EndFunc   ;==>Check
0000000795   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000801   EndFunc   ;==>CheckAndRunProc
0000000803   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000808   EndFunc   ;==>CheckAndRunProcAs
0000000809   #EndRegion CheckAndRunProc
0000000810   #Region CleaningDownloads
0000000811   Func CleaningDownloads()
0000000829   EndFunc   ;==>CleaningDownloads
0000000831   Func DownloadsNeedCleaning()
0000000833   EndFunc   ;==>DownloadsNeedCleaning
0000000834   Func FileDirMoveRec($SourceDir, $DestDir)
0000000845   EndFunc   ;==>FileDirMoveRec
0000000847   Func GetDownloadsLastCleaningDate()
0000000849   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000850   #EndRegion CleaningDownloads
0000000851   #Region FreeSpaceCheck
0000000852   Func ByteSuffix($iBytes)
0000000859   EndFunc   ;==>ByteSuffix
0000000861   Func CheckHomeDriveSpaceFree()
0000000879   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000881   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000907   EndFunc   ;==>SendMailLowSpace
0000000908   #EndRegion FreeSpaceCheck
0000000909   #Region WMI Exporter
0000000910   Func Scrape()
0000000915   EndFunc   ;==>Scrape
0000000917   Func ScrapeDownload()
0000000931   EndFunc   ;==>ScrapeDownload
0000000933   Func SetupExactFile()
0000000939   EndFunc   ;==>SetupExactFile
0000000941   Func SetupWmiExporter()
0000000950   EndFunc   ;==>SetupWmiExporter
0000000952   Func WriteMetaDataFile()
0000000992   EndFunc   ;==>WriteMetaDataFile
0000000993   #EndRegion WMI Exporter
0000000994   #Region UDF
0000000997   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000001062   EndFunc   ;==>_ArrayCompare
0000001063   #EndRegion UDF
== END Sort Func Names Within #Region - #EndRegion =====================================================

