========================================================================================================
===  Tidy report for :C:\Users\bauer\Documents\GitHub\Brauckhoff\src\akk.au3
========================================================================================================

00001    #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_Version=Beta
00003    #AutoIt3Wrapper_Icon=icons\MyAutoIt3_Green.ico
00004    #AutoIt3Wrapper_Outfile=..\bin\akk.exe
00005    #AutoIt3Wrapper_UseX64=n
00006    #AutoIt3Wrapper_Res_Comment=Hallo Werner!
00007    #AutoIt3Wrapper_Res_Description=Akk Brauckhoff Bot
00008    #AutoIt3Wrapper_Res_Fileversion=1.0.0.108
00009    #AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
00010    #AutoIt3Wrapper_Res_ProductName=Akk Brauckhoff Bot
00011    #AutoIt3Wrapper_Res_CompanyName=Sliph Co.
00012    #AutoIt3Wrapper_Res_LegalCopyright=Searinox
00013    #AutoIt3Wrapper_Res_LegalTradeMarks=Akk
00014    #AutoIt3Wrapper_Res_SaveSource=y
00015    #AutoIt3Wrapper_Res_Language=1031
00016    #AutoIt3Wrapper_Res_Field=Made By|Searinox
00017    #AutoIt3Wrapper_Run_AU3Check=n
00018    #AutoIt3Wrapper_AU3Check_Stop_OnWarning=y
00019    #Autoit3wrapper_Jump_to_First_Error=n
00020    #AutoIt3Wrapper_AU3Check_Parameters=-q -d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -v 1
00021    #AutoIt3Wrapper_Run_Before=call "..\compile\before.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00022    #AutoIt3Wrapper_Run_After=call "..\compile\after.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00023    #AutoIt3Wrapper_Run_Tidy=y
00024    #Tidy_Parameters=/tc 4 /gd /reel /sci 1 /kv 0 /bdir "tidy\bdir\" /sf /ewnl
00025    #AutoIt3Wrapper_Run_Au3Stripper=y
00026    #Au3Stripper_Parameters=/tl /debug /pe /mi=99 /rm /rsln /Beta
00027    #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
00028    #cs ----------------------------------------------------------------------------
00029       
00030    #ce ----------------------------------------------------------------------------
00031    ;~ #include <AutoItConstants.au3>
00032    ;~ #include <MsgBoxConstants.au3>
00033    ;~ #include <FileConstants.au3>
00034    ;~ #include <TrayConstants.au3>
00035    #include <ScreenCapture.au3>
00036    #include <udf\ArrayEx.au3>
00037    #include <EventLog.au3>
00038    #include <udf\Ini.au3>
00039    #include <udf\Map.au3>
00040    #include <Timers.au3>
00041    #include <Debug.au3>
00042    #include <Array.au3>
00043    #include <Date.au3>
00044    #include <File.au3>
00045    #include <Inet.au3>
00046    #include <Misc.au3>
00047    #Region - Options
00048    ;~ Opt('CaretCoordMode', 0)				; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.
00049    ;~ Opt('ExpandEnvStrings', 1)			; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).
00050    Opt('ExpandVarStrings', 1) ; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).
00051    ;~ Opt('FtpBinaryMode', 0)				; 1 = Binary transfer, 0 = ASCII transfer.
00052    ;~ Opt('GUICloseOnESC', 0)				; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).
00053    ; 										  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.
00054    ;~ Opt('GUICoordMode', 2)				; 1 = Absolute coordinates still relative to the dialog box.
00055    ; 										  0 = Relative position to the start of the last control (Upper left corner).
00056    ; 										  2 = Cell positionining relative to current cell.
00057    ;~ Opt('GUIDataSeparatorChar', '')		; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is ''.
00058    ;~ Opt('GUIEventOptions', 1)			; 0 = Windows behavior on click on Minimize, Restore and Maximize.
00059    ;										  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.
00060    ;										  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.
00061    ;										  3 = Combined mode of 1 & 2.
00062    ;~ Opt('GUIOnEventMode', 1)				; 0 = Disable, 1 = Enable.
00063    ;~ Opt('GUIResizeMode', 1)				; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).
00064    ;~ Opt('MouseClickDelay', 10)			; ? = 10 milliseconds by default.
00065    ;~ Opt('MouseClickDownDelay', 10)		; ? = 10 milliseconds by default.
00066    ;~ Opt('MouseClickDragDelay', 250)		; ? = 250 milliseconds by default.
00067    ;~ Opt('MouseCoordMode', 0)				; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.
00068    Opt('MustDeclareVars', 1) ; 0 = No, 1 = Require pre-declare.
00069    ;~ Opt('OnExitFunc', '')				; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).
00070    ;~ Opt('PixelCoordMode', 2)                ; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.
00071    ;~ Opt('SendAttachMode', 1)				; 0 = Don't attach, 1 = Attach.
00072    ;~ Opt('SendCapslockMode', 0)			; 1 = Store and restore, 0 = Don't store / restore.
00073    ;~ Opt('SendKeyDelay', 5)				; ? = 5 milliseconds by default.
00074    ;~ Opt('SendKeyDownDelay', 1)			; ? = 1 millisecond by default.
00075    ;~ Opt('TCPTimeout', 100)				; ? = 100 milliseconds by default.
00076    Opt('TrayAutoPause', 0) ; 1 = AutoPausing is On, 0 = AutoPausing is Off.
00077    ;~ Opt('TrayIconDebug', 1)				; 0 = No info, 1 = Debug line info.
00078    ;~ Opt('TrayIconHide', 1)				; 0 = Show, 1 = Hide.
00079    ;~ Opt('TrayMenuMode', 1)				; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,
00080    ;											user created checked items will automatically unchecked, if you double click the tray
00081    ;											icon then the controlid is returned which has the "Default"-style.
00082    ;										  1 = No default menu.
00083    ;										  2 = User created checked items will not automatically unchecked if you click it.
00084    ;										  4 = Don't return the menuitemID which has the "default"-style in
00085    ;											the main contextmenu if you double click the tray icon.
00086    ;~ Opt('TrayOnEventMode', 1)			; 0 = disable, 1 = enable.
00087    ;~ Opt('WinDetectHiddenText', 1)		; 0 = Don't detect, 1=Do detect.
00088    ;~ Opt('WinSearchChildren', 1)			; 0 = No, 1 = Search children also.
00089    ;~ Opt('WinTextMatchMode', 4)			; 1 = Complete / Slow mode, 2 = Quick mode.
00090    ;~ Opt('WinTitleMatchMode', 4)			; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.
00091    ;~ Opt('WinWaitDelay', 250)				; ? = 250 milliseconds by default.
00092    #EndRegion - Options
00093    ConsoleWrite(@CRLF)
00094    #Region Globals 1
00095    Global Const $T1 = 15e3
00096    Global Const $T2 = 15e3
00097    Global Const $MsgBoxTimeout = 60 * 5
00098    Global Const $TrayTipTimeout = 15
00099    Global $Cycle = 0
00100    Global $StartTimer = TimerInit()
00101    Global $Timer1 = $StartTimer
00102    Global $Timer2 = $StartTimer
00103    Global $Timer3 = $StartTimer
00104    Global $Timer4 = $StartTimer
00105    Global $Timer5 = $StartTimer
00106    Global $Timer6 = $StartTimer
00107    Global $Timer7 = $StartTimer
00108    Global $Timer8 = $StartTimer
00109    Global Const $IntMin = 0x8000000000000000
00110    Global Const $IntMax = 0x7FFFFFFFFFFFFFFF
00111    Global Const $ComputerName = StringReplace(StringFormat("%-16s", @ComputerName), " ", ".")
00112    Global Const $AkkVersion = FileGetVersion(@ScriptFullPath)
00113    Global Const $ScreenCaptureWnd = False
00114    Global Const $ScreenCaptureWinActivate = False
00115    Global $NetPhoneUserChecksum = ""
00116    Global $NetPhoneUser
00117    Global $ActiveWinTitle
00118    Global $hWndActivePid
00119    
00120    Global Const $SpawnFileName = "ShadowSpawn.exe"
00121    Global Const $SpawnDir = @MyDocumentsDir & "\Isopedia GmbH\ShadowSpawn\"
00122    Global Const $SpawnPath = $SpawnDir & $SpawnFileName
00123    Global Const $SpawnExists = FileExists($SpawnPath)
00124    
00125    Global Const $KPSInfoFileName = "KPSInfo.exe"
00126    Global Const $KPSInfoDir = @ProgramFilesDir & "\KPS designstudio\KPSInfo\"
00127    Global Const $KPSInfoPath = $KPSInfoDir & $KPSInfoFileName
00128    Global Const $KPSInfoExists = FileExists($KPSInfoPath)
00129    
00130    Global Const $PowerkatalogFileName = "Powerkatalog-Schnittstelle.exe"
00131    Global Const $PowerkatalogDir = @ProgramFilesDir & "\KPS designstudio\Powerkatalog-Schnittstelle\"
00132    Global Const $PowerkatalogPath = $PowerkatalogDir & $PowerkatalogFileName
00133    Global Const $PowerkatalogExists = FileExists($PowerkatalogPath)
00134    
00135    Global Const $SHDUpdaterFileName = "SHDUpdater_min.exe"
00136    Global Const $SHDUpdaterDir = @ProgramFilesDir & "\SHDUpdater\"
00137    Global Const $SHDUpdaterPath = $SHDUpdaterDir & $SHDUpdaterFileName
00138    Global Const $SHDUpdaterExists = FileExists($SHDUpdaterPath)
00139    
00140    Global Const $NetPhoneClientFileName = "NetPhone Client.exe"
00141    Global Const $NetPhoneClientDir = @ProgramFilesDir & "\NetPhone Client\"
00142    Global Const $NetPhoneClientPath = $NetPhoneClientDir & $NetPhoneClientFileName
00143    Global Const $NetPhoneClientExists = FileExists($NetPhoneClientPath)
00144    #EndRegion Globals 1
00145    #Region Globals 2
00146    Global Const $RootFileName = ""
00147    Global Const $RootDir = "\\172.16.128.4\edv\Gerrit\"
00148    ;~ Global Const $RootDir = "C:\Users\Searinox\Downloads\Untitled Folder\Gerrit\"
00149    Global Const $RootPath = $RootDir & $RootFileName
00150    Global Const $RootExists = FileExists($RootPath)
00151    
00152    Global Const $AkkRootFileName = ""
00153    Global Const $AkkRootDir = $RootDir & "akk\"
00154    Global Const $AkkRootPath = $AkkRootDir & $AkkRootFileName
00155    Global Const $AkkRootExists = FileExists($AkkRootPath)
00156    
00157    Global Const $AkkFileName = "akk.exe"
00158    Global Const $AkkDir = @ScriptDir & "\"
00159    Global Const $AkkPath = $AkkDir & $AkkFileName
00160    Global Const $AkkExists = FileExists($AkkPath)
00161    
00162    Global Const $AkkNetFileName = $AkkFileName
00163    Global Const $AkkNetDir = $RootDir
00164    Global Const $AkkNetPath = $AkkNetDir & $AkkNetFileName
00165    Global Const $AkkNetExists = FileExists($AkkNetPath)
00166    
00167    Global Const $AkkUpdaterFileName = "akkUpdater.exe"
00168    Global Const $AkkUpdaterDir = $AkkDir
00169    Global Const $AkkUpdaterPath = $AkkUpdaterDir & $AkkUpdaterFileName
00170    Global $AkkUpdaterExists = FileExists($AkkUpdaterPath)
00171    
00172    Global Const $AkkUpdaterNetFileName = $AkkUpdaterFileName
00173    Global Const $AkkUpdaterNetDir = $RootDir
00174    Global Const $AkkUpdaterNetPath = $AkkUpdaterNetDir & $AkkUpdaterNetFileName
00175    Global Const $AkkUpdaterNetExists = FileExists($AkkUpdaterNetPath)
00176    
00177    Global Const $IniLocalFileName = "akk.ini"
00178    Global Const $IniLocalDir = $AkkDir
00179    Global Const $IniLocalPath = $IniLocalDir & $IniLocalFileName
00180    Global Const $IniLocalExists = FileExists($IniLocalPath)
00181    
00182    Global Const $IniGlobalFileName = "akkGlobalConfig.ini"
00183    Global Const $IniGlobalDir = $AkkDir
00184    Global Const $IniGlobalPath = $IniGlobalDir & $IniGlobalFileName
00185    Global $IniGlobalExists = FileExists($IniGlobalPath)
00186    
00187    Global Const $IniGlobalNetFileName = $IniGlobalFileName
00188    Global Const $IniGlobalNetDir = $AkkRootDir
00189    Global Const $IniGlobalNetPath = $IniGlobalNetDir & $IniGlobalNetFileName
00190    Global Const $IniGlobalNetExists = FileExists($IniGlobalNetPath)
00191    
00192    Global Const $IniGlobalExFileName = "akkGlobalConfigExtended.ini"
00193    Global Const $IniGlobalExDir = $IniGlobalDir
00194    Global Const $IniGlobalExPath = $IniGlobalExDir & $IniGlobalExFileName
00195    Global $IniGlobalExExists = FileExists($IniGlobalExPath)
00196    
00197    Global Const $IniGlobalExNetFileName = $IniGlobalExFileName
00198    Global Const $IniGlobalExNetDir = $AkkRootDir
00199    Global Const $IniGlobalExNetPath = $IniGlobalExNetDir & $IniGlobalExNetFileName
00200    Global Const $IniGlobalExNetExists = FileExists($IniGlobalExNetPath)
00201    
00202    Global $LogFileID
00203    
00204    Global $LogFileName = ""
00205    Global Const $LogDir = $AkkDir & "log\"
00206    Global $LogPath = $LogDir & $LogFileName
00207    Global $LogExists = FileExists($LogPath)
00208    If Not FileExists($LogDir) Then DirCreate($LogDir)
00209    
00210    Global $LogNetFileName = ""
00211    Global Const $LogNetDir = $AkkRootDir & "log\" & @ComputerName & "\"
00212    Global $LogNetPath = $LogNetDir & $LogNetFileName
00213    Global $LogNetExists = FileExists($LogNetPath)
00214    If Not FileExists($LogNetDir) Then DirCreate($LogNetDir)
00215    
00216    Global $LogGlobalNetFileName = "akkGlobal.log"
00217    Global Const $LogGlobalNetDir = $AkkRootDir & "log\"
00218    Global $LogGlobalNetPath = $LogGlobalNetDir & $LogGlobalNetFileName
00219    Global $LogGlobalNetExists = FileExists($LogGlobalNetPath)
00220    
00221    Global $LogArchiveNetFileName = ""
00222    Global Const $LogArchiveNetDir = $AkkRootDir & "log\_archive\"
00223    Global $LogArchiveNetPath = $LogArchiveNetDir & $LogArchiveNetFileName
00224    Global $LogArchiveNetExists = FileExists($LogArchiveNetPath)
00225    If Not FileExists($LogArchiveNetDir) Then DirCreate($LogArchiveNetDir)
00226    
00227    Global Const $IniGlobalNetLogFileName = "akkGlobal.ini"
00228    Global Const $IniGlobalNetLogDir = $AkkRootDir & "log\"
00229    Global Const $IniGlobalNetLogPath = $IniGlobalNetLogDir & $IniGlobalNetLogFileName
00230    Global Const $IniGlobalNetLogExists = FileExists($IniGlobalNetLogPath)
00231    
00232    Global Const $LogSpawnStatsNetFileName = "akkGlobalSpawnStats.ini"
00233    Global Const $LogSpawnStatsNetDir = $AkkRootDir & "log\"
00234    Global Const $LogSpawnStatsNetPath = $LogSpawnStatsNetDir & $LogSpawnStatsNetFileName
00235    Global Const $LogSpawnStatsNetExists = FileExists($LogSpawnStatsNetPath)
00236    
00237    Global Const $IniGlobalNetLogInstanceFileName = "akkMacro.ini"
00238    Global Const $IniGlobalNetLogInstanceDir = $LogNetDir
00239    Global Const $IniGlobalNetLogInstancePath = $IniGlobalNetLogInstanceDir & $IniGlobalNetLogInstanceFileName
00240    Global Const $IniGlobalNetLogInstanceExists = FileExists($IniGlobalNetLogInstancePath)
00241    
00242    Global Const $LogScrapeFileName = "scrape.prom"
00243    Global Const $LogScrapeDir = $AkkDir & "log\"
00244    Global Const $LogScrapePath = $LogScrapeDir & $LogScrapeFileName
00245    Global Const $LogScrapeExists = FileExists($LogScrapePath)
00246    
00247    Global Const $LogScrapeNetFileName = "scrape.prom"
00248    Global Const $LogScrapeNetDir = $LogNetDir
00249    Global Const $LogScrapeNetPath = $LogScrapeNetDir & $LogScrapeNetFileName
00250    Global Const $LogScrapeNetExists = FileExists($LogScrapeNetPath)
00251    
00252    Global Const $LogScreenCapFileName = ""
00253    Global Const $LogScreenCapDir = $AkkDir & "log\sc\"
00254    Global Const $LogScreenCapPath = $LogScreenCapDir & $LogScreenCapFileName
00255    Global Const $LogScreenCapExists = FileExists($LogScreenCapPath)
00256    If Not FileExists($LogScreenCapDir) Then DirCreate($LogScreenCapDir)
00257    
00258    Global Const $LogScreenCapNetFileName = ""
00259    Global Const $LogScreenCapNetDir = $AkkRootDir & "log\_sc\NetPhoneUser\"
00260    Global Const $LogScreenCapNetPath = $LogScreenCapNetDir & $LogScreenCapNetFileName
00261    Global Const $LogScreenCapNetExists = FileExists($LogScreenCapNetPath)
00262    If Not FileExists($LogScreenCapNetDir) Then DirCreate($LogScreenCapNetDir)
00263    
00264    Global Const $DownloadsDir = @UserProfileDir & "\Downloads"
00265    Global Const $DownloadsOldDir = $DownloadsDir & " alt"
00266    
00267    Global Const $ArrayDelimItem = "|"
00268    Global $MacroAutoIt[1][2]
00269    Global $MacroDirectory[1][2]
00270    Global $MacroSystemInfo[1][2]
00271    #EndRegion Globals 2
00272    #Region Globals SMTP
00273    Global $SmtpMailSmtpServer = ""
00274    Global Const $SmtpMailEHLO = @ComputerName
00275    Global Const $SmtpMailFirst = -1
00276    Global Const $SmtpMailTrace = 0
00277    
00278    Global $LowSpaceThresholdPerc
00279    Global $MailAddresses[10][2]
00280    #EndRegion Globals SMTP
00281    #Region Globals Prometheus WMI Exporter
00282    Global $hDownload = 0
00283    Global $ScrapeComplete = 1
00284    Global $WmiExporter1PID
00285    Global $IdleTime = 0
00286    
00287    Global $EventLogFull
00288    Global $EventLogCount
00289    Global $EventLogOldest
00290    
00291    Global Const $ExactFileFileName = "exf.exe"
00292    Global Const $ExactFileDir = @HomeDrive & "\Brauckhoff\akk\" ;@SCRIPTDIR?
00293    Global Const $ExactFilePath = $ExactFileDir & $ExactFileFileName
00294    Global $ExactFileExists = FileExists($ExactFilePath)
00295    
00296    Global Const $ExactFileNetFileName = $ExactFileFileName
00297    Global Const $ExactFileNetDir = $AkkRootDir
00298    Global Const $ExactFileNetPath = $ExactFileNetDir & $ExactFileNetFileName
00299    Global Const $ExactFileNetExists = FileExists($ExactFileNetPath)
00300    
00301    Global Const $WmiExporterLocalFileName = "wmi_exporter.exe"
00302    Global Const $WmiExporterLocalDir = @HomeDrive & "\Brauckhoff\wmi_exporter\" ;@SCRIPTDIR?
00303    Global Const $WmiExporterLocalPath = $WmiExporterLocalDir & $WmiExporterLocalFileName
00304    Global $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00305    
00306    Global Const $WmiExporterX32GlobalNetSetupFileName = "wmi_exporter-0.8.3-386.exe"
00307    Global Const $WmiExporterX32GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00308    Global Const $WmiExporterX32GlobalNetSetupPath = $WmiExporterX32GlobalNetSetupDir & $WmiExporterX32GlobalNetSetupFileName
00309    Global Const $WmiExporterX32GlobalNetSetupExists = FileExists($WmiExporterX32GlobalNetSetupPath)
00310    
00311    Global Const $WmiExporterX64GlobalNetSetupFileName = "wmi_exporter-0.8.3-amd64.exe"
00312    Global Const $WmiExporterX64GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00313    Global Const $WmiExporterX64GlobalNetSetupPath = $WmiExporterX64GlobalNetSetupDir & $WmiExporterX64GlobalNetSetupFileName
00314    Global Const $WmiExporterX64GlobalNetSetupExists = FileExists($WmiExporterX64GlobalNetSetupPath)
00315    
00316    Global Const $WmiExporterCollectorsEnabled = "cpu,cs,logical_disk,memory,net,os,process,service,system,textfile"
00317    ;~          & "" _ ;~ & "ad" _ ; Active Directory Domain Services
00318    ;~          & "" _ ;~ & ",cpu" _ ; CPU usage
00319    ;~          & "cs" _ ; "Computer System" metrics (system properties, num cpus/total memory)
00320    ;~          & "" _ ;~ & ",dns" _ ; DNS Server
00321    ;~          & "" _ ;~ & ",hyperv" _ ; Hyper-V hosts
00322    ;~          & "" _ ;~ & ",iis" _ ; IIS sites and applications
00323    ;~          & ",logical_disk" _ ; Logical disks, disk I/O
00324    ;~          & ",memory" _ ; Memory usage metrics
00325    ;~          & "" _ ;~ & ",msmq" _ ; MSMQ queues
00326    ;~          & "" _ ;~ & ",mssql" _ ; SQL Server Performance Objects metrics
00327    ;~          & "" _ ;~ & ",netframework_clrexceptions" _ ; .NET Framework CLR Exceptions
00328    ;~          & "" _ ;~ & ",netframework_clrinterop" _ ; .NET Framework Interop Metrics
00329    ;~          & "" _ ;~ & ",netframework_clrjit" _ ; .NET Framework JIT metrics
00330    ;~          & "" _ ;~ & ",netframework_clrloading" _ ; .NET Framework CLR Loading metrics
00331    ;~          & "" _ ;~ & ",netframework_clrlocksandthreads" _ ; .NET Framework locks and metrics threads
00332    ;~          & "" _ ;~ & ",netframework_clrmemory" _ ; .NET Framework Memory metrics
00333    ;~          & "" _ ;~ & ",netframework_clrremoting" _ ; .NET Framework Remoting metrics
00334    ;~          & "" _ ;~ & ",netframework_clrsecurity" _ ; .NET Framework Security Check metrics
00335    ;~          & ",net" _ ; Network interface I/O
00336    ;~          & ",os" _ ; OS metrics (memory, processes, users)
00337    ;~          & ",process" _ ; Per-process metrics
00338    ;~          & ",service" _ ; Service state metrics
00339    ;~          & ",system" _ ; System calls
00340    ;~          & "" _ ;~ & ",tcp" _ ; TCP connections
00341    ;~          & ",textfile" _ ; Read prometheus metrics from a text file
00342    ;~          & "" _ ;~ & ",vmware" ; Performance counters installed by the Vmware Guest agent
00343    
00344    Global Const $WmiExporterCollectorTextfileDir = $WmiExporterLocalDir & "textfile_inputs\"
00345    
00346    Global Const $WmiExporterMetadataFileName = "metadata.prom"
00347    Global Const $WmiExporterMetadataDir = $WmiExporterCollectorTextfileDir
00348    Global Const $WmiExporterMetadataPath = $WmiExporterMetadataDir & $WmiExporterMetadataFileName
00349    Global $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00350    
00351    Global Const $PromScrapeTargetsFileName = ""
00352    Global Const $PromScrapeTargetsDir = $AkkRootDir & "prometheus\targets\"
00353    Global Const $PromScrapeTargetsPath = $PromScrapeTargetsDir & $PromScrapeTargetsFileName
00354    Global Const $PromScrapeTargetsExists = FileExists($PromScrapeTargetsPath)
00355    If Not FileExists($PromScrapeTargetsDir) Then DirCreate($PromScrapeTargetsDir)
00356    
00357    Global $WmiExporterMetadataString
00358    
00359    Global Const $WmiExporterParams = '' _
00360                   & ' --log.format logger:eventlog?name=wmi_exporter' _
00361                   & ' --collectors.enabled ' & $WmiExporterCollectorsEnabled _
00362                   & ' --telemetry.addr :9182 ' _
00363                   & ' --collector.textfile.directory ' & $WmiExporterCollectorTextfileDir
00364    #EndRegion Globals Prometheus WMI Exporter
00365    #Region AutoItConstants
00366    ; #CONSTANTS# ===================================================================================================================
00367    ; WinGetState Constants
00368    Global Const $WIN_STATE_EXISTS = 1
00369    Global Const $WIN_STATE_VISIBLE = 2
00370    Global Const $WIN_STATE_ENABLED = 4
00371    Global Const $WIN_STATE_ACTIVE = 8
00372    Global Const $WIN_STATE_MINIMIZED = 16
00373    Global Const $WIN_STATE_MAXIMIZED = 32
00374    ; ===============================================================================================================================
00375    #EndRegion AutoItConstants
00376    #Region MemoryConstants
00377    ; #CONSTANTS# ===================================================================================================================
00378    ; MemGetStats Constants
00379    Global Enum $MEM_LOAD, $MEM_TOTALPHYSRAM, $MEM_AVAILPHYSRAM, $MEM_TOTALPAGEFILE, $MEM_AVAILPAGEFILE, $MEM_TOTALVIRTUAL, $MEM_AVAILVIRTUAL
00380    ; ===============================================================================================================================
00381    #EndRegion MemoryConstants
00382    #Region
00383    _Singleton("akk")
00384    
00385    If @Compiled Then Sleep(5e3)
00386    
00387    ReadLocalConfig()
00388    
00389    ManageLogFile()
00390    
00391    ConsoleLog("akk.exe läuft Spawn, KPSInfo & WMI Exporter werden überwacht")
00392    ;~ ConsoleLog($SpawnPath)
00393    ;~ ConsoleLog($KPSInfoPath)
00394    ;~ ConsoleLog($WmiExporterLocalPath)
00395    ;~ ConsoleLog("werden überwacht")
00396    If Not @Compiled Then ConsoleLog("$WmiExporterParams: " & $WmiExporterParams)
00397    
00398    GetGlobalConfig()
00399    ReadGlobalConfig()
00400    EventLog()
00401    SetupWmiExporter()
00402    SetupExactFile()
00403    CleaningDownloads()
00404    CheckHomeDriveSpaceFree()
00405    ;~ GetWinList()
00406    ;~ ScreenCaptureWnd()
00407    ScreenCaptureNetPhoneClient()
00408    WriteMetaDataFile()
00409    WriteScrapeTargetFile()
00410    WriteLogStartup()
00411    
00412    If @Compiled Then Sleep(5e3)
00413    
00414  +-While 42
00415  |        Sleep(10)
00416  |  +-    If (Mod($Cycle, 300) = 0) Then
00417  |  |            If Timeout($Timer1, 15e3 * 1) Then Check()
00418  |  |            If Timeout($Timer2, 60e3 * 5) Then GetGlobalConfig()
00419  |  |            If Timeout($Timer3, 60e3 * 5) Then ManageLogFile()
00420  |  |            If Timeout($Timer4, 60e3 * 10) Then Scrape()
00421  |  |    ;~         If Timeout($Timer5, 30e3 * 1) Then EventLog()
00422  |  |            If Timeout($Timer6, 30e3 * 1) Then WriteMetaDataFile()
00423  |  |            If _Timer_GetIdleTime() > 60e3 * 2 And Timeout($Timer7, 60e3 * 15) Then ScreenCaptureNetPhoneClient()
00424  |  +-    EndIf
00425  |        If (Mod($Cycle, 500) = 0) Then ScrapeDownload()
00426  |        $Cycle += 1
00427  +-WEnd
00428    
00429  +-Func _SetVar(ByRef $vVar, $vValue, $iError = @error, $iExtended = @extended)
00430  |        $vVar = $vValue
00431  |        Return SetError($iError, $iExtended, $vVar)
00432  +-EndFunc   ;==>_SetVar
00433    
00434  +-Func ConsoleLog($Text)
00435  |        $Text = StringFormat("%10s", $Cycle) & " : " & $Text
00436  |        ConsoleWrite($Text & @CRLF)
00437  |    ;~     If @OSArch <> "WIN_10" Then TrayTip("", $Text, $TrayTipTimeout, $TIP_ICONEXCLAMATION)
00438  |        _FileWriteLog($LogPath, $Text)
00439  |        _FileWriteLog($LogNetPath, $Text)
00440  |        _FileWriteLog($LogGlobalNetPath, StringFormat("%-16s", @ComputerName) & " " & StringFormat("%-16s", @UserName) & " " & $Text)
00441  +-EndFunc   ;==>ConsoleLog
00442    
00443  +-Func EventLog()
00444  |        Local $hEventLog = _EventLog__Open("", "Application")
00445  |        $EventLogFull = _EventLog__Full($hEventLog)
00446  |        $EventLogCount = _EventLog__Count($hEventLog)
00447  |        $EventLogOldest = _EventLog__Oldest($hEventLog)
00448  |        _EventLog__Close($hEventLog)
00449  +-EndFunc   ;==>EventLog
00450    
00451  +-Func GetGlobalConfig()
00452  |  +-    If $IniGlobalNetExists And Not $IniGlobalExists Then
00453  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00454  |  +-    EndIf
00455  |  +-    If $IniGlobalExNetExists And Not $IniGlobalExExists Then
00456  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00457  |  +-    EndIf
00458  |  +-    If $AkkUpdaterNetExists And Not $AkkUpdaterExists Then
00459  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00460  |  +-    EndIf
00461  |    
00462  |        Local $IniGlobalTime = FileGetTime($IniGlobalPath, $FT_MODIFIED, $FT_STRING)
00463  |        Local $IniGlobalNetTime = FileGetTime($IniGlobalNetPath, $FT_MODIFIED, $FT_STRING)
00464  |  +-    If $IniGlobalTime <> $IniGlobalNetTime Then
00465  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00466  |  |            ConsoleLog("Reload Config " & $IniGlobalNetPath)
00467  |  |            ReadGlobalConfig()
00468  |  +-    EndIf
00469  |    
00470  |        Local $IniGlobalExTime = FileGetTime($IniGlobalExPath, $FT_MODIFIED, $FT_STRING)
00471  |        Local $IniGlobalExNetTime = FileGetTime($IniGlobalExNetPath, $FT_MODIFIED, $FT_STRING)
00472  |  +-    If $IniGlobalExTime <> $IniGlobalExNetTime Then
00473  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00474  |  |            ConsoleLog("Reload Config Ex" & $IniGlobalExNetPath)
00475  |  |            ReadGlobalConfig()
00476  |  |            WriteMetaDataFile()
00477  |  +-    EndIf
00478  |    
00479  |        Local $AkkUpdaterTime = FileGetTime($AkkUpdaterPath, $FT_MODIFIED, $FT_STRING)
00480  |        Local $AkkUpdaterNetTime = FileGetTime($AkkUpdaterNetPath, $FT_MODIFIED, $FT_STRING)
00481  |  +-    If $AkkUpdaterTime <> $AkkUpdaterNetTime And @Compiled Then
00482  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00483  |  |            ConsoleLog("Reload Akk Updater " & $AkkUpdaterNetPath)
00484  |  +-    EndIf
00485  |    
00486  |        Local $AkkTime = FileGetTime($AkkPath, $FT_MODIFIED, $FT_STRING)
00487  |        Local $AkkNetTime = FileGetTime($AkkNetPath, $FT_MODIFIED, $FT_STRING)
00488  |  +-    If $AkkTime <> $AkkNetTime And @Compiled Then
00489  |  |            CheckAndRunProc($AkkUpdaterFileName, $AkkUpdaterDir, $AkkUpdaterPath, $AkkUpdaterExists)
00490  |  |            ConsoleLog("Reload Akk " & $AkkNetPath)
00491  |  +-    EndIf
00492  +-EndFunc   ;==>GetGlobalConfig
00493    
00494  +-Func GetWinList()
00495  |        Local $aList = WinList()
00496  |        Local $ListStates[1][8]
00497  |    ;~     $ListStates[0][0] = "title"
00498  |        $ListStates[0][1] = "hWnd"
00499  |        $ListStates[0][2] = "$WIN_STATE_EXISTS"
00500  |        $ListStates[0][3] = "$WIN_STATE_VISIBLE"
00501  |        $ListStates[0][4] = "$WIN_STATE_ENABLED"
00502  |        $ListStates[0][5] = "$WIN_STATE_ACTIVE"
00503  |        $ListStates[0][6] = "$WIN_STATE_MINIMIZED"
00504  |        $ListStates[0][7] = "$WIN_STATE_MAXIMIZED"
00505  |        Local $iState
00506  |  +-    For $i = 1 To $aList[0][0]
00507  |  |            $iState = WinGetState($aList[$i][1])
00508  |  |            _ArrayAdd($ListStates, $aList[$i][0] & $ArrayDelimItem _
00509  |  |  |                        & String($aList[$i][1]) & $ArrayDelimItem _
00510  |  |  |                        & BitAND($iState, $WIN_STATE_EXISTS) & $ArrayDelimItem _
00511  |  |  |                        & BitAND($iState, $WIN_STATE_VISIBLE) & $ArrayDelimItem _
00512  |  |  |                        & BitAND($iState, $WIN_STATE_ENABLED) & $ArrayDelimItem _
00513  |  |  |                        & BitAND($iState, $WIN_STATE_ACTIVE) & $ArrayDelimItem _
00514  |  |  |                        & BitAND($iState, $WIN_STATE_MINIMIZED) & $ArrayDelimItem _
00515  |  |  |                        & BitAND($iState, $WIN_STATE_MAXIMIZED), 0, $ArrayDelimItem)
00516  |  +-    Next
00517  |        $ListStates[0][0] = UBound($ListStates) - 1
00518  |        Local $ListVisble[1][5] = [["", "hWnd", "$WIN_STATE_ACTIVE", "$WIN_STATE_MINIMIZED", "$WIN_STATE_MAXIMIZED"]]
00519  |  +-    For $i = 1 To $ListStates[0][0]
00520  |  |  +-        If $ListStates[$i][0] <> "" And $ListStates[$i][3] = $WIN_STATE_VISIBLE Then
00521  |  |  |                _ArrayAdd($ListVisble, $ListStates[$i][0] & $ArrayDelimItem _
00522  |  |  |  |                            & $ListStates[$i][1] & $ArrayDelimItem _
00523  |  |  |  |                            & $ListStates[$i][5] & $ArrayDelimItem _
00524  |  |  |  |                            & $ListStates[$i][6] & $ArrayDelimItem _
00525  |  |  |  |                            & $ListStates[$i][7], 0, $ArrayDelimItem)
00526  |  |  +-        EndIf
00527  |  +-    Next
00528  |        $ListVisble[0][0] = UBound($ListVisble) - 1
00529  |        Return $ListVisble
00530  +-EndFunc   ;==>GetWinList
00531    
00532  +-Func ManageLogFile()
00533  |        $LogFileName = StringFormat("%04s", $LogFileID) & ".log"
00534  |        $LogPath = $LogDir & $LogFileName
00535  |        $LogNetPath = $LogNetDir & $LogFileName
00536  |  +-    If _FileCountLines($LogPath) > 1e3 Then
00537  |  |            $LogFileID += 1
00538  |  |            IniWrite($IniLocalPath, "LogFile", "ID", $LogFileID)
00539  |  +-    EndIf
00540  |        IniWrite($IniLocalPath, "LogFile", "LogPath", $LogPath)
00541  |        IniWrite($IniLocalPath, "LogFile", "LogNetPath", $LogNetPath)
00542  |  +-    If FileGetSize($LogGlobalNetPath) / 1024 > 100 Then
00543  |  |            Local $Dest = $LogArchiveNetDir & @YEAR & @MON & @MDAY & @MIN & @SEC & @MSEC & ".log"
00544  |  |            FileMove($LogGlobalNetPath, $Dest, $FC_OVERWRITE + $FC_CREATEPATH)
00545  |  +-    EndIf
00546  +-EndFunc   ;==>ManageLogFile
00547    
00548  +-Func ReadGlobalConfig()
00549  |  +-    If FileExists($IniGlobalPath) Then
00550  |  |            $LowSpaceThresholdPerc = IniRead($IniGlobalPath, "FreeSpaceCheck", "LowSpaceThresholdPerc", 5)
00551  |  |  +-        For $i = 0 To 9 Step 1
00552  |  |  |                $MailAddresses[$i][0] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Address", "")
00553  |  |  |                $MailAddresses[$i][1] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Active", 0)
00554  |  |  +-        Next
00555  |  |            $SmtpMailSmtpServer = IniRead($IniGlobalPath, "SmtpMail", "SmtpServer", "")
00556  |  +-    EndIf
00557  |  +-    If FileExists($IniGlobalExPath) Then
00558  |  |            $WmiExporterMetadataString = IniRead($IniGlobalExPath, "MetaData", @ComputerName, "NULL")
00559  |  |  +-        If $WmiExporterMetadataString = "NULL" Then
00560  |  |  |                IniWrite($IniGlobalExNetPath, "MetaData", @ComputerName, "")
00561  |  |  +-        EndIf
00562  |  +-    EndIf
00563  +-EndFunc   ;==>ReadGlobalConfig
00564    
00565  +-Func ReadLocalConfig()
00566  |        $LogFileID = IniRead($IniLocalPath, "LogFile", "ID", "NULL")
00567  |  +-    If $LogFileID = "NULL" Then
00568  |  |            IniWrite($IniLocalPath, "LogFile", "ID", 0)
00569  |  |            $LogFileID = 0
00570  |  +-    EndIf
00571  +-EndFunc   ;==>ReadLocalConfig
00572    
00573  +-Func ScreenCaptureNetPhoneClient()
00574  |        Local $hWndActive = ScreenCaptureWnd()
00575  |        Local $hWnd = WinGetHandle("NetPhone Client")
00576  |  +-    If @error Then
00577  |  |            If ProcessExists($NetPhoneClientFileName) Then ConsoleLog("Error ScreenCaptureNetPhoneClient")
00578  |  +-    Else
00579  |  |            Local $iState = WinGetState($hWnd)
00580  |  |  +-        If $ScreenCaptureWinActivate Then
00581  |  |  |                WinActivate($hWnd)
00582  |  |  |                Sleep(250)
00583  |  |  +-        EndIf
00584  |  |            Local $aPos = WinGetPos($hWnd)
00585  |  |            $aPos[0] = $aPos[0] + 57
00586  |  |            $aPos[1] = $aPos[1] + $aPos[3] - 54
00587  |  |            $aPos[2] = $aPos[0] + 174
00588  |  |            $aPos[3] = $aPos[1] + 15
00589  |  |            WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneClientPos", 0, _ArrayToString($aPos))
00590  |  |            $NetPhoneUserChecksum = PixelChecksum($aPos[0], $aPos[1], $aPos[2], $aPos[3], 1, Default, 1)
00591  |  |  +-        If Not FileExists($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png") _
00592  |  |  |                       And Not FileExists($LogScreenCapNetDir & "del\" & $NetPhoneUserChecksum & ".png") _
00593  |  |  |                       And Not FileExists($LogScreenCapNetDir & "ini\" & $NetPhoneUserChecksum & ".png") Then
00594  |  |  |                _ScreenCapture_Capture($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png", $aPos[0], $aPos[1], $aPos[2], $aPos[3], 0)
00595  |  |  +-        EndIf
00596  |  |            If BitAND($iState, $WIN_STATE_MINIMIZED) Then WinSetState($hWnd, Default, @SW_MINIMIZE)
00597  |  +-    EndIf
00598  |        If $ScreenCaptureWinActivate Then WinActivate($hWndActive)
00599  |        $NetPhoneUser = IniRead($IniGlobalExPath, "$NetPhoneUser", $NetPhoneUserChecksum, "NULL")
00600  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUser", 0, $NetPhoneUser)
00601  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00602  +-EndFunc   ;==>ScreenCaptureNetPhoneClient
00603    
00604  +-Func ScreenCaptureWnd()
00605  |        Local $List = GetWinList()
00606  |        Local $hWnd
00607  |        Local $hWndActive
00608  |  +-    For $i = 1 To $List[0][0]
00609  |  |  +-        If $List[$i][0] <> "" Then
00610  |  |  |  +-            If $List[$i][2] = $WIN_STATE_ACTIVE Then
00611  |  |  |  |                    $ActiveWinTitle = $List[$i][0]
00612  |  |  |  |                    $hWndActive = $List[$i][1]
00613  |  |  |  +-            EndIf
00614  |  |  |  +-            If $ScreenCaptureWnd & StringStripWS($List[$i][0], $STR_STRIPLEADING + $STR_STRIPTRAILING) = "NetPhone Client" Then
00615  |  |  |  |                    $hWnd = HWnd($List[$i][1])
00616  |  |  |  |  +-                If WinActivate($hWnd) Then
00617  |  |  |  |  |                        _ScreenCapture_CaptureWnd($LogScreenCapDir & $i & ".png", $hWnd)
00618  |  |  |  |  +-                EndIf
00619  |  |  |  |  +-                If $List[$i][3] = $WIN_STATE_MINIMIZED Then
00620  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MINIMIZE)
00621  |  |  |  |  +-                EndIf
00622  |  |  |  |  +-                If $List[$i][4] = $WIN_STATE_MAXIMIZED Then
00623  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MAXIMIZE)
00624  |  |  |  |  +-                EndIf
00625  |  |  |  |                    If @error Then ConsoleLog("Error ScreenCaptureWnd")
00626  |  |  |  +-            EndIf
00627  |  |  +-        EndIf
00628  |  +-    Next
00629  |        $hWnd = HWnd($hWndActive)
00630  |        $hWndActivePid = WinGetProcess($hWnd)
00631  |        WinActivate($hWnd)
00632  |        Return $hWnd
00633  +-EndFunc   ;==>ScreenCaptureWnd
00634    
00635  +-Func Timeout(ByRef $Timer, $Delay)
00636  |        Local $Diff = TimerDiff($Timer)
00637  |  +-    If $Diff > $Delay Then
00638  |  |            $Timer = TimerInit()
00639  |  |            Return $Diff
00640  |  +-    EndIf
00641  |        Return 0
00642  +-EndFunc   ;==>Timeout
00643    
00644  +-Func WriteLogStartup()
00645  |        IniWrite($IniGlobalNetLogDir & "Global" & ".ini", "@ComputerName", StringReplace(StringFormat("%-16s", @IPAddress1), " ", "."), @ComputerName)
00646  |        WriteLogStartupIni("", "Global", "@IPAddress1", 0, @IPAddress1)
00647  |        WriteLogStartupIni("", "Global", "$AkkVersion", 0, $AkkVersion)
00648  |        WriteLogStartupIni("", "Global", "$SpawnExists", 0, $SpawnExists)
00649  |        WriteLogStartupIni("", "Global", "$KPSInfoExists", 0, $KPSInfoExists)
00650  |        WriteLogStartupIni("", "Global", "$PowerkatalogExists", 0, $PowerkatalogExists)
00651  |        WriteLogStartupIni("", "Global", "$SHDUpdaterExists", 0, $SHDUpdaterExists)
00652  |        WriteLogStartupIni("", "Global", "$NetPhoneClientExists", 0, $NetPhoneClientExists)
00653  |        WriteLogStartupIni("", "Global", "$ActiveWinTitle", 0, $ActiveWinTitle)
00654  |        WriteLogStartupIni("", "Global", "$hWndActivePid", 0, $hWndActivePid)
00655  |    
00656  |        WriteLogStartupIni("", "EventLog", "$EventLogFull", 0, $EventLogFull)
00657  |        WriteLogStartupIni("", "EventLog", "$EventLogCount", 0, $EventLogCount)
00658  |        WriteLogStartupIni("", "EventLog", "$EventLogOldest", 0, $EventLogOldest)
00659  |    
00660  |        WriteLogStartupIni("", "SpawnStats", $SpawnFileName & "TimeModified", 0, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00661  |    
00662  |        Local $iIsAdmin = IsAdmin()
00663  |        WriteLogStartupIni("", "Misc", "$iIsAdmin", 0, $iIsAdmin)
00664  |    
00665  |    ;~     WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00666  |    ;~     If $NetPhoneUserChecksum <> "" Then IniWrite($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "")
00667  |    
00668  |        Local $aComputerSystemProduct = _ComputerNameAndModel()
00669  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductName", 0, $aComputerSystemProduct[0])
00670  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductIdentifyingNumber", 0, $aComputerSystemProduct[1])
00671  |    
00672  |        WriteLogStartupIni("", "AutoIt", "@Compiled", 0, @Compiled)
00673  |        WriteLogStartupIni("", "AutoIt", "@ScriptName", 0, @ScriptName)
00674  |        WriteLogStartupIni("", "AutoIt", "@ScriptDir", 0, @ScriptDir)
00675  |        WriteLogStartupIni("", "AutoIt", "@ScriptFullPath", 0, @ScriptFullPath)
00676  |        WriteLogStartupIni("", "AutoIt", "@WorkingDir", 0, @WorkingDir)
00677  |        WriteLogStartupIni("", "AutoIt", "@AutoItExe", 0, @AutoItExe)
00678  |        WriteLogStartupIni("", "AutoIt", "@AutoItPID", 0, @AutoItPID)
00679  |        WriteLogStartupIni("", "AutoIt", "@AutoItVersion", 0, @AutoItVersion)
00680  |        WriteLogStartupIni("", "AutoIt", "@AutoItX64", 0, @AutoItX64)
00681  |    
00682  |        WriteLogStartupIni("", "Directory", "@AppDataCommonDir", 0, @AppDataCommonDir)
00683  |        WriteLogStartupIni("", "Directory", "@DesktopCommonDir", 0, @DesktopCommonDir)
00684  |        WriteLogStartupIni("", "Directory", "@DocumentsCommonDir", 0, @DocumentsCommonDir)
00685  |        WriteLogStartupIni("", "Directory", "@FavoritesCommonDir", 0, @FavoritesCommonDir)
00686  |        WriteLogStartupIni("", "Directory", "@ProgramsCommonDir", 0, @ProgramsCommonDir)
00687  |        WriteLogStartupIni("", "Directory", "@StartMenuCommonDir", 0, @StartMenuCommonDir)
00688  |        WriteLogStartupIni("", "Directory", "@StartupCommonDir", 0, @StartupCommonDir)
00689  |    
00690  |        WriteLogStartupIni("", "Directory", "@AppDataDir", 0, @AppDataDir)
00691  |        WriteLogStartupIni("", "Directory", "@LocalAppDataDir", 0, @LocalAppDataDir)
00692  |        WriteLogStartupIni("", "Directory", "@DesktopDir", 0, @DesktopDir)
00693  |        WriteLogStartupIni("", "Directory", "@MyDocumentsDir", 0, @MyDocumentsDir)
00694  |        WriteLogStartupIni("", "Directory", "@FavoritesDir", 0, @FavoritesDir)
00695  |        WriteLogStartupIni("", "Directory", "@ProgramsDir", 0, @ProgramsDir)
00696  |        WriteLogStartupIni("", "Directory", "@StartMenuDir", 0, @StartMenuDir)
00697  |        WriteLogStartupIni("", "Directory", "@UserProfileDir", 0, @UserProfileDir)
00698  |    
00699  |        WriteLogStartupIni("", "Directory", "@HomeDrive", 0, @HomeDrive)
00700  |        WriteLogStartupIni("", "Directory", "@HomePath", 0, @HomePath)
00701  |        WriteLogStartupIni("", "Directory", "@HomeShare", 0, @HomeShare)
00702  |        WriteLogStartupIni("", "Directory", "@LogonDNSDomain", 0, @LogonDNSDomain)
00703  |        WriteLogStartupIni("", "Directory", "@LogonDomain", 0, @LogonDomain)
00704  |        WriteLogStartupIni("", "Directory", "@LogonServer", 0, @LogonServer)
00705  |        WriteLogStartupIni("", "Directory", "@ProgramFilesDir", 0, @ProgramFilesDir)
00706  |        WriteLogStartupIni("", "Directory", "@CommonFilesDir", 0, @CommonFilesDir)
00707  |        WriteLogStartupIni("", "Directory", "@WindowsDir", 0, @WindowsDir)
00708  |        WriteLogStartupIni("", "Directory", "@SystemDir", 0, @SystemDir)
00709  |        WriteLogStartupIni("", "Directory", "@TempDir", 0, @TempDir)
00710  |        WriteLogStartupIni("", "Directory", "@ComSpec", 0, @ComSpec)
00711  |    
00712  |        WriteLogStartupIni("", "SystemInfo", "@CPUArch", 0, @CPUArch)
00713  |        WriteLogStartupIni("", "SystemInfo", "@KBLayout", 0, @KBLayout)
00714  |        WriteLogStartupIni("", "SystemInfo", "@MUILang", 0, @MUILang)
00715  |        WriteLogStartupIni("", "SystemInfo", "@OSArch", 0, @OSArch)
00716  |        WriteLogStartupIni("", "SystemInfo", "@OSLang", 0, @OSLang)
00717  |        WriteLogStartupIni("", "SystemInfo", "@OSType", 0, @OSType)
00718  |        WriteLogStartupIni("", "SystemInfo", "@OSVersion", 0, @OSVersion)
00719  |        WriteLogStartupIni("", "SystemInfo", "@OSBuild", 0, @OSBuild)
00720  |        WriteLogStartupIni("", "SystemInfo", "@OSServicePack", 0, @OSServicePack)
00721  |        WriteLogStartupIni("", "SystemInfo", "@ComputerName", 0, @ComputerName)
00722  |        WriteLogStartupIni("", "SystemInfo", "@UserName", 0, @UserName)
00723  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress1", 0, @IPAddress1)
00724  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress2", 0, @IPAddress2)
00725  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress3", 0, @IPAddress3)
00726  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress4", 0, @IPAddress4)
00727  |    
00728  |        WriteLogStartupIni("", "SystemInfo", "@DesktopHeight", 0, @DesktopHeight)
00729  |        WriteLogStartupIni("", "SystemInfo", "@DesktopWidth", 0, @DesktopWidth)
00730  |        WriteLogStartupIni("", "SystemInfo", "@DesktopDepth", 0, @DesktopDepth)
00731  |        WriteLogStartupIni("", "SystemInfo", "@DesktopRefresh", 0, @DesktopRefresh)
00732  +-EndFunc   ;==>WriteLogStartup
00733    
00734  +-Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
00735  |  +-    If $FileName = "" Then
00736  |  |            $FileName = $IniGlobalNetLogDir & $Section & ".ini"
00737  |  +-    EndIf
00738  |        IniWrite($FileName, ($IsSectionAddedToKey ? $Section & $Key : $Key), $ComputerName, $Value)
00739  |        IniWrite($IniGlobalNetLogInstancePath, $Section, $Key, $Value)
00740  +-EndFunc   ;==>WriteLogStartupIni
00741    #EndRegion
00742    #Region CheckAndRunProc
00743  +-Func Check()
00744  |        CheckAndRunProc($SpawnFileName, $SpawnDir, $SpawnPath, $SpawnExists)
00745  |        CheckAndRunProc($KPSInfoFileName, $KPSInfoDir, $KPSInfoPath, $KPSInfoExists)
00746  |        $WmiExporter1PID = CheckAndRunProc($WmiExporterLocalFileName, $WmiExporterLocalDir, $WmiExporterLocalPath & $WmiExporterParams, $WmiExporterLocalExists)
00747  |    ;~     CheckAndRunProcAs($PowerkatalogFileName, $PowerkatalogDir, $PowerkatalogPath, $PowerkatalogExists, "Administrator", "Brauckhoff", "")
00748  |    ;~     CheckAndRunProc($SHDUpdaterFileName, $SHDUpdaterDir, $SHDUpdaterPath, $SHDUpdaterExists)
00749  +-EndFunc   ;==>Check
00750    
00751  +-Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
00752  |  +-    If $Exists And Not ProcessExists($Name) Then
00753  |  |            ConsoleLog($Name & " wird gestartet")
00754  |  |            Return Run($Path, $Dir, $ShowFlag)
00755  |  +-    EndIf
00756  |        Return 0
00757  +-EndFunc   ;==>CheckAndRunProc
00758    
00759  +-Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
00760  |  +-    If $Exists And Not ProcessExists($Name) Then
00761  |  |            ConsoleLog($Name & " wird gestartet als " & $UserName & " in " & $Domain & " mit Network credentials only")
00762  |  |            RunAs($UserName, $Domain, $Password, $RUN_LOGON_NETWORK, $Path, $Dir)
00763  |  +-    EndIf
00764  +-EndFunc   ;==>CheckAndRunProcAs
00765    #EndRegion CheckAndRunProc
00766    #Region CleaningDownloads
00767  +-Func CleaningDownloads()
00768  |  +-    If DownloadsNeedCleaning() And @Compiled Then
00769  |  |            DirRemove($DownloadsOldDir, $DIR_REMOVE)
00770  |  |            FileDirMoveRec($DownloadsDir, $DownloadsOldDir)
00771  |  |            FileDelete($DownloadsOldDir & "\Downloads alt.lnk")
00772  |  |            FileCreateShortcut($DownloadsOldDir, $DownloadsDir & "\Downloads alt")
00773  |  |            IniWrite($IniLocalPath, "Downloads", "LastCleaningDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00774  |  |            Local Const $Warning = '' _
00775  |  |  |                        & 'Wenn Sie noch wichtige Dateien im Ordner "Downloads" aufbewahren, die Sie benötigen, kopieren Sie diese bitte an einen anderen Ort.' & @CRLF _
00776  |  |  |                        & 'Alle Dateien aus dem Ordner "Downloads" wurden bereits in den Ordner "Downloads alt" verschoben.' & @CRLF _
00777  |  |  |                        & 'Der Ordner "Downloads alt" ist über eine Verknüpfung in "Downloads" zu erreichen.' & @CRLF _
00778  |  |  |                        & 'Alle Ihre Dateien die im Ordner "Downloads alt" bleiben, werden demnächst unwiderruflich GELÖSCHT!' & @CRLF _
00779  |  |  |                        & 'Bitte sichten und sichern Sie am besten jetzt sofort Ihre weiterhin benötigten Dateien.' & @CRLF _
00780  |  |  |                        & 'Soll der Ordner "Downloads alt" jetzt geöffnet werden?' & @CRLF
00781  |  |  +-        If MsgBox($MB_YESNO + $MB_ICONWARNING + $MB_SYSTEMMODAL, "ACHTUNG WICHTIG! LÖSCHUNG IHRER DOWNLOAD-DATEIEN", $Warning, $MsgBoxTimeout) = $IDYES Then
00782  |  |  |                ShellExecute($DownloadsOldDir)
00783  |  |  +-        EndIf
00784  |  +-    EndIf
00785  +-EndFunc   ;==>CleaningDownloads
00786    
00787  +-Func DownloadsNeedCleaning()
00788  |        Return (_DateToDayValue(@YEAR, @MON, @MDAY) - GetDownloadsLastCleaningDate()) >= 14
00789  +-EndFunc   ;==>DownloadsNeedCleaning
00790  +-Func FileDirMoveRec($SourceDir, $DestDir)
00791  |  +-    If FileExists($SourceDir) Then
00792  |  |            If Not FileExists($DestDir) Then DirCreate($DestDir)
00793  |  |            FileMove($SourceDir & "\*.*", $DestDir, $FC_OVERWRITE + $FC_CREATEPATH)
00794  |  |            Local Const $FolderList = _FileListToArray($SourceDir, Default, $FLTA_FOLDERS, True)
00795  |  |  +-        If Not @error Then
00796  |  |  |  +-            For $Folder In $FolderList
00797  |  |  |  |                    DirMove($Folder, $DestDir, $FC_OVERWRITE)
00798  |  |  |  +-            Next
00799  |  |  +-        EndIf
00800  |  +-    EndIf
00801  +-EndFunc   ;==>FileDirMoveRec
00802    
00803  +-Func GetDownloadsLastCleaningDate()
00804  |        Return IniRead($IniLocalPath, "Downloads", "LastCleaningDate", "NULL")
00805  +-EndFunc   ;==>GetDownloadsLastCleaningDate
00806    #EndRegion CleaningDownloads
00807    #Region FreeSpaceCheck
00808  +-Func ByteSuffix($iBytes)
00809  |        Local $iIndex = 0, $aArray = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB']
00810  |  +-    While $iBytes > 1023
00811  |  |            $iIndex += 1
00812  |  |            $iBytes /= 1024
00813  |  +-    WEnd
00814  |        Return Round($iBytes) & $aArray[$iIndex]
00815  +-EndFunc   ;==>ByteSuffix
00816    
00817  +-Func CheckHomeDriveSpaceFree()
00818  |        Local Const $sLabel = DriveGetLabel(@HomeDrive & "\")
00819  |    ;~     Local Const $sSerial = DriveGetSerial(@HomeDrive & "\")
00820  |        Local Const $iFreeSpace = DriveSpaceFree(@HomeDrive & "\")
00821  |        Local Const $iTotalSpace = DriveSpaceTotal(@HomeDrive & "\")
00822  |        Local Const $iFreeSpacePerc = ($iFreeSpace / $iTotalSpace) * 100
00823  |  +-    If $iFreeSpacePerc < $LowSpaceThresholdPerc Then
00824  |  |  +-        If (_DateToDayValue(@YEAR, @MON, @MDAY) - IniRead($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", "NULL")) >= 1 Then
00825  |  |  |                IniWrite($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00826  |  |  |  +-            For $i = 0 To 9 Step 1
00827  |  |  |  |  +-                If $MailAddresses[$i][0] <> "" And $MailAddresses[$i][1] = 1 Then
00828  |  |  |  |  |                        ConsoleLog("Sending Mail to " & $MailAddresses[$i][0])
00829  |  |  |  |  |                        SendMailLowSpace($MailAddresses[$i][0], Round($iFreeSpacePerc, 2), $sLabel, $iFreeSpace, $iTotalSpace)
00830  |  |  |  |  |                        Sleep(3000)
00831  |  |  |  |  +-                EndIf
00832  |  |  |  +-            Next
00833  |  |  +-        EndIf
00834  |  +-    EndIf
00835  +-EndFunc   ;==>CheckHomeDriveSpaceFree
00836    
00837  +-Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
00838  |        Local $sFromName = "akk.exe (Gerrit)"
00839  |        Local $sFromAddress = "akk@kuechen-brauckhoff.de"
00840  |        Local $sSubject = "AKK Warnung freier Speicher auf " & @ComputerName & " ist " & $iFreeSpacePerc & "% !"
00841  |        Local $asBody[0]
00842  |        _ArrayAdd($asBody, "Akk Warnung wenig Speicherplatz auf:")
00843  |        _ArrayAdd($asBody, @ComputerName)
00844  |        If @IPAddress1 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress1)
00845  |        If @IPAddress2 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress2)
00846  |        If @IPAddress3 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress3)
00847  |        If @IPAddress4 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress4)
00848  |        _ArrayAdd($asBody, $sLabel & " (" & @HomeDrive & ")")
00849  |        _ArrayAdd($asBody, Round($iFreeSpace / 1024, 2) & " GB frei von " & Round($iTotalSpace / 1024, 2) & " GB")
00850  |        _ArrayAdd($asBody, $iFreeSpacePerc & "% frei")
00851  |        Local $iResponse = _INetSmtpMail($SmtpMailSmtpServer, $sFromName, $sFromAddress, $sToAddress, $sSubject, $asBody, $SmtpMailEHLO, $SmtpMailFirst, $SmtpMailTrace)
00852  |        Local $iErr = @error
00853  |  +-    If $iResponse = 0 Then
00854  |  |            Local Const $Warning = '' _
00855  |  |  |                        & 'DIE FESTPLATTE IST FAST VOLL!' & @CRLF & @CRLF _
00856  |  |  |                        & 'Bitte Herrn Heger bescheid geben:' & @CRLF _
00857  |  |  |                        & 'heger@easyconnectit.de' & @CRLF _
00858  |  |  |                        & 'oder 0176 23984427' & @CRLF & @CRLF _
00859  |  |  |                        & _ArrayToString($asBody, @CRLF) & @CRLF & @CRLF _
00860  |  |  |                        & 'Mail failed with error code ' & $iErr & @CRLF
00861  |  |            MsgBox($MB_ICONWARNING + $MB_SYSTEMMODAL, "Warnung!", $Warning)
00862  |  +-    EndIf
00863  +-EndFunc   ;==>SendMailLowSpace
00864    #EndRegion FreeSpaceCheck
00865    #Region WMI Exporter
00866  +-Func _FormatKbToGb($iKb)
00867  |        Return Round($iKb / 1024 / 1024, 2)
00868  +-EndFunc   ;==>_FormatKbToGb
00869    
00870  +-Func _PrometheusNewDesc(ByRef $mMap, $sName, $sType, $nValue = 0, $sText = "")
00871  |        Local Static $iDx = 0
00872  |        $iDx += 1
00873  |        Local Const $sTextDefault = "Metric read from C:\\Brauckhoff\\wmi_exporter\\textfile_inputs\\metadata.prom"
00874  |        Local $mResult[]
00875  |        Local $mLabels[]
00876  |        $mResult.Name = $sName & "+" & $iDx
00877  |        $mResult.Type = $sType
00878  |        $mResult.Value = $nValue
00879  |        $mResult.Text = ($sText = "" ? $sTextDefault : $sText)
00880  |        $mResult.Labels = $mLabels
00881  |        $mMap[$mResult.Name] = $mResult
00882  |        Return $mResult.Name
00883  +-EndFunc   ;==>_PrometheusNewDesc
00884    
00885  +-Func MetaProcessCount($ProcessName)
00886  |        Local $mResult[]
00887  |        Local $aProcessList = ProcessList($ProcessName)
00888  |        Local $sDrive = "", $sDir = "", $sFileName = "", $sExtension = ""
00889  |        _PathSplit($ProcessName, $sDrive, $sDir, $sFileName, $sExtension)
00890  |        $mResult.Count = $aProcessList[0][0]
00891  |        $mResult.FileName = $sFileName
00892  |        Return $mResult
00893  +-EndFunc   ;==>MetaProcessCount
00894    
00895  +-Func Scrape()
00896  |  +-    If $ScrapeComplete And ProcessExists($WmiExporterLocalFileName) Then
00897  |  |            $hDownload = InetGet("http://localhost:9182/metrics", $LogScrapePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)
00898  |  |            $ScrapeComplete = 0
00899  |  +-    EndIf
00900  +-EndFunc   ;==>Scrape
00901    
00902  +-Func ScrapeDownload()
00903  |  +-    If Not $ScrapeComplete Then
00904  |  |  +-        If InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE) Then
00905  |  |  |  +-            If InetGetInfo($hDownload, $INET_DOWNLOADSUCCESS) Then
00906  |  |  |  |                    If FileGetSize($LogScrapePath) Then FileCopy($LogScrapePath, $LogScrapeNetPath, $FC_OVERWRITE + $FC_CREATEPATH)
00907  |  |  |  +-            Else
00908  |  |  |  |                    FileDelete($LogScrapePath)
00909  |  |  |  |                    ConsoleLog("Error ScrapeDownload")
00910  |  |  |  +-            EndIf
00911  |  |  |                InetClose($hDownload)
00912  |  |  |                $hDownload = 0
00913  |  |  |                $ScrapeComplete = 1
00914  |  |  +-        EndIf
00915  |  +-    EndIf
00916  +-EndFunc   ;==>ScrapeDownload
00917    
00918  +-Func SetupExactFile()
00919  |  +-    If Not $ExactFileExists Then
00920  |  |  +-        If FileCopy($ExactFileNetPath, $ExactFilePath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00921  |  |  |                $ExactFileExists = FileExists($ExactFilePath)
00922  |  |  +-        EndIf
00923  |  +-    EndIf
00924  +-EndFunc   ;==>SetupExactFile
00925    
00926  +-Func SetupWmiExporter()
00927  |        ProcessClose($WmiExporterLocalFileName)
00928  |        Local $SourcePath = (@OSArch = "X64") ? $WmiExporterX64GlobalNetSetupPath : $WmiExporterX32GlobalNetSetupPath
00929  |        Local $WmiExporterLocalTime = FileGetTime($WmiExporterLocalPath, $FT_MODIFIED, $FT_STRING)
00930  |        Local $WmiExporterGlobalNetSetupTime = FileGetTime($SourcePath, $FT_MODIFIED, $FT_STRING)
00931  |  +-    If Not $WmiExporterLocalExists Or $WmiExporterLocalTime <> $WmiExporterGlobalNetSetupTime Then
00932  |  |            ConsoleLog("Reload WmiExporter " & $SourcePath)
00933  |  |  +-        If FileCopy($SourcePath, $WmiExporterLocalPath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00934  |  |  |                $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00935  |  |  +-        Else
00936  |  |  |                ConsoleLog("ERROR Reload WmiExporter " & $SourcePath)
00937  |  |  +-        EndIf
00938  |  +-    EndIf
00939  |        If Not FileExists($WmiExporterCollectorTextfileDir) Then DirCreate($WmiExporterCollectorTextfileDir)
00940  +-EndFunc   ;==>SetupWmiExporter
00941    
00942  +-Func WriteMetaDataFile()
00943  |        EventLog()
00944  |        Local $mMetrics[]
00945  |        Local $sName = _PrometheusNewDesc($mMetrics, "akk_metadata", "gauge", _Timer_GetIdleTime() / 1e3)
00946  |        $mMetrics[$sName].Labels.username = @UserName
00947  |        $mMetrics[$sName].Labels.ip_address = @IPAddress1
00948  |        $mMetrics[$sName].Labels.netphone_user = ($ActiveWinTitle = "LockScreen" ? "LockScreen" : $NetPhoneUser)
00949  |  +-    If $WmiExporterMetadataString <> "NULL" And StringLen($WmiExporterMetadataString) And Not StringIsSpace($WmiExporterMetadataString) Then
00950  |  |            $mMetrics[$sName].LabelsRaw = $WmiExporterMetadataString
00951  |  +-    EndIf
00952  |    
00953  |        Local $aMemStats = MemGetStats()
00954  |        _PrometheusNewDesc($mMetrics, "akk_idletime_sec", "gauge", _Timer_GetIdleTime() / 1e3, "Returns the number of seconds since last user activity (i.e. KYBD/Mouse)")
00955  |        _PrometheusNewDesc($mMetrics, "akk_memstats_load", "gauge", $aMemStats[$MEM_LOAD], "Memory Load (Percentage of memory in use)")
00956  |        _PrometheusNewDesc($mMetrics, "akk_memstats_total_physram_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_TOTALPHYSRAM]), "Total physical RAM")
00957  |        _PrometheusNewDesc($mMetrics, "akk_memstats_avail_physram_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_AVAILPHYSRAM]), "Available physical RAM")
00958  |        _PrometheusNewDesc($mMetrics, "akk_memstats_total_pagefile_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_TOTALPAGEFILE]), "Total Pagefile")
00959  |        _PrometheusNewDesc($mMetrics, "akk_memstats_avail_pagefile_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_AVAILPAGEFILE]), "Available Pagefile")
00960  |        _PrometheusNewDesc($mMetrics, "akk_memstats_total_virtual_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_TOTALVIRTUAL]), "Total virtual")
00961  |        _PrometheusNewDesc($mMetrics, "akk_memstats_avail_virtual_gb", "gauge", _FormatKbToGb($aMemStats[$MEM_AVAILVIRTUAL]), "Available virtual")
00962  |    
00963  |        _PrometheusNewDesc($mMetrics, "akk_eventlog_full", "gauge", ($EventLogFull ? 1 : 0), "Retrieves whether the event log is full")
00964  |        _PrometheusNewDesc($mMetrics, "akk_eventlog_count", "gauge", $EventLogCount, "Retrieves the number of records in the event log")
00965  |        _PrometheusNewDesc($mMetrics, "akk_eventlog_oldest", "gauge", $EventLogOldest, "Retrieves the absolute record number of the oldest record in the event log")
00966  |    
00967  |        Local $MetaProcessCountChrome = MetaProcessCount("chrome.exe")
00968  |        $sName = _PrometheusNewDesc($mMetrics, "akk_process_count", "gauge", $MetaProcessCountChrome.Count)
00969  |        $mMetrics[$sName].Labels.process = $MetaProcessCountChrome.FileName
00970  |    
00971  |        Local $MetaProcessCountJavaw = MetaProcessCount("javaw.exe")
00972  |        $sName = _PrometheusNewDesc($mMetrics, "akk_process_count", "gauge", $MetaProcessCountJavaw.Count)
00973  |        $mMetrics[$sName].Labels.process = $MetaProcessCountJavaw.FileName
00974  |    
00975  |        Local $MetaProcessCountFusionFX = MetaProcessCount("FusionFX.exe")
00976  |        $sName = _PrometheusNewDesc($mMetrics, "akk_process_count", "gauge", $MetaProcessCountFusionFX.Count)
00977  |        $mMetrics[$sName].Labels.process = $MetaProcessCountFusionFX.FileName
00978  |    
00979  |        Local $WmiExporterMetadataArray[1]
00980  |        Local $sLastName = "", $sLabels = ""
00981  |        Local $aMapKeys
00982  |  +-    For $mMap In $mMetrics
00983  |  |            $sName = StringSplit($mMap.Name, "+")[1]
00984  |  |  +-        If $sLastName <> $sName Then
00985  |  |  |                _ArrayAdd($WmiExporterMetadataArray, "# HELP " & $sName & " " & $mMap.Text)
00986  |  |  |                _ArrayAdd($WmiExporterMetadataArray, "# TYPE " & $sName & " " & $mMap.Type)
00987  |  |  +-        EndIf
00988  |  |            $aMapKeys = MapKeys($mMap.Labels)
00989  |  |            $sLabels = ""
00990  |  |  +-        If UBound($aMapKeys) Then
00991  |  |  |                $sLabels &= "{"
00992  |  |  |  +-            For $vLabel In $aMapKeys
00993  |  |  |  |                    $sLabels &= $vLabel & '="' & $mMap.Labels[$vLabel] & '",'
00994  |  |  |  +-            Next
00995  |  |  |  +-            If MapExists($mMap, "LabelsRaw") Then
00996  |  |  |  |                    $sLabels &= $mMap.LabelsRaw
00997  |  |  |  +-            EndIf
00998  |  |  |                If StringRight($sLabels, 1) = "," Then $sLabels = StringTrimRight($sLabels, 1)
00999  |  |  |                $sLabels &= "}"
01000  |  |  +-        EndIf
01001  |  |            _ArrayAdd($WmiExporterMetadataArray, $sName & $sLabels & " " & $mMap.Value)
01002  |  |            $sLastName = $sName
01003  |  +-    Next
01004  |        $WmiExporterMetadataArray[0] = UBound($WmiExporterMetadataArray) - 1
01005  |        Local $WmiExporterMetadataArrayRet
01006  |        _FileReadToArray($WmiExporterMetadataPath, $WmiExporterMetadataArrayRet)
01007  |  +-    If Not _ArrayCompare($WmiExporterMetadataArray, $WmiExporterMetadataArrayRet, 3) Then
01008  |  |            _FileWriteFromArray($WmiExporterMetadataPath, $WmiExporterMetadataArray, 1)
01009  |  +-    EndIf
01010  +-EndFunc   ;==>WriteMetaDataFile
01011    
01012  +-Func WriteScrapeTargetFile()
01013  |        Local $Lines[1]
01014  |        _ArrayAdd($Lines, '[')
01015  |        _ArrayAdd($Lines, '  {')
01016  |        _ArrayAdd($Lines, '    "labels": {')
01017  |        _ArrayAdd($Lines, '      "job": "node",')
01018  |        _ArrayAdd($Lines, '      "instance": "@ComputerName@"')
01019  |        _ArrayAdd($Lines, '    },')
01020  |        _ArrayAdd($Lines, '    "targets": [')
01021  |        _ArrayAdd($Lines, '      "@IPAddress1@:9182"')
01022  |        _ArrayAdd($Lines, '    ]')
01023  |        _ArrayAdd($Lines, '  }')
01024  |        _ArrayAdd($Lines, ']')
01025  |        Local $CurrentFile
01026  |        $Lines[0] = UBound($Lines) - 1
01027  |        Local $FilePath = $PromScrapeTargetsDir & "@ComputerName@.json"
01028  |        _FileReadToArray($FilePath, $CurrentFile)
01029  |  +-    If Not _ArrayCompare($Lines, $CurrentFile, 3) Then
01030  |  |            _FileWriteFromArray($FilePath, $Lines, 1)
01031  |  +-    EndIf
01032  +-EndFunc   ;==>WriteScrapeTargetFile
01033    #EndRegion WMI Exporter
01034    #Region UDF
01035  +-Func _ComputerNameAndModel()
01036  |        Local $aReturn[2] = ["(Unknown)", "(Unknown)"], $oColItems, $oWMIService
01037  |    
01038  |        $oWMIService = ObjGet("winmgmts:\\.\root\cimv2")
01039  |        $oColItems = $oWMIService.ExecQuery("Select * From Win32_ComputerSystemProduct", "WQL", 0x30)
01040  |  +-    If IsObj($oColItems) Then
01041  |  |  +-        For $oObjectItem In $oColItems
01042  |  |  |                $aReturn[0] = StringStripWS($oObjectItem.Name, $STR_STRIPLEADING + $STR_STRIPTRAILING)
01043  |  |  |                $aReturn[1] = StringStripWS($oObjectItem.IdentifyingNumber, $STR_STRIPLEADING + $STR_STRIPTRAILING)
01044  |  |  +-        Next
01045  |  |            Return $aReturn
01046  |  +-    EndIf
01047  |        Return SetError(1, 0, $aReturn)
01048  +-EndFunc   ;==>_ComputerNameAndModel
01049    #EndRegion UDF

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================
ByteSuffix                00808 
Check                     00743 
CheckAndRunProc           00751 
CheckAndRunProcAs         00759 
CheckHomeDriveSpaceFree   00817 
CleaningDownloads         00767 
ConsoleLog                00434 
DownloadsNeedCleaning     00787 
EventLog                  00443 
FileDirMoveRec            00790 
GetDownloadsLastCleaningDate  00803 
GetGlobalConfig           00451 
GetWinList                00494 
ManageLogFile             00532 
MetaProcessCount          00885 
ReadGlobalConfig          00548 
ReadLocalConfig           00565 
Scrape                    00895 
ScrapeDownload            00902 
ScreenCaptureNetPhoneClient  00573 
ScreenCaptureWnd          00604 
SendMailLowSpace          00837 
SetupExactFile            00918 
SetupWmiExporter          00926 
Timeout                   00635 
WriteLogStartup           00644 
WriteLogStartupIni        00734 
WriteMetaDataFile         00942 
WriteScrapeTargetFile     01012 
_ComputerNameAndModel     01035 
_FormatKbToGb             00866 
_PrometheusNewDesc        00870 
_SetVar                   00429 

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
#Au3Stripper_Parameters   ----- 00026
#AutoIt3Wrapper_AU3Check_Parameters  ----- 00020
#AutoIt3Wrapper_AU3Check_Stop_OnWarning  ----- 00018
#AutoIt3Wrapper_Icon      ----- 00003
#AutoIt3Wrapper_Outfile   ----- 00004
#AutoIt3Wrapper_Res_Comment  ----- 00006
#AutoIt3Wrapper_Res_CompanyName  ----- 00011
#AutoIt3Wrapper_Res_Description  ----- 00007
#AutoIt3Wrapper_Res_Field  ----- 00016
#AutoIt3Wrapper_Res_Fileversion  ----- 00008
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement  ----- 00009
#AutoIt3Wrapper_Res_Language  ----- 00015
#AutoIt3Wrapper_Res_LegalCopyright  ----- 00012
#AutoIt3Wrapper_Res_LegalTradeMarks  ----- 00013
#AutoIt3Wrapper_Res_ProductName  ----- 00010
#AutoIt3Wrapper_Res_SaveSource  ----- 00014
#AutoIt3Wrapper_Run_AU3Check  ----- 00017
#AutoIt3Wrapper_Run_After  ----- 00022
#AutoIt3Wrapper_Run_Au3Stripper  ----- 00025
#AutoIt3Wrapper_Run_Before  ----- 00021
#AutoIt3Wrapper_Run_Tidy  ----- 00023
#AutoIt3Wrapper_UseX64    ----- 00005
#AutoIt3Wrapper_Version   ----- 00002
#Autoit3wrapper_Jump_to_First_Error  ----- 00019
#EndRegion                ----- 00027 00092 00144 00271 00280 00364 00375 00381 00741 00765 00806 00864 01033 01049
#Region                   ----- 00001 00047 00094 00145 00272 00281 00365 00376 00382 00742 00766 00807 00865 01034
#Tidy_Parameters          ----- 00024
#include                  ----- 00035 00036 00037 00038 00039 00040 00041 00042 00043 00044 00045 00046
$ActiveWinTitle           ----- 00117 00611 00653 00948
$AkkDir                   ----- 00158 00159 00168 00178 00183 00205 00243 00253
$AkkExists                ----- 00160
$AkkFileName              ----- 00157 00159 00162
$AkkNetDir                ----- 00163 00164
$AkkNetExists             ----- 00165
$AkkNetFileName           ----- 00162 00164
$AkkNetPath               ----- 00164 00165 00487 00490
$AkkNetTime               ----- 00487 00488
$AkkPath                  ----- 00159 00160 00486
$AkkRootDir               ----- 00153 00154 00188 00198 00211 00217 00222 00228 00233 00259 00297 00307 00312 00352
$AkkRootExists            ----- 00155
$AkkRootFileName          ----- 00152 00154
$AkkRootPath              ----- 00154 00155
$AkkTime                  ----- 00486 00488
$AkkUpdaterDir            ----- 00168 00169 00489
$AkkUpdaterExists         ----- 00170 00458 00459 00482 00489
$AkkUpdaterFileName       ----- 00167 00169 00172 00489
$AkkUpdaterNetDir         ----- 00173 00174
$AkkUpdaterNetExists      ----- 00175 00458
$AkkUpdaterNetFileName    ----- 00172 00174
$AkkUpdaterNetPath        ----- 00174 00175 00459 00480 00482 00483
$AkkUpdaterNetTime        ----- 00480 00481
$AkkUpdaterPath           ----- 00169 00170 00459 00479 00482 00489
$AkkUpdaterTime           ----- 00479 00481
$AkkVersion               ----- 00112 00647
$ArrayDelimItem           ----- 00267 00508 00521
$ComputerName             ----- 00111 00738
$CurrentFile              ----- 01025 01028 01029
$Cycle                    ----- 00099 00416 00425 00426 00435
$DIR_REMOVE               ----- 00769
$Delay                    ----- 00635 00637
$Dest                     ----- 00543 00544
$DestDir                  ----- 00790 00792 00793 00797
$Diff                     ----- 00636 00637 00639
$Dir                      ----- 00751 00754 00759 00762
$Domain                   ----- 00759 00761 00762
$DownloadsDir             ----- 00264 00265 00770 00772
$DownloadsOldDir          ----- 00265 00769 00770 00771 00772 00782
$EventLogCount            ----- 00288 00446 00657 00964
$EventLogFull             ----- 00287 00445 00656 00963
$EventLogOldest           ----- 00289 00447 00658 00965
$ExactFileDir             ----- 00292 00293
$ExactFileExists          ----- 00294 00919 00921
$ExactFileFileName        ----- 00291 00293 00296
$ExactFileNetDir          ----- 00297 00298
$ExactFileNetExists       ----- 00299
$ExactFileNetFileName     ----- 00296 00298
$ExactFileNetPath         ----- 00298 00299 00920
$ExactFilePath            ----- 00293 00294 00920 00921
$Exists                   ----- 00751 00752 00759 00760
$FC_CREATEPATH            ----- 00453 00456 00459 00465 00473 00482 00544 00793 00906 00920 00933
$FC_OVERWRITE             ----- 00453 00456 00459 00465 00473 00482 00544 00793 00797 00906 00920 00933
$FLTA_FOLDERS             ----- 00794
$FT_MODIFIED              ----- 00462 00463 00470 00471 00479 00480 00486 00487 00660 00929 00930
$FT_STRING                ----- 00462 00463 00470 00471 00479 00480 00486 00487 00660 00929 00930
$FileName                 ----- 00734 00735 00736 00738
$FilePath                 ----- 01027 01028 01030
$Folder                   ----- 00796 00797
$FolderList               ----- 00794 00796
$IDYES                    ----- 00781
$INET_DOWNLOADBACKGROUND  ----- 00897
$INET_DOWNLOADCOMPLETE    ----- 00904
$INET_DOWNLOADSUCCESS     ----- 00905
$INET_FORCERELOAD         ----- 00897
$IdleTime                 ----- 00285
$IniGlobalDir             ----- 00183 00184 00193
$IniGlobalExDir           ----- 00193 00194
$IniGlobalExExists        ----- 00195 00455 00456 00473
$IniGlobalExFileName      ----- 00192 00194 00197
$IniGlobalExNetDir        ----- 00198 00199
$IniGlobalExNetExists     ----- 00200 00455
$IniGlobalExNetFileName   ----- 00197 00199
$IniGlobalExNetPath       ----- 00199 00200 00456 00471 00473 00474 00560
$IniGlobalExNetTime       ----- 00471 00472
$IniGlobalExPath          ----- 00194 00195 00456 00470 00473 00557 00558 00599
$IniGlobalExTime          ----- 00470 00472
$IniGlobalExists          ----- 00185 00452 00453 00465
$IniGlobalFileName        ----- 00182 00184 00187
$IniGlobalNetDir          ----- 00188 00189
$IniGlobalNetExists       ----- 00190 00452
$IniGlobalNetFileName     ----- 00187 00189
$IniGlobalNetLogDir       ----- 00228 00229 00645 00736
$IniGlobalNetLogExists    ----- 00230
$IniGlobalNetLogFileName  ----- 00227 00229
$IniGlobalNetLogInstanceDir  ----- 00238 00239
$IniGlobalNetLogInstanceExists  ----- 00240
$IniGlobalNetLogInstanceFileName  ----- 00237 00239
$IniGlobalNetLogInstancePath  ----- 00239 00240 00739
$IniGlobalNetLogPath      ----- 00229 00230
$IniGlobalNetPath         ----- 00189 00190 00453 00463 00465 00466
$IniGlobalNetTime         ----- 00463 00464
$IniGlobalPath            ----- 00184 00185 00453 00462 00465 00549 00550 00552 00553 00555
$IniGlobalTime            ----- 00462 00464
$IniLocalDir              ----- 00178 00179
$IniLocalExists           ----- 00180
$IniLocalFileName         ----- 00177 00179
$IniLocalPath             ----- 00179 00180 00538 00540 00541 00566 00568 00773 00804 00824 00825
$IntMax                   ----- 00110
$IntMin                   ----- 00109
$IsSectionAddedToKey      ----- 00734 00738
$KPSInfoDir               ----- 00126 00127 00745
$KPSInfoExists            ----- 00128 00649 00745
$KPSInfoFileName          ----- 00125 00127 00745
$KPSInfoPath              ----- 00127 00128 00745
$Key                      ----- 00734 00738 00739
$Lines                    ----- 01013 01014 01015 01016 01017 01018 01019 01020 01021 01022 01023 01024 01026 01029 
                                01030
$List                     ----- 00605 00608 00609 00610 00611 00612 00614 00615 00619 00622
$ListStates               ----- 00496 00498 00499 00500 00501 00502 00503 00504 00508 00517 00519 00520 00521
$ListVisble               ----- 00518 00521 00528 00529
$LogArchiveNetDir         ----- 00222 00223 00225 00543
$LogArchiveNetExists      ----- 00224
$LogArchiveNetFileName    ----- 00221 00223
$LogArchiveNetPath        ----- 00223 00224
$LogDir                   ----- 00205 00206 00208 00534
$LogExists                ----- 00207
$LogFileID                ----- 00202 00533 00537 00538 00566 00567 00569
$LogFileName              ----- 00204 00206 00533 00534 00535
$LogGlobalNetDir          ----- 00217 00218
$LogGlobalNetExists       ----- 00219
$LogGlobalNetFileName     ----- 00216 00218
$LogGlobalNetPath         ----- 00218 00219 00440 00542 00544
$LogNetDir                ----- 00211 00212 00214 00238 00248 00535
$LogNetExists             ----- 00213
$LogNetFileName           ----- 00210 00212
$LogNetPath               ----- 00212 00213 00439 00535 00541
$LogPath                  ----- 00206 00207 00438 00534 00536 00540
$LogScrapeDir             ----- 00243 00244
$LogScrapeExists          ----- 00245
$LogScrapeFileName        ----- 00242 00244
$LogScrapeNetDir          ----- 00248 00249
$LogScrapeNetExists       ----- 00250
$LogScrapeNetFileName     ----- 00247 00249
$LogScrapeNetPath         ----- 00249 00250 00906
$LogScrapePath            ----- 00244 00245 00897 00906 00908
$LogScreenCapDir          ----- 00253 00254 00256 00617
$LogScreenCapExists       ----- 00255
$LogScreenCapFileName     ----- 00252 00254
$LogScreenCapNetDir       ----- 00259 00260 00262 00591 00594
$LogScreenCapNetExists    ----- 00261
$LogScreenCapNetFileName  ----- 00258 00260
$LogScreenCapNetPath      ----- 00260 00261
$LogScreenCapPath         ----- 00254 00255
$LogSpawnStatsNetDir      ----- 00233 00234
$LogSpawnStatsNetExists   ----- 00235
$LogSpawnStatsNetFileName  ----- 00232 00234
$LogSpawnStatsNetPath     ----- 00234 00235
$LowSpaceThresholdPerc    ----- 00278 00550 00823
$MB_ICONWARNING           ----- 00781 00861
$MB_SYSTEMMODAL           ----- 00781 00861
$MB_YESNO                 ----- 00781
$MEM_AVAILPAGEFILE        ----- 00379 00959
$MEM_AVAILPHYSRAM         ----- 00379 00957
$MEM_AVAILVIRTUAL         ----- 00379 00961
$MEM_LOAD                 ----- 00379 00955
$MEM_TOTALPAGEFILE        ----- 00379 00958
$MEM_TOTALPHYSRAM         ----- 00379 00956
$MEM_TOTALVIRTUAL         ----- 00379 00960
$MacroAutoIt              ----- 00268
$MacroDirectory           ----- 00269
$MacroSystemInfo          ----- 00270
$MailAddresses            ----- 00279 00552 00553 00827 00828 00829
$MetaProcessCountChrome   ----- 00967 00968 00969
$MetaProcessCountFusionFX  ----- 00975 00976 00977
$MetaProcessCountJavaw    ----- 00971 00972 00973
$MsgBoxTimeout            ----- 00097 00781
$Name                     ----- 00751 00752 00753 00759 00760 00761
$NetPhoneClientDir        ----- 00141 00142
$NetPhoneClientExists     ----- 00143 00652
$NetPhoneClientFileName   ----- 00140 00142 00577
$NetPhoneClientPath       ----- 00142 00143
$NetPhoneUser             ----- 00116 00599 00600 00948
$NetPhoneUserChecksum     ----- 00115 00590 00591 00594 00599 00601
$Password                 ----- 00759 00762
$Path                     ----- 00751 00754 00759 00762
$PowerkatalogDir          ----- 00131 00132
$PowerkatalogExists       ----- 00133 00650
$PowerkatalogFileName     ----- 00130 00132
$PowerkatalogPath         ----- 00132 00133
$ProcessName              ----- 00885 00887 00889
$PromScrapeTargetsDir     ----- 00352 00353 00355 01027
$PromScrapeTargetsExists  ----- 00354
$PromScrapeTargetsFileName  ----- 00351 00353
$PromScrapeTargetsPath    ----- 00353 00354
$RUN_LOGON_NETWORK        ----- 00762
$RootDir                  ----- 00147 00149 00153 00163 00173
$RootExists               ----- 00150
$RootFileName             ----- 00146 00149
$RootPath                 ----- 00149 00150
$SHDUpdaterDir            ----- 00136 00137
$SHDUpdaterExists         ----- 00138 00651
$SHDUpdaterFileName       ----- 00135 00137
$SHDUpdaterPath           ----- 00137 00138
$STR_STRIPLEADING         ----- 00614 01042 01043
$STR_STRIPTRAILING        ----- 00614 01042 01043
$ScrapeComplete           ----- 00283 00896 00898 00903 00913
$ScreenCaptureWinActivate  ----- 00114 00580 00598
$ScreenCaptureWnd         ----- 00113 00614
$Section                  ----- 00734 00736 00738 00739
$ShowFlag                 ----- 00751 00754
$SmtpMailEHLO             ----- 00274 00851
$SmtpMailFirst            ----- 00275 00851
$SmtpMailSmtpServer       ----- 00273 00555 00851
$SmtpMailTrace            ----- 00276 00851
$SourceDir                ----- 00790 00791 00793 00794
$SourcePath               ----- 00928 00930 00932 00933 00936
$SpawnDir                 ----- 00121 00122 00744
$SpawnExists              ----- 00123 00648 00744
$SpawnFileName            ----- 00120 00122 00660 00744
$SpawnPath                ----- 00122 00123 00660 00744
$StartTimer               ----- 00100 00101 00102 00103 00104 00105 00106 00107 00108
$T1                       ----- 00095
$T2                       ----- 00096
$Text                     ----- 00434 00435 00436 00438 00439 00440
$Timer                    ----- 00635 00636 00638
$Timer1                   ----- 00101 00417
$Timer2                   ----- 00102 00418
$Timer3                   ----- 00103 00419
$Timer4                   ----- 00104 00420
$Timer5                   ----- 00105
$Timer6                   ----- 00106 00422
$Timer7                   ----- 00107 00423
$Timer8                   ----- 00108
$TrayTipTimeout           ----- 00098
$UserName                 ----- 00759 00761 00762
$Value                    ----- 00734 00738 00739
$WIN_STATE_ACTIVE         ----- 00371 00508 00610
$WIN_STATE_ENABLED        ----- 00370 00508
$WIN_STATE_EXISTS         ----- 00368 00508
$WIN_STATE_MAXIMIZED      ----- 00373 00508 00622
$WIN_STATE_MINIMIZED      ----- 00372 00508 00596 00619
$WIN_STATE_VISIBLE        ----- 00369 00508 00520
$Warning                  ----- 00774 00781 00854 00861
$WmiExporter1PID          ----- 00284 00746
$WmiExporterCollectorTextfileDir  ----- 00344 00347 00359 00939
$WmiExporterCollectorsEnabled  ----- 00316 00359
$WmiExporterGlobalNetSetupTime  ----- 00930 00931
$WmiExporterLocalDir      ----- 00302 00303 00344 00746
$WmiExporterLocalExists   ----- 00304 00746 00931 00934
$WmiExporterLocalFileName  ----- 00301 00303 00746 00896 00927
$WmiExporterLocalPath     ----- 00303 00304 00746 00929 00933 00934
$WmiExporterLocalTime     ----- 00929 00931
$WmiExporterMetadataArray  ----- 00979 00985 00986 01001 01004 01007 01008
$WmiExporterMetadataArrayRet  ----- 01005 01006 01007
$WmiExporterMetadataDir   ----- 00347 00348
$WmiExporterMetadataExists  ----- 00349
$WmiExporterMetadataFileName  ----- 00346 00348
$WmiExporterMetadataPath  ----- 00348 00349 01006 01008
$WmiExporterMetadataString  ----- 00357 00558 00559 00949 00950
$WmiExporterParams        ----- 00359 00396 00746
$WmiExporterX32GlobalNetSetupDir  ----- 00307 00308
$WmiExporterX32GlobalNetSetupExists  ----- 00309
$WmiExporterX32GlobalNetSetupFileName  ----- 00306 00308
$WmiExporterX32GlobalNetSetupPath  ----- 00308 00309 00928
$WmiExporterX64GlobalNetSetupDir  ----- 00312 00313
$WmiExporterX64GlobalNetSetupExists  ----- 00314
$WmiExporterX64GlobalNetSetupFileName  ----- 00311 00313
$WmiExporterX64GlobalNetSetupPath  ----- 00313 00314 00928
$aArray                   ----- 00809 00814
$aComputerSystemProduct   ----- 00668 00669 00670
$aList                    ----- 00495 00506 00507 00508
$aMapKeys                 ----- 00981 00988 00990 00992
$aMemStats                ----- 00953 00955 00956 00957 00958 00959 00960 00961
$aPos                     ----- 00584 00585 00586 00587 00588 00589 00590 00594
$aProcessList             ----- 00887 00890
$aReturn                  ----- 01036 01042 01043 01045 01047
$asBody                   ----- 00841 00842 00843 00844 00845 00846 00847 00848 00849 00850 00851 00854
$hDownload                ----- 00282 00897 00904 00905 00911 00912
$hEventLog                ----- 00444 00445 00446 00447 00448
$hWnd                     ----- 00575 00579 00581 00584 00596 00606 00615 00616 00617 00620 00623 00629 00630 00631 
                                00632
$hWndActive               ----- 00574 00598 00607 00612 00629
$hWndActivePid            ----- 00118 00630 00654
$i                        ----- 00506 00507 00508 00519 00520 00521 00551 00552 00553 00608 00609 00610 00611 00612 
                                00614 00615 00617 00619 00622 00826 00827 00828 00829
$iBytes                   ----- 00808 00810 00812 00814
$iDx                      ----- 00871 00872 00876
$iErr                     ----- 00852 00854
$iError                   ----- 00429 00431
$iExtended                ----- 00429 00431
$iFreeSpace               ----- 00820 00822 00829 00837 00849
$iFreeSpacePerc           ----- 00822 00823 00829 00837 00840 00850
$iIndex                   ----- 00809 00811 00814
$iIsAdmin                 ----- 00662 00663
$iKb                      ----- 00866 00867
$iResponse                ----- 00851 00853
$iState                   ----- 00505 00507 00508 00579 00596
$iTotalSpace              ----- 00821 00822 00829 00837 00849
$mLabels                  ----- 00875 00880
$mMap                     ----- 00870 00881 00982 00983 00985 00986 00988 00993 00995 00996 01001
$mMetrics                 ----- 00944 00945 00946 00947 00948 00950 00954 00955 00956 00957 00958 00959 00960 00961 
                                00963 00964 00965 00968 00969 00972 00973 00976 00977 00982
$mResult                  ----- 00874 00876 00877 00878 00879 00880 00881 00882 00886 00890 00891 00892
$nValue                   ----- 00870 00878
$oColItems                ----- 01036 01039 01040 01041
$oObjectItem              ----- 01041 01042 01043
$oWMIService              ----- 01036 01038 01039
$sDir                     ----- 00888 00889
$sDrive                   ----- 00888 00889
$sExtension               ----- 00888 00889
$sFileName                ----- 00888 00889 00891
$sFromAddress             ----- 00839 00851
$sFromName                ----- 00838 00851
$sLabel                   ----- 00818 00829 00837 00848
$sLabels                  ----- 00980 00989 00991 00993 00996 00998 00999 01001
$sLastName                ----- 00980 00984 01002
$sName                    ----- 00870 00876 00945 00946 00947 00948 00950 00968 00969 00972 00973 00976 00977 00983 
                                00984 00985 00986 01001 01002
$sSubject                 ----- 00840 00851
$sText                    ----- 00870 00879
$sTextDefault             ----- 00873 00879
$sToAddress               ----- 00837 00851
$sType                    ----- 00870 00877
$vLabel                   ----- 00992 00993
$vValue                   ----- 00429 00430
$vVar                     ----- 00429 00430 00431
0                         ----- 00076 00099 00276 00282 00285 00416 00425 00498 00499 00500 00501 00502 00503 00504 
                                00506 00508 00517 00519 00520 00521 00528 00551 00552 00553 00568 00569 00585 00587 
                                00589 00590 00594 00600 00601 00608 00609 00611 00614 00641 00646 00647 00648 00649 
                                00650 00651 00652 00653 00654 00656 00657 00658 00660 00663 00669 00670 00672 00673 
                                00674 00675 00676 00677 00678 00679 00680 00682 00683 00684 00685 00686 00687 00688 
                                00690 00691 00692 00693 00694 00695 00696 00697 00699 00700 00701 00702 00703 00704 
                                00705 00706 00707 00708 00709 00710 00712 00713 00714 00715 00716 00717 00718 00719 
                                00720 00721 00722 00723 00724 00725 00726 00728 00729 00730 00731 00756 00809 00826 
                                00827 00828 00829 00841 00853 00870 00871 00890 00898 00912 00963 01004 01026 01042 
                                01047
0x30                      ----- 01039
0x7FFFFFFFFFFFFFFF        ----- 00110
0x8000000000000000        ----- 00109
1                         ----- 00050 00068 00268 00269 00270 00275 00283 00368 00417 00422 00426 00496 00498 00506 
                                00507 00508 00517 00518 00519 00521 00528 00537 00551 00553 00586 00588 00590 00594 
                                00608 00612 00615 00670 00811 00824 00826 00827 00872 00913 00963 00979 00983 00998 
                                01004 01008 01013 01026 01030 01043 01047
10                        ----- 00279 00415 00420
100                       ----- 00542 00822
1023                      ----- 00810
1024                      ----- 00542 00812 00849 00867
14                        ----- 00788
15                        ----- 00098 00423 00588
15e3                      ----- 00095 00096 00417
16                        ----- 00372
174                       ----- 00587
1e3                       ----- 00536 00945 00954
2                         ----- 00268 00269 00270 00279 00369 00423 00499 00587 00590 00594 00610 00829 00849 00867 
                                01036
250                       ----- 00582
3                         ----- 00500 00520 00586 00588 00590 00594 00619 01007 01029
300                       ----- 00416
3000                      ----- 00830
30e3                      ----- 00422
32                        ----- 00373
4                         ----- 00370 00501 00622
42                        ----- 00414
5                         ----- 00097 00418 00419 00502 00518 00521 00550
500                       ----- 00425
54                        ----- 00586
57                        ----- 00585
5e3                       ----- 00385 00412
6                         ----- 00503 00521
60                        ----- 00097
60e3                      ----- 00418 00419 00420 00423
7                         ----- 00504 00521
8                         ----- 00371 00496
9                         ----- 00551 00826
@AppDataCommonDir         ----- 00682
@AppDataDir               ----- 00690
@AutoItExe                ----- 00677
@AutoItPID                ----- 00678
@AutoItVersion            ----- 00679
@AutoItX64                ----- 00680
@CPUArch                  ----- 00712
@CRLF                     ----- 00093 00436 00774 00854
@ComSpec                  ----- 00710
@CommonFilesDir           ----- 00706
@Compiled                 ----- 00385 00396 00412 00481 00488 00672 00768
@ComputerName             ----- 00111 00211 00274 00440 00558 00560 00645 00721 00840 00843
@DesktopCommonDir         ----- 00683
@DesktopDepth             ----- 00730
@DesktopDir               ----- 00692
@DesktopHeight            ----- 00728
@DesktopRefresh           ----- 00731
@DesktopWidth             ----- 00729
@DocumentsCommonDir       ----- 00684
@FavoritesCommonDir       ----- 00685
@FavoritesDir             ----- 00694
@HomeDrive                ----- 00292 00302 00699 00818 00820 00821 00848
@HomePath                 ----- 00700
@HomeShare                ----- 00701
@IPAddress1               ----- 00645 00646 00723 00844 00947
@IPAddress2               ----- 00724 00845
@IPAddress3               ----- 00725 00846
@IPAddress4               ----- 00726 00847
@KBLayout                 ----- 00713
@LocalAppDataDir          ----- 00691
@LogonDNSDomain           ----- 00702
@LogonDomain              ----- 00703
@LogonServer              ----- 00704
@MDAY                     ----- 00543 00773 00788 00824 00825
@MIN                      ----- 00543
@MON                      ----- 00543 00773 00788 00824 00825
@MSEC                     ----- 00543
@MUILang                  ----- 00714
@MyDocumentsDir           ----- 00121 00693
@OSArch                   ----- 00715 00928
@OSBuild                  ----- 00719
@OSLang                   ----- 00716
@OSServicePack            ----- 00720
@OSType                   ----- 00717
@OSVersion                ----- 00718
@ProgramFilesDir          ----- 00126 00131 00136 00141 00705
@ProgramsCommonDir        ----- 00686
@ProgramsDir              ----- 00695
@SEC                      ----- 00543
@SW_HIDE                  ----- 00751
@SW_MAXIMIZE              ----- 00623
@SW_MINIMIZE              ----- 00596 00620
@ScriptDir                ----- 00158 00674
@ScriptFullPath           ----- 00112 00675
@ScriptName               ----- 00673
@StartMenuCommonDir       ----- 00687
@StartMenuDir             ----- 00696
@StartupCommonDir         ----- 00688
@SystemDir                ----- 00708
@TempDir                  ----- 00709
@UserName                 ----- 00440 00722 00946
@UserProfileDir           ----- 00264 00697
@WindowsDir               ----- 00707
@WorkingDir               ----- 00676
@YEAR                     ----- 00543 00773 00788 00824 00825
@error                    ----- 00429 00576 00625 00795 00852
@extended                 ----- 00429
#### ActiveWinTitle       00117
#### AkkDir               00158
#### AkkExists            00160
#### AkkFileName          00157
#### AkkNetDir            00163
#### AkkNetExists         00165
#### AkkNetFileName       00162
#### AkkNetPath           00164
#### AkkNetTime           00487
#### AkkPath              00159
#### AkkRootDir           00153
#### AkkRootExists        00155
#### AkkRootFileName      00152
#### AkkRootPath          00154
#### AkkTime              00486
#### AkkUpdaterDir        00168
#### AkkUpdaterExists     00170
#### AkkUpdaterFileName   00167
#### AkkUpdaterNetDir     00173
#### AkkUpdaterNetExists  00175
#### AkkUpdaterNetFileName  00172
#### AkkUpdaterNetPath    00174
#### AkkUpdaterNetTime    00480
#### AkkUpdaterPath       00169
#### AkkUpdaterTime       00479
#### AkkVersion           00112
And                       ----- 00423 00452 00455 00458 00481 00488 00520 00591 00752 00760 00768 00827 00896 00949
Array                     ----- 00042
#### ArrayDelimItem       00267
ByRef                     ----- 00429 00635 00870
#### ComputerName         00111
Const                     ----- 00095 00096 00097 00098 00109 00110 00111 00112 00113 00114 00120 00121 00122 00123 
                                00125 00126 00127 00128 00130 00131 00132 00133 00135 00136 00137 00138 00140 00141 
                                00142 00143 00146 00147 00149 00150 00152 00153 00154 00155 00157 00158 00159 00160 
                                00162 00163 00164 00165 00167 00168 00169 00172 00173 00174 00175 00177 00178 00179 
                                00180 00182 00183 00184 00187 00188 00189 00190 00192 00193 00194 00197 00198 00199 
                                00200 00205 00211 00217 00222 00227 00228 00229 00230 00232 00233 00234 00235 00237 
                                00238 00239 00240 00242 00243 00244 00245 00247 00248 00249 00250 00252 00253 00254 
                                00255 00258 00259 00260 00261 00264 00265 00267 00274 00275 00276 00291 00292 00293 
                                00296 00297 00298 00299 00301 00302 00303 00306 00307 00308 00309 00311 00312 00313 
                                00314 00316 00344 00346 00347 00348 00351 00352 00353 00354 00359 00368 00369 00370 
                                00371 00372 00373 00774 00794 00818 00820 00821 00822 00854 00873
Count                     ----- 00890 00968 00972 00976
#### CurrentFile          01025
#### Cycle                00099
Date                      ----- 00043
Debug                     ----- 00041
Default                   ----- 00590 00596 00620 00623 00794
#### Delay                00635
#### Dest                 00543
#### DestDir              00790
#### Diff                 00636
Dir                       00751 00759
#### Domain               00759
#### DownloadsDir         00264
#### DownloadsOldDir      00265
Else                      ----- 00578 00907 00935
EndFunc                   ----- 00432 00441 00449 00492 00530 00546 00563 00571 00602 00633 00642 00732 00740 00749 
                                00757 00764 00785 00789 00801 00805 00815 00835 00863 00868 00883 00893 00900 00916 
                                00924 00940 01010 01032 01048
EndIf                     ----- 00424 00454 00457 00460 00468 00477 00484 00491 00526 00539 00545 00556 00561 00562 
                                00570 00583 00595 00597 00613 00618 00621 00624 00626 00627 00640 00737 00755 00763 
                                00783 00784 00799 00800 00831 00833 00834 00862 00899 00910 00914 00915 00922 00923 
                                00937 00938 00951 00987 00997 01000 01009 01031 01046
Enum                      ----- 00379
EventLog                  ----- 00037
#### EventLogCount        00288
#### EventLogFull         00287
#### EventLogOldest       00289
#### ExactFileDir         00292
#### ExactFileExists      00294
#### ExactFileFileName    00291
#### ExactFileNetDir      00297
#### ExactFileNetExists   00299
#### ExactFileNetFileName  00296
#### ExactFileNetPath     00298
#### ExactFilePath        00293
Exists                    00751 00759
False                     ----- 00113 00114
File                      ----- 00044
FileName                  00734 00891 00969 00973 00977
#### FilePath             01027
#### FolderList           00794
For                       ----- 00506 00519 00551 00608 00796 00826 00982 00992 01041
Func                      ----- 00429 00434 00443 00451 00494 00532 00548 00565 00573 00604 00635 00644 00734 00743 
                                00751 00759 00767 00787 00790 00803 00808 00817 00837 00866 00870 00885 00895 00902 
                                00918 00926 00942 01012 01035
Global                    ----- 00095 00096 00097 00098 00099 00100 00101 00102 00103 00104 00105 00106 00107 00108 
                                00109 00110 00111 00112 00113 00114 00115 00116 00117 00118 00120 00121 00122 00123 
                                00125 00126 00127 00128 00130 00131 00132 00133 00135 00136 00137 00138 00140 00141 
                                00142 00143 00146 00147 00149 00150 00152 00153 00154 00155 00157 00158 00159 00160 
                                00162 00163 00164 00165 00167 00168 00169 00170 00172 00173 00174 00175 00177 00178 
                                00179 00180 00182 00183 00184 00185 00187 00188 00189 00190 00192 00193 00194 00195 
                                00197 00198 00199 00200 00202 00204 00205 00206 00207 00210 00211 00212 00213 00216 
                                00217 00218 00219 00221 00222 00223 00224 00227 00228 00229 00230 00232 00233 00234 
                                00235 00237 00238 00239 00240 00242 00243 00244 00245 00247 00248 00249 00250 00252 
                                00253 00254 00255 00258 00259 00260 00261 00264 00265 00267 00268 00269 00270 00273 
                                00274 00275 00276 00278 00279 00282 00283 00284 00285 00287 00288 00289 00291 00292 
                                00293 00294 00296 00297 00298 00299 00301 00302 00303 00304 00306 00307 00308 00309 
                                00311 00312 00313 00314 00316 00344 00346 00347 00348 00349 00351 00352 00353 00354 
                                00357 00359 00368 00369 00370 00371 00372 00373 00379
IdentifyingNumber         ----- 01043
#### IdleTime             00285
If                        ----- 00208 00214 00225 00256 00262 00355 00385 00396 00412 00417 00418 00419 00420 00422 
                                00423 00452 00455 00458 00464 00472 00481 00488 00520 00536 00542 00549 00557 00559 
                                00567 00576 00577 00580 00591 00596 00598 00609 00610 00614 00616 00619 00622 00625 
                                00637 00735 00752 00760 00768 00781 00791 00792 00795 00823 00827 00844 00845 00846 
                                00847 00853 00896 00903 00904 00905 00906 00919 00920 00931 00933 00939 00949 00984 
                                00990 00995 00998 01007 01029 01040
In                        ----- 00796 00982 00992 01041
Inet                      ----- 00045
#### IniGlobalDir         00183
#### IniGlobalExDir       00193
#### IniGlobalExExists    00195
#### IniGlobalExFileName  00192
#### IniGlobalExNetDir    00198
#### IniGlobalExNetExists  00200
#### IniGlobalExNetFileName  00197
#### IniGlobalExNetPath   00199
#### IniGlobalExNetTime   00471
#### IniGlobalExPath      00194
#### IniGlobalExTime      00470
#### IniGlobalExists      00185
#### IniGlobalFileName    00182
#### IniGlobalNetDir      00188
#### IniGlobalNetExists   00190
#### IniGlobalNetFileName  00187
#### IniGlobalNetLogDir   00228
#### IniGlobalNetLogExists  00230
#### IniGlobalNetLogFileName  00227
#### IniGlobalNetLogInstanceDir  00238
#### IniGlobalNetLogInstanceExists  00240
#### IniGlobalNetLogInstanceFileName  00237
#### IniGlobalNetLogInstancePath  00239
#### IniGlobalNetLogPath  00229
#### IniGlobalNetPath     00189
#### IniGlobalNetTime     00463
#### IniGlobalPath        00184
#### IniGlobalTime        00462
#### IniLocalDir          00178
#### IniLocalExists       00180
#### IniLocalFileName     00177
#### IniLocalPath         00179
#### IntMax               00110
#### IntMin               00109
#### IsSectionAddedToKey  00734
#### KPSInfoDir           00126
#### KPSInfoExists        00128
#### KPSInfoFileName      00125
#### KPSInfoPath          00127
#### Key                  00734
Labels                    ----- 00880 00946 00947 00948 00969 00973 00977 00988 00993
LabelsRaw                 ----- 00950 00996
#### Lines                01013
#### List                 00605
#### ListStates           00496
#### ListVisble           00518
Local                     ----- 00444 00462 00463 00470 00471 00479 00480 00486 00487 00495 00496 00505 00518 00543 
                                00574 00575 00579 00584 00605 00606 00607 00636 00662 00668 00774 00794 00809 00818 
                                00820 00821 00822 00838 00839 00840 00841 00851 00852 00854 00871 00873 00874 00875 
                                00886 00887 00888 00928 00929 00930 00944 00945 00953 00967 00971 00975 00979 00980 
                                00981 01005 01013 01025 01027 01036
#### LogArchiveNetDir     00222
#### LogArchiveNetExists  00224
#### LogArchiveNetFileName  00221
#### LogArchiveNetPath    00223
#### LogDir               00205
#### LogExists            00207
#### LogFileID            00202
#### LogFileName          00204
#### LogGlobalNetDir      00217
#### LogGlobalNetExists   00219
#### LogGlobalNetFileName  00216
#### LogGlobalNetPath     00218
#### LogNetDir            00211
#### LogNetExists         00213
#### LogNetFileName       00210
#### LogNetPath           00212
#### LogPath              00206
#### LogScrapeDir         00243
#### LogScrapeExists      00245
#### LogScrapeFileName    00242
#### LogScrapeNetDir      00248
#### LogScrapeNetExists   00250
#### LogScrapeNetFileName  00247
#### LogScrapeNetPath     00249
#### LogScrapePath        00244
#### LogScreenCapDir      00253
#### LogScreenCapExists   00255
#### LogScreenCapFileName  00252
#### LogScreenCapNetDir   00259
#### LogScreenCapNetExists  00261
#### LogScreenCapNetFileName  00258
#### LogScreenCapNetPath  00260
#### LogScreenCapPath     00254
#### LogSpawnStatsNetDir  00233
#### LogSpawnStatsNetExists  00235
#### LogSpawnStatsNetFileName  00232
#### LogSpawnStatsNetPath  00234
#### LowSpaceThresholdPerc  00278
#### MEM_AVAILPAGEFILE    00379
#### MEM_AVAILPHYSRAM     00379
#### MEM_AVAILVIRTUAL     00379
#### MEM_LOAD             00379
#### MEM_TOTALPAGEFILE    00379
#### MEM_TOTALPHYSRAM     00379
#### MEM_TOTALVIRTUAL     00379
#### MacroAutoIt          00268
#### MacroDirectory       00269
#### MacroSystemInfo      00270
#### MailAddresses        00279
#### MetaProcessCountChrome  00967
#### MetaProcessCountFusionFX  00975
#### MetaProcessCountJavaw  00971
Misc                      ----- 00046
#### MsgBoxTimeout        00097
Name                      00751 00759 00876 00881 00882 00983 01042
#### NetPhoneClientDir    00141
#### NetPhoneClientExists  00143
#### NetPhoneClientFileName  00140
#### NetPhoneClientPath   00142
#### NetPhoneUser         00116
#### NetPhoneUserChecksum  00115
Next                      ----- 00516 00527 00554 00628 00798 00832 00994 01003 01044
Not                       ----- 00208 00214 00225 00256 00262 00355 00396 00452 00455 00458 00591 00752 00760 00792 
                                00795 00903 00919 00931 00939 00949 01007 01029
Or                        ----- 00931
#### Password             00759
Path                      00751 00759
#### PowerkatalogDir      00131
#### PowerkatalogExists   00133
#### PowerkatalogFileName  00130
#### PowerkatalogPath     00132
#### ProcessName          00885
#### PromScrapeTargetsDir  00352
#### PromScrapeTargetsExists  00354
#### PromScrapeTargetsFileName  00351
#### PromScrapeTargetsPath  00353
Return                    ----- 00431 00529 00632 00639 00641 00754 00756 00804 00814 00867 00882 00892 01045 01047
#### RootDir              00147
#### RootExists           00150
#### RootFileName         00146
#### RootPath             00149
#### SHDUpdaterDir        00136
#### SHDUpdaterExists     00138
#### SHDUpdaterFileName   00135
#### SHDUpdaterPath       00137
#### ScrapeComplete       00283
ScreenCapture             ----- 00035
#### ScreenCaptureWinActivate  00114
#### ScreenCaptureWnd     00113
#### Section              00734
#### ShowFlag             00751
#### SmtpMailEHLO         00274
#### SmtpMailFirst        00275
#### SmtpMailSmtpServer   00273
#### SmtpMailTrace        00276
#### SourceDir            00790
#### SourcePath           00928
#### SpawnDir             00121
#### SpawnExists          00123
#### SpawnFileName        00120
#### SpawnPath            00122
#### StartTimer           00100
Static                    ----- 00871
#### Static$iDx           00871
Step                      ----- 00551 00826
#### T1                   00095
#### T2                   00096
Text                      00434 00879 00985
Then                      ----- 00208 00214 00225 00256 00262 00355 00385 00396 00412 00416 00417 00418 00419 00420 
                                00422 00423 00425 00452 00455 00458 00464 00472 00481 00488 00520 00536 00542 00549 
                                00557 00559 00567 00576 00577 00580 00591 00596 00598 00609 00610 00614 00616 00619 
                                00622 00625 00637 00735 00752 00760 00768 00781 00791 00792 00795 00823 00824 00827 
                                00844 00845 00846 00847 00853 00896 00903 00904 00905 00906 00919 00920 00931 00933 
                                00939 00949 00984 00990 00995 00998 01007 01029 01040
#### Timer                00635
#### Timer1               00101
#### Timer2               00102
#### Timer3               00103
#### Timer4               00104
#### Timer5               00105
#### Timer6               00106
#### Timer7               00107
#### Timer8               00108
Timers                    ----- 00040
To                        ----- 00506 00519 00551 00608 00826
#### TrayTipTimeout       00098
True                      ----- 00794
Type                      ----- 00877 00986
#### UserName             00759
Value                     00734 00878 01001
WEnd                      ----- 00427 00813
#### WIN_STATE_ACTIVE     00371
#### WIN_STATE_ENABLED    00370
#### WIN_STATE_EXISTS     00368
#### WIN_STATE_MAXIMIZED  00373
#### WIN_STATE_MINIMIZED  00372
#### WIN_STATE_VISIBLE    00369
Warning                   00774 00854
While                     ----- 00414 00810
#### WmiExporter1PID      00284
#### WmiExporterCollectorTextfileDir  00344
#### WmiExporterCollectorsEnabled  00316
#### WmiExporterGlobalNetSetupTime  00930
#### WmiExporterLocalDir  00302
#### WmiExporterLocalExists  00304
#### WmiExporterLocalFileName  00301
#### WmiExporterLocalPath  00303
#### WmiExporterLocalTime  00929
#### WmiExporterMetadataArray  00979
#### WmiExporterMetadataArrayRet  01005
#### WmiExporterMetadataDir  00347
#### WmiExporterMetadataExists  00349
#### WmiExporterMetadataFileName  00346
#### WmiExporterMetadataPath  00348
#### WmiExporterMetadataString  00357
#### WmiExporterParams    00359
#### WmiExporterX32GlobalNetSetupDir  00307
#### WmiExporterX32GlobalNetSetupExists  00309
#### WmiExporterX32GlobalNetSetupFileName  00306
#### WmiExporterX32GlobalNetSetupPath  00308
#### WmiExporterX64GlobalNetSetupDir  00312
#### WmiExporterX64GlobalNetSetupExists  00314
#### WmiExporterX64GlobalNetSetupFileName  00311
#### WmiExporterX64GlobalNetSetupPath  00313
#### aArray               00809
#### aComputerSystemProduct  00668
#### aList                00495
#### aMapKeys             00981
#### aMemStats            00953
#### aPos                 00584
#### aProcessList         00887
#### aReturn              01036
#### asBody               00841
au3                       ----- 00035 00036 00037 00038 00039 00040 00041 00042 00043 00044 00045 00046
#### dieSiebenötigen     00774
#### hDownload            00282
#### hEventLog            00444
hWnd                      00575 00606
hWndActive                00574 00607
#### hWndActivePid        00118
#### iBytes               00808
#### iErr                 00852
#### iError               00429
#### iExtended            00429
iFreeSpace                00820 00837
iFreeSpacePerc            00822 00837
#### iIndex               00809
#### iIsAdmin             00662
#### iKb                  00866
#### iResponse            00851
iState                    00505 00579
iTotalSpace               00821 00837
ip_address                ----- 00947
#### kopierenSiediesebitteaneinenanderenOrt.'&@CRLF&'AlleDateienausdemOrdnerwurdenbereitsindenOrdnerverschoben.'&@CRLF&'DerOrdneristübereineVerknüpfunginzuerreichen.'&@CRLF&'AlleIhreDateiendieimOrdnerble  00774
#### mLabels              00875
#### mMap                 00870
#### mMetrics             00944
mResult                   00874 00886
#### nValue               00870
netphone_user             ----- 00948
#### oColItems            01036
#### oWMIService          01036
process                   ----- 00969 00973 00977
#### sDir                 00888
#### sDrive               00888
#### sExtension           00888
#### sFileName            00888
#### sFromAddress         00839
#### sFromName            00838
sLabel                    00818 00837
#### sLabels              00980
#### sLastName            00980
sName                     00870 00945
#### sSubject             00840
#### sText                00870
#### sTextDefault         00873
#### sToAddress           00837
#### sType                00870
udf\ArrayEx               ----- 00036
udf\Ini                   ----- 00038
udf\Map                   ----- 00039
username                  ----- 00946
#### vValue               00429
#### vVar                 00429
#### werdendemnächstunwiderruflichGELÖSCHT!'&@CRLF&'BittesichtenundsichernSieambestenjetztsofortIhreweiterhinbenötigtenDateien.'&@CRLF&'SollderOrdnerjetztgeöffnetwerden?'&@CRLF  00774
== Sort Func Names Within #regions =====================================================================
 --------------- Current sequence  ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000027   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000047   #Region - Options
0000000092   #EndRegion - Options
0000000094   #Region Globals 1
0000000144   #EndRegion Globals 1
0000000145   #Region Globals 2
0000000271   #EndRegion Globals 2
0000000272   #Region Globals SMTP
0000000280   #EndRegion Globals SMTP
0000000281   #Region Globals Prometheus WMI Exporter
0000000364   #EndRegion Globals Prometheus WMI Exporter
0000000365   #Region AutoItConstants
0000000375   #EndRegion AutoItConstants
0000000376   #Region MemoryConstants
0000000381   #EndRegion MemoryConstants
0000000382   #Region
0000000429   Func _SetVar(ByRef $vVar, $vValue, $iError = @error, $iExtended = @extended)
0000000432   EndFunc   ;==>_SetVar
0000000434   Func ConsoleLog($Text)
0000000441   EndFunc   ;==>ConsoleLog
0000000443   Func EventLog()
0000000449   EndFunc   ;==>EventLog
0000000451   Func GetGlobalConfig()
0000000492   EndFunc   ;==>GetGlobalConfig
0000000494   Func GetWinList()
0000000530   EndFunc   ;==>GetWinList
0000000532   Func ManageLogFile()
0000000546   EndFunc   ;==>ManageLogFile
0000000548   Func ReadGlobalConfig()
0000000563   EndFunc   ;==>ReadGlobalConfig
0000000565   Func ReadLocalConfig()
0000000571   EndFunc   ;==>ReadLocalConfig
0000000573   Func ScreenCaptureNetPhoneClient()
0000000602   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000604   Func ScreenCaptureWnd()
0000000633   EndFunc   ;==>ScreenCaptureWnd
0000000635   Func Timeout(ByRef $Timer, $Delay)
0000000642   EndFunc   ;==>Timeout
0000000644   Func WriteLogStartup()
0000000732   EndFunc   ;==>WriteLogStartup
0000000734   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000740   EndFunc   ;==>WriteLogStartupIni
0000000741   #EndRegion
0000000742   #Region CheckAndRunProc
0000000743   Func Check()
0000000749   EndFunc   ;==>Check
0000000751   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000757   EndFunc   ;==>CheckAndRunProc
0000000759   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000764   EndFunc   ;==>CheckAndRunProcAs
0000000765   #EndRegion CheckAndRunProc
0000000766   #Region CleaningDownloads
0000000767   Func CleaningDownloads()
0000000785   EndFunc   ;==>CleaningDownloads
0000000787   Func DownloadsNeedCleaning()
0000000789   EndFunc   ;==>DownloadsNeedCleaning
0000000790   Func FileDirMoveRec($SourceDir, $DestDir)
0000000801   EndFunc   ;==>FileDirMoveRec
0000000803   Func GetDownloadsLastCleaningDate()
0000000805   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000806   #EndRegion CleaningDownloads
0000000807   #Region FreeSpaceCheck
0000000808   Func ByteSuffix($iBytes)
0000000815   EndFunc   ;==>ByteSuffix
0000000817   Func CheckHomeDriveSpaceFree()
0000000835   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000837   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000863   EndFunc   ;==>SendMailLowSpace
0000000864   #EndRegion FreeSpaceCheck
0000000865   #Region WMI Exporter
0000000866   Func _FormatKbToGb($iKb)
0000000868   EndFunc   ;==>_FormatKbToGb
0000000870   Func _PrometheusNewDesc(ByRef $mMap, $sName, $sType, $nValue = 0, $sText = "")
0000000883   EndFunc   ;==>_PrometheusNewDesc
0000000885   Func MetaProcessCount($ProcessName)
0000000893   EndFunc   ;==>MetaProcessCount
0000000895   Func Scrape()
0000000900   EndFunc   ;==>Scrape
0000000902   Func ScrapeDownload()
0000000916   EndFunc   ;==>ScrapeDownload
0000000918   Func SetupExactFile()
0000000924   EndFunc   ;==>SetupExactFile
0000000926   Func SetupWmiExporter()
0000000940   EndFunc   ;==>SetupWmiExporter
0000000942   Func WriteMetaDataFile()
0000001010   EndFunc   ;==>WriteMetaDataFile
0000001012   Func WriteScrapeTargetFile()
0000001032   EndFunc   ;==>WriteScrapeTargetFile
0000001033   #EndRegion WMI Exporter
0000001034   #Region UDF
0000001035   Func _ComputerNameAndModel()
0000001048   EndFunc   ;==>_ComputerNameAndModel
0000001049   #EndRegion UDF
 --------------- New Sequence      ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000027   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000047   #Region - Options
0000000092   #EndRegion - Options
0000000094   #Region Globals 1
0000000144   #EndRegion Globals 1
0000000145   #Region Globals 2
0000000271   #EndRegion Globals 2
0000000272   #Region Globals SMTP
0000000280   #EndRegion Globals SMTP
0000000281   #Region Globals Prometheus WMI Exporter
0000000364   #EndRegion Globals Prometheus WMI Exporter
0000000365   #Region AutoItConstants
0000000375   #EndRegion AutoItConstants
0000000376   #Region MemoryConstants
0000000381   #EndRegion MemoryConstants
0000000382   #Region
0000000429   Func _SetVar(ByRef $vVar, $vValue, $iError = @error, $iExtended = @extended)
0000000432   EndFunc   ;==>_SetVar
0000000434   Func ConsoleLog($Text)
0000000441   EndFunc   ;==>ConsoleLog
0000000443   Func EventLog()
0000000449   EndFunc   ;==>EventLog
0000000451   Func GetGlobalConfig()
0000000492   EndFunc   ;==>GetGlobalConfig
0000000494   Func GetWinList()
0000000530   EndFunc   ;==>GetWinList
0000000532   Func ManageLogFile()
0000000546   EndFunc   ;==>ManageLogFile
0000000548   Func ReadGlobalConfig()
0000000563   EndFunc   ;==>ReadGlobalConfig
0000000565   Func ReadLocalConfig()
0000000571   EndFunc   ;==>ReadLocalConfig
0000000573   Func ScreenCaptureNetPhoneClient()
0000000602   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000604   Func ScreenCaptureWnd()
0000000633   EndFunc   ;==>ScreenCaptureWnd
0000000635   Func Timeout(ByRef $Timer, $Delay)
0000000642   EndFunc   ;==>Timeout
0000000644   Func WriteLogStartup()
0000000732   EndFunc   ;==>WriteLogStartup
0000000734   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000740   EndFunc   ;==>WriteLogStartupIni
0000000741   #EndRegion
0000000742   #Region CheckAndRunProc
0000000743   Func Check()
0000000749   EndFunc   ;==>Check
0000000751   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000757   EndFunc   ;==>CheckAndRunProc
0000000759   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000764   EndFunc   ;==>CheckAndRunProcAs
0000000765   #EndRegion CheckAndRunProc
0000000766   #Region CleaningDownloads
0000000767   Func CleaningDownloads()
0000000785   EndFunc   ;==>CleaningDownloads
0000000787   Func DownloadsNeedCleaning()
0000000789   EndFunc   ;==>DownloadsNeedCleaning
0000000790   Func FileDirMoveRec($SourceDir, $DestDir)
0000000801   EndFunc   ;==>FileDirMoveRec
0000000803   Func GetDownloadsLastCleaningDate()
0000000805   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000806   #EndRegion CleaningDownloads
0000000807   #Region FreeSpaceCheck
0000000808   Func ByteSuffix($iBytes)
0000000815   EndFunc   ;==>ByteSuffix
0000000817   Func CheckHomeDriveSpaceFree()
0000000835   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000837   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000863   EndFunc   ;==>SendMailLowSpace
0000000864   #EndRegion FreeSpaceCheck
0000000865   #Region WMI Exporter
0000000866   Func _FormatKbToGb($iKb)
0000000868   EndFunc   ;==>_FormatKbToGb
0000000870   Func _PrometheusNewDesc(ByRef $mMap, $sName, $sType, $nValue = 0, $sText = "")
0000000883   EndFunc   ;==>_PrometheusNewDesc
0000000885   Func MetaProcessCount($ProcessName)
0000000893   EndFunc   ;==>MetaProcessCount
0000000895   Func Scrape()
0000000900   EndFunc   ;==>Scrape
0000000902   Func ScrapeDownload()
0000000916   EndFunc   ;==>ScrapeDownload
0000000918   Func SetupExactFile()
0000000924   EndFunc   ;==>SetupExactFile
0000000926   Func SetupWmiExporter()
0000000940   EndFunc   ;==>SetupWmiExporter
0000000942   Func WriteMetaDataFile()
0000001010   EndFunc   ;==>WriteMetaDataFile
0000001012   Func WriteScrapeTargetFile()
0000001032   EndFunc   ;==>WriteScrapeTargetFile
0000001033   #EndRegion WMI Exporter
0000001034   #Region UDF
0000001035   Func _ComputerNameAndModel()
0000001048   EndFunc   ;==>_ComputerNameAndModel
0000001049   #EndRegion UDF
== END Sort Func Names Within #Region - #EndRegion =====================================================

