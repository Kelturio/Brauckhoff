========================================================================================================
===  Tidy report for :C:\Users\bauer\Documents\GitHub\Brauckhoff\src\akk.au3
========================================================================================================

00001    #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_Icon=icons\MyAutoIt3_Green.ico
00003    #AutoIt3Wrapper_Outfile=..\bin\akk.exe
00004    #AutoIt3Wrapper_Res_Comment=Hallo Werner!
00005    #AutoIt3Wrapper_Res_Description=Akk Brauckhoff Bot
00006    #AutoIt3Wrapper_Res_Fileversion=1.0.0.105
00007    #AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
00008    #AutoIt3Wrapper_Res_ProductName=Akk Brauckhoff Bot
00009    #AutoIt3Wrapper_Res_CompanyName=Sliph Co.
00010    #AutoIt3Wrapper_Res_LegalCopyright=Searinox
00011    #AutoIt3Wrapper_Res_LegalTradeMarks=Akk
00012    #AutoIt3Wrapper_Res_SaveSource=y
00013    #AutoIt3Wrapper_Res_Language=1031
00014    #AutoIt3Wrapper_Res_Field=Made By|Searinox
00015    #AutoIt3Wrapper_Run_AU3Check=n
00016    #AutoIt3Wrapper_AU3Check_Stop_OnWarning=y
00017    #AutoIt3Wrapper_AU3Check_Parameters=-d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -v 1 -v 3
00018    #AutoIt3Wrapper_Run_Before=call "..\compile\before.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00019    #AutoIt3Wrapper_Run_After=call "..\compile\after.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00020    #AutoIt3Wrapper_Run_Tidy=y
00021    #Tidy_Parameters=/tc 4 /gd /reel /sci 9 /kv 0 /bdir "tidy\bdir\" /sf
00022    #AutoIt3Wrapper_Run_Au3Stripper=y
00023    #Au3Stripper_Parameters=/tl /debug /pe /mi=99 /rm /rsln
00024    #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
00025    #cs ----------------------------------------------------------------------------
00026       
00027    #ce ----------------------------------------------------------------------------
00028    #include <AutoItConstants.au3>
00029    #include <MsgBoxConstants.au3>
00030    #include <TrayConstants.au3>
00031    #include <FileConstants.au3>
00032    #include <ScreenCapture.au3>
00033    #include <EventLog.au3>
00034    #include <Timers.au3>
00035    #include <Debug.au3>
00036    #include <Array.au3>
00037    #include <File.au3>
00038    #include <Misc.au3>
00039    #include <Date.au3>
00040    #include <Inet.au3>
00041    #Region - Options
00042    ;~ Opt('CaretCoordMode', 0)				; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.
00043    ;~ Opt('ExpandEnvStrings', 1)			; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).
00044    Opt('ExpandVarStrings', 1)            ; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).
00045    ;~ Opt('FtpBinaryMode', 0)				; 1 = Binary transfer, 0 = ASCII transfer.
00046    ;~ Opt('GUICloseOnESC', 0)				; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).
00047    ; 										  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.
00048    ;~ Opt('GUICoordMode', 2)				; 1 = Absolute coordinates still relative to the dialog box.
00049    ; 										  0 = Relative position to the start of the last control (Upper left corner).
00050    ; 										  2 = Cell positionining relative to current cell.
00051    ;~ Opt('GUIDataSeparatorChar', '')		; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is ''.
00052    ;~ Opt('GUIEventOptions', 1)			; 0 = Windows behavior on click on Minimize, Restore and Maximize.
00053    ;										  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.
00054    ;										  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.
00055    ;										  3 = Combined mode of 1 & 2.
00056    ;~ Opt('GUIOnEventMode', 1)				; 0 = Disable, 1 = Enable.
00057    ;~ Opt('GUIResizeMode', 1)				; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).
00058    ;~ Opt('MouseClickDelay', 10)			; ? = 10 milliseconds by default.
00059    ;~ Opt('MouseClickDownDelay', 10)		; ? = 10 milliseconds by default.
00060    ;~ Opt('MouseClickDragDelay', 250)		; ? = 250 milliseconds by default.
00061    ;~ Opt('MouseCoordMode', 0)				; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.
00062    Opt('MustDeclareVars', 1)            ; 0 = No, 1 = Require pre-declare.
00063    ;~ Opt('OnExitFunc', '')				; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).
00064    ;~ Opt('PixelCoordMode', 2)                ; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.
00065    ;~ Opt('SendAttachMode', 1)				; 0 = Don't attach, 1 = Attach.
00066    ;~ Opt('SendCapslockMode', 0)			; 1 = Store and restore, 0 = Don't store / restore.
00067    ;~ Opt('SendKeyDelay', 5)				; ? = 5 milliseconds by default.
00068    ;~ Opt('SendKeyDownDelay', 1)			; ? = 1 millisecond by default.
00069    ;~ Opt('TCPTimeout', 100)				; ? = 100 milliseconds by default.
00070    Opt('TrayAutoPause', 0)                ; 1 = AutoPausing is On, 0 = AutoPausing is Off.
00071    ;~ Opt('TrayIconDebug', 1)				; 0 = No info, 1 = Debug line info.
00072    ;~ Opt('TrayIconHide', 1)				; 0 = Show, 1 = Hide.
00073    ;~ Opt('TrayMenuMode', 1)				; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,
00074    ;											user created checked items will automatically unchecked, if you double click the tray
00075    ;											icon then the controlid is returned which has the "Default"-style.
00076    ;										  1 = No default menu.
00077    ;										  2 = User created checked items will not automatically unchecked if you click it.
00078    ;										  4 = Don't return the menuitemID which has the "default"-style in
00079    ;											the main contextmenu if you double click the tray icon.
00080    ;~ Opt('TrayOnEventMode', 1)			; 0 = disable, 1 = enable.
00081    ;~ Opt('WinDetectHiddenText', 1)		; 0 = Don't detect, 1=Do detect.
00082    ;~ Opt('WinSearchChildren', 1)			; 0 = No, 1 = Search children also.
00083    ;~ Opt('WinTextMatchMode', 4)			; 1 = Complete / Slow mode, 2 = Quick mode.
00084    ;~ Opt('WinTitleMatchMode', 4)			; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.
00085    ;~ Opt('WinWaitDelay', 250)				; ? = 250 milliseconds by default.
00086    #EndRegion - Options
00087    ConsoleWrite(@CRLF)
00088    #Region Globals 1
00089    Global Const $T1 = 15e3
00090    Global Const $T2 = 15e3
00091    Global Const $MsgBoxTimeout = 60 * 5
00092    Global Const $TrayTipTimeout = 15
00093    Global $Cycle = 0
00094    Global $StartTimer = TimerInit()
00095    Global $Timer1 = $StartTimer
00096    Global $Timer2 = $StartTimer
00097    Global $Timer3 = $StartTimer
00098    Global $Timer4 = $StartTimer
00099    Global $Timer5 = $StartTimer
00100    Global $Timer6 = $StartTimer
00101    Global $Timer7 = $StartTimer
00102    Global $Timer8 = $StartTimer
00103    Global Const $IntMin = 0x8000000000000000
00104    Global Const $IntMax = 0x7FFFFFFFFFFFFFFF
00105    Global Const $ComputerName = StringReplace(StringFormat("%-16s", @ComputerName), " ", ".")
00106    Global Const $AkkVersion = FileGetVersion(@ScriptFullPath)
00107    Global Const $ScreenCaptureWnd = False
00108    Global Const $ScreenCaptureWinActivate = False
00109    Global $NetPhoneUserChecksum = ""
00110    Global $NetPhoneUser
00111    Global $ActiveWinTitle
00112    Global $hWndActivePid
00113    
00114    Global Const $SpawnFileName = "ShadowSpawn.exe"
00115    Global Const $SpawnDir = @MyDocumentsDir & "\Isopedia GmbH\ShadowSpawn\"
00116    Global Const $SpawnPath = $SpawnDir & $SpawnFileName
00117    Global Const $SpawnExists = FileExists($SpawnPath)
00118    
00119    Global Const $KPSInfoFileName = "KPSInfo.exe"
00120    Global Const $KPSInfoDir = @ProgramFilesDir & "\KPS designstudio\KPSInfo\"
00121    Global Const $KPSInfoPath = $KPSInfoDir & $KPSInfoFileName
00122    Global Const $KPSInfoExists = FileExists($KPSInfoPath)
00123    
00124    Global Const $PowerkatalogFileName = "Powerkatalog-Schnittstelle.exe"
00125    Global Const $PowerkatalogDir = @ProgramFilesDir & "\KPS designstudio\Powerkatalog-Schnittstelle\"
00126    Global Const $PowerkatalogPath = $PowerkatalogDir & $PowerkatalogFileName
00127    Global Const $PowerkatalogExists = FileExists($PowerkatalogPath)
00128    
00129    Global Const $SHDUpdaterFileName = "SHDUpdater_min.exe"
00130    Global Const $SHDUpdaterDir = @ProgramFilesDir & "\SHDUpdater\"
00131    Global Const $SHDUpdaterPath = $SHDUpdaterDir & $SHDUpdaterFileName
00132    Global Const $SHDUpdaterExists = FileExists($SHDUpdaterPath)
00133    
00134    Global Const $NetPhoneClientFileName = "NetPhone Client.exe"
00135    Global Const $NetPhoneClientDir = @ProgramFilesDir & "\NetPhone Client\"
00136    Global Const $NetPhoneClientPath = $NetPhoneClientDir & $NetPhoneClientFileName
00137    Global Const $NetPhoneClientExists = FileExists($NetPhoneClientPath)
00138    #EndRegion Globals 1
00139    #Region Globals 2
00140    Global Const $RootFileName = ""
00141    Global Const $RootDir = "\\172.16.128.4\edv\Gerrit\"
00142    Global Const $RootPath = $RootDir & $RootFileName
00143    Global Const $RootExists = FileExists($RootPath)
00144    
00145    Global Const $AkkRootFileName = ""
00146    Global Const $AkkRootDir = $RootDir & "akk\"
00147    Global Const $AkkRootPath = $AkkRootDir & $AkkRootFileName
00148    Global Const $AkkRootExists = FileExists($AkkRootPath)
00149    
00150    Global Const $AkkFileName = "akk.exe"
00151    Global Const $AkkDir = @ScriptDir & "\"
00152    Global Const $AkkPath = $AkkDir & $AkkFileName
00153    Global Const $AkkExists = FileExists($AkkPath)
00154    
00155    Global Const $AkkNetFileName = $AkkFileName
00156    Global Const $AkkNetDir = $RootDir
00157    Global Const $AkkNetPath = $AkkNetDir & $AkkNetFileName
00158    Global Const $AkkNetExists = FileExists($AkkNetPath)
00159    
00160    Global Const $AkkUpdaterFileName = "akkUpdater.exe"
00161    Global Const $AkkUpdaterDir = $AkkDir
00162    Global Const $AkkUpdaterPath = $AkkUpdaterDir & $AkkUpdaterFileName
00163    Global $AkkUpdaterExists = FileExists($AkkUpdaterPath)
00164    
00165    Global Const $AkkUpdaterNetFileName = $AkkUpdaterFileName
00166    Global Const $AkkUpdaterNetDir = $RootDir
00167    Global Const $AkkUpdaterNetPath = $AkkUpdaterNetDir & $AkkUpdaterNetFileName
00168    Global Const $AkkUpdaterNetExists = FileExists($AkkUpdaterNetPath)
00169    
00170    Global Const $IniLocalFileName = "akk.ini"
00171    Global Const $IniLocalDir = $AkkDir
00172    Global Const $IniLocalPath = $IniLocalDir & $IniLocalFileName
00173    Global Const $IniLocalExists = FileExists($IniLocalPath)
00174    
00175    Global Const $IniGlobalFileName = "akkGlobalConfig.ini"
00176    Global Const $IniGlobalDir = $AkkDir
00177    Global Const $IniGlobalPath = $IniGlobalDir & $IniGlobalFileName
00178    Global $IniGlobalExists = FileExists($IniGlobalPath)
00179    
00180    Global Const $IniGlobalNetFileName = $IniGlobalFileName
00181    Global Const $IniGlobalNetDir = $AkkRootDir
00182    Global Const $IniGlobalNetPath = $IniGlobalNetDir & $IniGlobalNetFileName
00183    Global Const $IniGlobalNetExists = FileExists($IniGlobalNetPath)
00184    
00185    Global Const $IniGlobalExFileName = "akkGlobalConfigExtended.ini"
00186    Global Const $IniGlobalExDir = $IniGlobalDir
00187    Global Const $IniGlobalExPath = $IniGlobalExDir & $IniGlobalExFileName
00188    Global $IniGlobalExExists = FileExists($IniGlobalExPath)
00189    
00190    Global Const $IniGlobalExNetFileName = $IniGlobalExFileName
00191    Global Const $IniGlobalExNetDir = $AkkRootDir
00192    Global Const $IniGlobalExNetPath = $IniGlobalExNetDir & $IniGlobalExNetFileName
00193    Global Const $IniGlobalExNetExists = FileExists($IniGlobalExNetPath)
00194    
00195    Global $LogFileID
00196    
00197    Global $LogFileName = ""
00198    Global Const $LogDir = $AkkDir & "log\"
00199    Global $LogPath = $LogDir & $LogFileName
00200    Global $LogExists = FileExists($LogPath)
00201    If Not FileExists($LogDir) Then DirCreate($LogDir)
00202    
00203    Global $LogNetFileName = ""
00204    Global Const $LogNetDir = $AkkRootDir & "log\" & @ComputerName & "\"
00205    Global $LogNetPath = $LogNetDir & $LogNetFileName
00206    Global $LogNetExists = FileExists($LogNetPath)
00207    If Not FileExists($LogNetDir) Then DirCreate($LogNetDir)
00208    
00209    Global $LogGlobalNetFileName = "akkGlobal.log"
00210    Global Const $LogGlobalNetDir = $AkkRootDir & "log\"
00211    Global $LogGlobalNetPath = $LogGlobalNetDir & $LogGlobalNetFileName
00212    Global $LogGlobalNetExists = FileExists($LogGlobalNetPath)
00213    
00214    Global $LogArchiveNetFileName = ""
00215    Global Const $LogArchiveNetDir = $AkkRootDir & "log\_archive\"
00216    Global $LogArchiveNetPath = $LogArchiveNetDir & $LogArchiveNetFileName
00217    Global $LogArchiveNetExists = FileExists($LogArchiveNetPath)
00218    If Not FileExists($LogArchiveNetDir) Then DirCreate($LogArchiveNetDir)
00219    
00220    Global Const $IniGlobalNetLogFileName = "akkGlobal.ini"
00221    Global Const $IniGlobalNetLogDir = $AkkRootDir & "log\"
00222    Global Const $IniGlobalNetLogPath = $IniGlobalNetLogDir & $IniGlobalNetLogFileName
00223    Global Const $IniGlobalNetLogExists = FileExists($IniGlobalNetLogPath)
00224    
00225    Global Const $LogSpawnStatsNetFileName = "akkGlobalSpawnStats.ini"
00226    Global Const $LogSpawnStatsNetDir = $AkkRootDir & "log\"
00227    Global Const $LogSpawnStatsNetPath = $LogSpawnStatsNetDir & $LogSpawnStatsNetFileName
00228    Global Const $LogSpawnStatsNetExists = FileExists($LogSpawnStatsNetPath)
00229    
00230    Global Const $IniGlobalNetLogInstanceFileName = "akkMacro.ini"
00231    Global Const $IniGlobalNetLogInstanceDir = $LogNetDir
00232    Global Const $IniGlobalNetLogInstancePath = $IniGlobalNetLogInstanceDir & $IniGlobalNetLogInstanceFileName
00233    Global Const $IniGlobalNetLogInstanceExists = FileExists($IniGlobalNetLogInstancePath)
00234    
00235    Global Const $LogScrapeFileName = "scrape.prom"
00236    Global Const $LogScrapeDir = $AkkDir & "log\"
00237    Global Const $LogScrapePath = $LogScrapeDir & $LogScrapeFileName
00238    Global Const $LogScrapeExists = FileExists($LogScrapePath)
00239    
00240    Global Const $LogScrapeNetFileName = "scrape.prom"
00241    Global Const $LogScrapeNetDir = $LogNetDir
00242    Global Const $LogScrapeNetPath = $LogScrapeNetDir & $LogScrapeNetFileName
00243    Global Const $LogScrapeNetExists = FileExists($LogScrapeNetPath)
00244    
00245    Global Const $LogScreenCapFileName = ""
00246    Global Const $LogScreenCapDir = $AkkDir & "log\sc\"
00247    Global Const $LogScreenCapPath = $LogScreenCapDir & $LogScreenCapFileName
00248    Global Const $LogScreenCapExists = FileExists($LogScreenCapPath)
00249    If Not FileExists($LogScreenCapDir) Then DirCreate($LogScreenCapDir)
00250    
00251    Global Const $LogScreenCapNetFileName = ""
00252    Global Const $LogScreenCapNetDir = $AkkRootDir & "log\_sc\NetPhoneUser\"
00253    Global Const $LogScreenCapNetPath = $LogScreenCapNetDir & $LogScreenCapNetFileName
00254    Global Const $LogScreenCapNetExists = FileExists($LogScreenCapNetPath)
00255    If Not FileExists($LogScreenCapNetDir) Then DirCreate($LogScreenCapNetDir)
00256    
00257    Global Const $DownloadsDir = @UserProfileDir & "\Downloads"
00258    Global Const $DownloadsOldDir = $DownloadsDir & " alt"
00259    
00260    Global Const $ArrayDelimItem = "|"
00261    Global $MacroAutoIt[1][2]
00262    Global $MacroDirectory[1][2]
00263    Global $MacroSystemInfo[1][2]
00264    #EndRegion Globals 2
00265    #Region Globals SMTP
00266    Global $SmtpMailSmtpServer = ""
00267    Global Const $SmtpMailEHLO = @ComputerName
00268    Global Const $SmtpMailFirst = -1
00269    Global Const $SmtpMailTrace = 0
00270    
00271    Global $LowSpaceThresholdPerc
00272    Global $MailAddresses[10][2]
00273    #EndRegion Globals SMTP
00274    #Region Globals Prometheus WMI Exporter
00275    Global $hDownload = 0
00276    Global $ScrapeComplete = 1
00277    Global $WmiExporter1PID
00278    Global $IdleTime = 0
00279    
00280    Global $EventLogFull
00281    Global $EventLogCount
00282    Global $EventLogOldest
00283    
00284    Global Const $ExactFileFileName = "exf.exe"
00285    Global Const $ExactFileDir = @HomeDrive & "\Brauckhoff\akk\" ;@SCRIPTDIR?
00286    Global Const $ExactFilePath = $ExactFileDir & $ExactFileFileName
00287    Global $ExactFileExists = FileExists($ExactFilePath)
00288    
00289    Global Const $ExactFileNetFileName = $ExactFileFileName
00290    Global Const $ExactFileNetDir = $AkkRootDir
00291    Global Const $ExactFileNetPath = $ExactFileNetDir & $ExactFileNetFileName
00292    Global Const $ExactFileNetExists = FileExists($ExactFileNetPath)
00293    
00294    Global Const $WmiExporterLocalFileName = "wmi_exporter.exe"
00295    Global Const $WmiExporterLocalDir = @HomeDrive & "\Brauckhoff\wmi_exporter\" ;@SCRIPTDIR?
00296    Global Const $WmiExporterLocalPath = $WmiExporterLocalDir & $WmiExporterLocalFileName
00297    Global $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00298    
00299    Global Const $WmiExporterX32GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-386.exe"
00300    Global Const $WmiExporterX32GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00301    Global Const $WmiExporterX32GlobalNetSetupPath = $WmiExporterX32GlobalNetSetupDir & $WmiExporterX32GlobalNetSetupFileName
00302    Global Const $WmiExporterX32GlobalNetSetupExists = FileExists($WmiExporterX32GlobalNetSetupPath)
00303    
00304    Global Const $WmiExporterX64GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-amd64.exe"
00305    Global Const $WmiExporterX64GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00306    Global Const $WmiExporterX64GlobalNetSetupPath = $WmiExporterX64GlobalNetSetupDir & $WmiExporterX64GlobalNetSetupFileName
00307    Global Const $WmiExporterX64GlobalNetSetupExists = FileExists($WmiExporterX64GlobalNetSetupPath)
00308    
00309    Global Const $WmiExporterCollectorsEnabled = "cs,logical_disk,memory,net,os,process,service,system,textfile"
00310    ;~          & "" _ ;~ & "ad" _ ; Active Directory Domain Services
00311    ;~          & "" _ ;~ & ",cpu" _ ; CPU usage
00312    ;~          & "cs" _ ; "Computer System" metrics (system properties, num cpus/total memory)
00313    ;~          & "" _ ;~ & ",dns" _ ; DNS Server
00314    ;~          & "" _ ;~ & ",hyperv" _ ; Hyper-V hosts
00315    ;~          & "" _ ;~ & ",iis" _ ; IIS sites and applications
00316    ;~          & ",logical_disk" _ ; Logical disks, disk I/O
00317    ;~          & ",memory" _ ; Memory usage metrics
00318    ;~          & "" _ ;~ & ",msmq" _ ; MSMQ queues
00319    ;~          & "" _ ;~ & ",mssql" _ ; SQL Server Performance Objects metrics
00320    ;~          & "" _ ;~ & ",netframework_clrexceptions" _ ; .NET Framework CLR Exceptions
00321    ;~          & "" _ ;~ & ",netframework_clrinterop" _ ; .NET Framework Interop Metrics
00322    ;~          & "" _ ;~ & ",netframework_clrjit" _ ; .NET Framework JIT metrics
00323    ;~          & "" _ ;~ & ",netframework_clrloading" _ ; .NET Framework CLR Loading metrics
00324    ;~          & "" _ ;~ & ",netframework_clrlocksandthreads" _ ; .NET Framework locks and metrics threads
00325    ;~          & "" _ ;~ & ",netframework_clrmemory" _ ; .NET Framework Memory metrics
00326    ;~          & "" _ ;~ & ",netframework_clrremoting" _ ; .NET Framework Remoting metrics
00327    ;~          & "" _ ;~ & ",netframework_clrsecurity" _ ; .NET Framework Security Check metrics
00328    ;~          & ",net" _ ; Network interface I/O
00329    ;~          & ",os" _ ; OS metrics (memory, processes, users)
00330    ;~          & ",process" _ ; Per-process metrics
00331    ;~          & ",service" _ ; Service state metrics
00332    ;~          & ",system" _ ; System calls
00333    ;~          & "" _ ;~ & ",tcp" _ ; TCP connections
00334    ;~          & ",textfile" _ ; Read prometheus metrics from a text file
00335    ;~          & "" _ ;~ & ",vmware" ; Performance counters installed by the Vmware Guest agent
00336    
00337    Global Const $WmiExporterCollectorTextfileDir = $WmiExporterLocalDir & "textfile_inputs\"
00338    
00339    Global Const $WmiExporterMetadataFileName = "metadata.prom"
00340    Global Const $WmiExporterMetadataDir = $WmiExporterCollectorTextfileDir
00341    Global Const $WmiExporterMetadataPath = $WmiExporterMetadataDir & $WmiExporterMetadataFileName
00342    Global $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00343    
00344    Global Const $PromScrapeTargetsFileName = ""
00345    Global Const $PromScrapeTargetsDir = $AkkRootDir & "prometheus\targets\"
00346    Global Const $PromScrapeTargetsPath = $PromScrapeTargetsDir & $PromScrapeTargetsFileName
00347    Global Const $PromScrapeTargetsExists = FileExists($PromScrapeTargetsPath)
00348    If Not FileExists($PromScrapeTargetsDir) Then DirCreate($PromScrapeTargetsDir)
00349    
00350    Global $WmiExporterMetadataString
00351    Global $WmiExporterMetadataArray[16]
00352    Global $WmiExporterMetadataArrayRet
00353    
00354    Global Const $WmiExporterParams = '' _
00355                   & ' --log.format logger:eventlog?name=wmi_exporter' _
00356                   & ' --collectors.enabled ' & $WmiExporterCollectorsEnabled _
00357                   & ' --telemetry.addr :9182 ' _
00358                   & ' --collector.textfile.directory ' & $WmiExporterCollectorTextfileDir
00359    #EndRegion Globals Prometheus WMI Exporter
00360    #Region
00361    _Singleton("akk")
00362    
00363    If @Compiled Then Sleep(5e3)
00364    
00365    ReadLocalConfig()
00366    
00367    ManageLogFile()
00368    
00369    ConsoleLog("akk.exe läuft Spawn, KPSInfo & WMI Exporter werden überwacht")
00370    ;~ ConsoleLog($SpawnPath)
00371    ;~ ConsoleLog($KPSInfoPath)
00372    ;~ ConsoleLog($WmiExporterLocalPath)
00373    ;~ ConsoleLog("werden überwacht")
00374    If Not @Compiled Then ConsoleLog("$WmiExporterParams: " & $WmiExporterParams)
00375    
00376    GetGlobalConfig()
00377    ReadGlobalConfig()
00378    EventLog()
00379    SetupWmiExporter()
00380    SetupExactFile()
00381    CleaningDownloads()
00382    CheckHomeDriveSpaceFree()
00383    ;~ GetWinList()
00384    ;~ ScreenCaptureWnd()
00385    ScreenCaptureNetPhoneClient()
00386    WriteMetaDataFile()
00387    WriteScrapeTargetFile()
00388    WriteLogStartup()
00389    
00390    If @Compiled Then Sleep(5e3)
00391    
00392  +-While 42
00393  |        Sleep(10)
00394  |  +-    If (Mod($Cycle, 300) = 0) Then
00395  |  |            If Timeout($Timer1, 15e3 * 1) Then Check()
00396  |  |            If Timeout($Timer2, 60e3 * 5) Then GetGlobalConfig()
00397  |  |            If Timeout($Timer3, 60e3 * 5) Then ManageLogFile()
00398  |  |            If Timeout($Timer4, 60e3 * 10) Then Scrape()
00399  |  |            If Timeout($Timer5, 30e3 * 1) Then EventLog()
00400  |  |            If Timeout($Timer6, 30e3 * 1) Then WriteMetaDataFile()
00401  |  |            If $IdleTime > 60e3 * 2 And Timeout($Timer7, 60e3 * 15) Then ScreenCaptureNetPhoneClient()
00402  |  +-    EndIf
00403  |        If (Mod($Cycle, 500) = 0) Then ScrapeDownload()
00404  |        $Cycle += 1
00405  +-WEnd
00406    
00407  +-Func ConsoleLog($Text)
00408  |        $Text = StringFormat("%10s", $Cycle) & " : " & $Text
00409  |        ConsoleWrite($Text & @CRLF)
00410  |    ;~     If @OSArch <> "WIN_10" Then TrayTip("", $Text, $TrayTipTimeout, $TIP_ICONEXCLAMATION)
00411  |        _FileWriteLog($LogPath, $Text)
00412  |        _FileWriteLog($LogNetPath, $Text)
00413  |        _FileWriteLog($LogGlobalNetPath, StringFormat("%-16s", @ComputerName) & " " & StringFormat("%-16s", @UserName) & " " & $Text)
00414  +-EndFunc   ;==>ConsoleLog
00415    
00416  +-Func EventLog()
00417  |        Local $hEventLog = _EventLog__Open("", "Application")
00418  |        $EventLogFull = _EventLog__Full($hEventLog)
00419  |        $EventLogCount = _EventLog__Count($hEventLog)
00420  |        $EventLogOldest = _EventLog__Oldest($hEventLog)
00421  |        _EventLog__Close($hEventLog)
00422  +-EndFunc   ;==>EventLog
00423    
00424  +-Func GetGlobalConfig()
00425  |  +-    If $IniGlobalNetExists And Not $IniGlobalExists Then
00426  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00427  |  +-    EndIf
00428  |  +-    If $IniGlobalExNetExists And Not $IniGlobalExExists Then
00429  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00430  |  +-    EndIf
00431  |  +-    If $AkkUpdaterNetExists And Not $AkkUpdaterExists Then
00432  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00433  |  +-    EndIf
00434  |    
00435  |        Local $IniGlobalTime = FileGetTime($IniGlobalPath, $FT_MODIFIED, $FT_STRING)
00436  |        Local $IniGlobalNetTime = FileGetTime($IniGlobalNetPath, $FT_MODIFIED, $FT_STRING)
00437  |  +-    If $IniGlobalTime <> $IniGlobalNetTime Then
00438  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00439  |  |            ConsoleLog("Reload Config " & $IniGlobalNetPath)
00440  |  |            ReadGlobalConfig()
00441  |  +-    EndIf
00442  |    
00443  |        Local $IniGlobalExTime = FileGetTime($IniGlobalExPath, $FT_MODIFIED, $FT_STRING)
00444  |        Local $IniGlobalExNetTime = FileGetTime($IniGlobalExNetPath, $FT_MODIFIED, $FT_STRING)
00445  |  +-    If $IniGlobalExTime <> $IniGlobalExNetTime Then
00446  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00447  |  |            ConsoleLog("Reload Config Ex" & $IniGlobalExNetPath)
00448  |  |            ReadGlobalConfig()
00449  |  |            WriteMetaDataFile()
00450  |  +-    EndIf
00451  |    
00452  |        Local $AkkUpdaterTime = FileGetTime($AkkUpdaterPath, $FT_MODIFIED, $FT_STRING)
00453  |        Local $AkkUpdaterNetTime = FileGetTime($AkkUpdaterNetPath, $FT_MODIFIED, $FT_STRING)
00454  |  +-    If $AkkUpdaterTime <> $AkkUpdaterNetTime And @Compiled Then
00455  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00456  |  |            ConsoleLog("Reload Akk Updater " & $AkkUpdaterNetPath)
00457  |  +-    EndIf
00458  |    
00459  |        Local $AkkTime = FileGetTime($AkkPath, $FT_MODIFIED, $FT_STRING)
00460  |        Local $AkkNetTime = FileGetTime($AkkNetPath, $FT_MODIFIED, $FT_STRING)
00461  |  +-    If $AkkTime <> $AkkNetTime And @Compiled Then
00462  |  |            CheckAndRunProc($AkkUpdaterFileName, $AkkUpdaterDir, $AkkUpdaterPath, $AkkUpdaterExists)
00463  |  |            ConsoleLog("Reload Akk " & $AkkNetPath)
00464  |  +-    EndIf
00465  +-EndFunc   ;==>GetGlobalConfig
00466    
00467  +-Func GetWinList()
00468  |        Local $aList = WinList()
00469  |    ;~     _DebugArrayDisplay($aList)
00470  |        Local $ListStates[1][8]
00471  |    ;~     $ListStates[0][0] = "title"
00472  |        $ListStates[0][1] = "hWnd"
00473  |        $ListStates[0][2] = "$WIN_STATE_EXISTS"
00474  |        $ListStates[0][3] = "$WIN_STATE_VISIBLE"
00475  |        $ListStates[0][4] = "$WIN_STATE_ENABLED"
00476  |        $ListStates[0][5] = "$WIN_STATE_ACTIVE"
00477  |        $ListStates[0][6] = "$WIN_STATE_MINIMIZED"
00478  |        $ListStates[0][7] = "$WIN_STATE_MAXIMIZED"
00479  |        Local $iState
00480  |  +-    For $i = 1 To $aList[0][0]
00481  |  |            $iState = WinGetState($aList[$i][1])
00482  |  |            _ArrayAdd($ListStates, $aList[$i][0] & $ArrayDelimItem _
00483  |  |  |                        & String($aList[$i][1]) & $ArrayDelimItem _
00484  |  |  |                        & BitAND($iState, $WIN_STATE_EXISTS) & $ArrayDelimItem _
00485  |  |  |                        & BitAND($iState, $WIN_STATE_VISIBLE) & $ArrayDelimItem _
00486  |  |  |                        & BitAND($iState, $WIN_STATE_ENABLED) & $ArrayDelimItem _
00487  |  |  |                        & BitAND($iState, $WIN_STATE_ACTIVE) & $ArrayDelimItem _
00488  |  |  |                        & BitAND($iState, $WIN_STATE_MINIMIZED) & $ArrayDelimItem _
00489  |  |  |                        & BitAND($iState, $WIN_STATE_MAXIMIZED), 0, $ArrayDelimItem)
00490  |  +-    Next
00491  |        $ListStates[0][0] = UBound($ListStates) - 1
00492  |    ;~     _DebugArrayDisplay($ListStates)
00493  |        Local $ListVisble[1][5] = [["", "hWnd", "$WIN_STATE_ACTIVE", "$WIN_STATE_MINIMIZED", "$WIN_STATE_MAXIMIZED"]]
00494  |  +-    For $i = 1 To $ListStates[0][0]
00495  |  |  +-        If $ListStates[$i][0] <> "" And $ListStates[$i][3] = $WIN_STATE_VISIBLE Then
00496  |  |  |                _ArrayAdd($ListVisble, $ListStates[$i][0] & $ArrayDelimItem _
00497  |  |  |  |                            & $ListStates[$i][1] & $ArrayDelimItem _
00498  |  |  |  |                            & $ListStates[$i][5] & $ArrayDelimItem _
00499  |  |  |  |                            & $ListStates[$i][6] & $ArrayDelimItem _
00500  |  |  |  |                            & $ListStates[$i][7], 0, $ArrayDelimItem)
00501  |  |  +-        EndIf
00502  |  +-    Next
00503  |        $ListVisble[0][0] = UBound($ListVisble) - 1
00504  |    ;~     _DebugArrayDisplay($ListVisble)
00505  |        Return $ListVisble
00506  +-EndFunc   ;==>GetWinList
00507    
00508  +-Func ManageLogFile()
00509  |        $LogFileName = StringFormat("%04s", $LogFileID) & ".log"
00510  |        $LogPath = $LogDir & $LogFileName
00511  |        $LogNetPath = $LogNetDir & $LogFileName
00512  |  +-    If _FileCountLines($LogPath) > 1e3 Then
00513  |  |            $LogFileID += 1
00514  |  |            IniWrite($IniLocalPath, "LogFile", "ID", $LogFileID)
00515  |  +-    EndIf
00516  |        IniWrite($IniLocalPath, "LogFile", "LogPath", $LogPath)
00517  |        IniWrite($IniLocalPath, "LogFile", "LogNetPath", $LogNetPath)
00518  |  +-    If FileGetSize($LogGlobalNetPath) / 1024 > 100 Then
00519  |  |            Local $Dest = $LogArchiveNetDir & @YEAR & @MON & @MDAY & @MIN & @SEC & @MSEC & ".log"
00520  |  |            FileMove($LogGlobalNetPath, $Dest, $FC_OVERWRITE + $FC_CREATEPATH)
00521  |  +-    EndIf
00522  +-EndFunc   ;==>ManageLogFile
00523    
00524  +-Func ReadGlobalConfig()
00525  |  +-    If FileExists($IniGlobalPath) Then
00526  |  |            $LowSpaceThresholdPerc = IniRead($IniGlobalPath, "FreeSpaceCheck", "LowSpaceThresholdPerc", 5)
00527  |  |  +-        For $i = 0 To 9 Step 1
00528  |  |  |                $MailAddresses[$i][0] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Address", "")
00529  |  |  |                $MailAddresses[$i][1] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Active", 0)
00530  |  |  +-        Next
00531  |  |            $SmtpMailSmtpServer = IniRead($IniGlobalPath, "SmtpMail", "SmtpServer", "")
00532  |  +-    EndIf
00533  |  +-    If FileExists($IniGlobalExPath) Then
00534  |  |            $WmiExporterMetadataString = IniRead($IniGlobalExPath, "MetaData", @ComputerName, "NULL")
00535  |  |  +-        If $WmiExporterMetadataString = "NULL" Then
00536  |  |  |                IniWrite($IniGlobalExNetPath, "MetaData", @ComputerName, "")
00537  |  |  +-        EndIf
00538  |  +-    EndIf
00539  +-EndFunc   ;==>ReadGlobalConfig
00540    
00541  +-Func ReadLocalConfig()
00542  |        $LogFileID = IniRead($IniLocalPath, "LogFile", "ID", "NULL")
00543  |  +-    If $LogFileID = "NULL" Then
00544  |  |            IniWrite($IniLocalPath, "LogFile", "ID", 0)
00545  |  |            $LogFileID = 0
00546  |  +-    EndIf
00547  +-EndFunc   ;==>ReadLocalConfig
00548    
00549  +-Func ScreenCaptureNetPhoneClient()
00550  |        Local $hWndActive = ScreenCaptureWnd()
00551  |        Local $hWnd = WinGetHandle("NetPhone Client")
00552  |  +-    If @error Then
00553  |  |            If ProcessExists($NetPhoneClientFileName) Then ConsoleLog("Error ScreenCaptureNetPhoneClient")
00554  |  +-    Else
00555  |  |            Local $iState = WinGetState($hWnd)
00556  |  |  +-        If $ScreenCaptureWinActivate Then
00557  |  |  |                WinActivate($hWnd)
00558  |  |  |                Sleep(250)
00559  |  |  +-        EndIf
00560  |  |            Local $aPos = WinGetPos($hWnd)
00561  |  |            $aPos[0] = $aPos[0] + 57
00562  |  |            $aPos[1] = $aPos[1] + $aPos[3] - 54
00563  |  |            $aPos[2] = $aPos[0] + 174
00564  |  |            $aPos[3] = $aPos[1] + 15
00565  |  |            WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneClientPos", 0, _ArrayToString($aPos))
00566  |  |            $NetPhoneUserChecksum = PixelChecksum($aPos[0], $aPos[1], $aPos[2], $aPos[3], 1, Default, 1)
00567  |  |  +-        If Not FileExists($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png") _
00568  |  |  |                       And Not FileExists($LogScreenCapNetDir & "del\" & $NetPhoneUserChecksum & ".png") _
00569  |  |  |                       And Not FileExists($LogScreenCapNetDir & "ini\" & $NetPhoneUserChecksum & ".png") Then
00570  |  |  |                _ScreenCapture_Capture($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png", $aPos[0], $aPos[1], $aPos[2], $aPos[3], 0)
00571  |  |  +-        EndIf
00572  |  |            If BitAND($iState, $WIN_STATE_MINIMIZED) Then WinSetState($hWnd, Default, @SW_MINIMIZE)
00573  |  +-    EndIf
00574  |        If $ScreenCaptureWinActivate Then WinActivate($hWndActive)
00575  |        $NetPhoneUser = IniRead($IniGlobalExPath, "$NetPhoneUser", $NetPhoneUserChecksum, "NULL")
00576  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUser", 0, $NetPhoneUser)
00577  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00578  +-EndFunc   ;==>ScreenCaptureNetPhoneClient
00579    
00580  +-Func ScreenCaptureWnd()
00581  |        Local $List = GetWinList()
00582  |        Local $hWnd
00583  |        Local $hWndActive
00584  |  +-    For $i = 1 To $List[0][0]
00585  |  |  +-        If $List[$i][0] <> "" Then
00586  |  |  |  +-            If $List[$i][2] = $WIN_STATE_ACTIVE Then
00587  |  |  |  |                    $ActiveWinTitle = $List[$i][0]
00588  |  |  |  |                    $hWndActive = $List[$i][1]
00589  |  |  |  +-            EndIf
00590  |  |  |  +-            If $ScreenCaptureWnd & StringStripWS($List[$i][0], $STR_STRIPLEADING + $STR_STRIPTRAILING) = "NetPhone Client" Then
00591  |  |  |  |                    $hWnd = HWnd($List[$i][1])
00592  |  |  |  |  +-                If WinActivate($hWnd) Then
00593  |  |  |  |  |                        _ScreenCapture_CaptureWnd($LogScreenCapDir & $i & ".png", $hWnd)
00594  |  |  |  |  +-                EndIf
00595  |  |  |  |  +-                If $List[$i][3] = $WIN_STATE_MINIMIZED Then
00596  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MINIMIZE)
00597  |  |  |  |  +-                EndIf
00598  |  |  |  |  +-                If $List[$i][4] = $WIN_STATE_MAXIMIZED Then
00599  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MAXIMIZE)
00600  |  |  |  |  +-                EndIf
00601  |  |  |  |                    If @error Then ConsoleLog("Error ScreenCaptureWnd")
00602  |  |  |  +-            EndIf
00603  |  |  +-        EndIf
00604  |  +-    Next
00605  |        $hWnd = HWnd($hWndActive)
00606  |        $hWndActivePid = WinGetProcess($hWnd)
00607  |        WinActivate($hWnd)
00608  |        Return $hWnd
00609  +-EndFunc   ;==>ScreenCaptureWnd
00610    
00611  +-Func SetVar(ByRef $Var, $Value)
00612  |        $Var = $Value
00613  |        Return $Value
00614  +-EndFunc   ;==>SetVar
00615    
00616  +-Func Timeout(ByRef $Timer, $Delay)
00617  |        Local $Diff = TimerDiff($Timer)
00618  |  +-    If $Diff > $Delay Then
00619  |  |            $Timer = TimerInit()
00620  |  |            Return $Diff
00621  |  +-    EndIf
00622  |        Return 0
00623  +-EndFunc   ;==>Timeout
00624    
00625  +-Func WriteLogStartup()
00626  |    ;~     Local Const $DelimItem = $ArrayDelimItem
00627  |    
00628  |        IniWrite($IniGlobalNetLogDir & "Global" & ".ini", "@ComputerName", StringReplace(StringFormat("%-16s", @IPAddress1), " ", "."), @ComputerName)
00629  |        WriteLogStartupIni("", "Global", "@IPAddress1", 0, @IPAddress1)
00630  |        WriteLogStartupIni("", "Global", "$AkkVersion", 0, $AkkVersion)
00631  |        WriteLogStartupIni("", "Global", "$SpawnExists", 0, $SpawnExists)
00632  |        WriteLogStartupIni("", "Global", "$KPSInfoExists", 0, $KPSInfoExists)
00633  |        WriteLogStartupIni("", "Global", "$PowerkatalogExists", 0, $PowerkatalogExists)
00634  |        WriteLogStartupIni("", "Global", "$SHDUpdaterExists", 0, $SHDUpdaterExists)
00635  |        WriteLogStartupIni("", "Global", "$NetPhoneClientExists", 0, $NetPhoneClientExists)
00636  |        WriteLogStartupIni("", "Global", "$ActiveWinTitle", 0, $ActiveWinTitle)
00637  |        WriteLogStartupIni("", "Global", "$hWndActivePid", 0, $hWndActivePid)
00638  |    
00639  |        WriteLogStartupIni("", "EventLog", "$EventLogFull", 0, $EventLogFull)
00640  |        WriteLogStartupIni("", "EventLog", "$EventLogCount", 0, $EventLogCount)
00641  |        WriteLogStartupIni("", "EventLog", "$EventLogOldest", 0, $EventLogOldest)
00642  |    
00643  |        WriteLogStartupIni("", "SpawnStats", $SpawnFileName & "TimeModified", 0, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00644  |    
00645  |    ;~     WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00646  |    ;~     If $NetPhoneUserChecksum <> "" Then IniWrite($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "")
00647  |    
00648  |        Local $aComputerSystemProduct = _ComputerNameAndModel()
00649  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductName", 0, $aComputerSystemProduct[0])
00650  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductIdentifyingNumber", 0, $aComputerSystemProduct[1])
00651  |    
00652  |        WriteLogStartupIni("", "AutoIt", "@Compiled", 0, @Compiled)
00653  |        WriteLogStartupIni("", "AutoIt", "@ScriptName", 0, @ScriptName)
00654  |        WriteLogStartupIni("", "AutoIt", "@ScriptDir", 0, @ScriptDir)
00655  |        WriteLogStartupIni("", "AutoIt", "@ScriptFullPath", 0, @ScriptFullPath)
00656  |        WriteLogStartupIni("", "AutoIt", "@WorkingDir", 0, @WorkingDir)
00657  |        WriteLogStartupIni("", "AutoIt", "@AutoItExe", 0, @AutoItExe)
00658  |        WriteLogStartupIni("", "AutoIt", "@AutoItPID", 0, @AutoItPID)
00659  |        WriteLogStartupIni("", "AutoIt", "@AutoItVersion", 0, @AutoItVersion)
00660  |        WriteLogStartupIni("", "AutoIt", "@AutoItX64", 0, @AutoItX64)
00661  |    
00662  |        WriteLogStartupIni("", "Directory", "@AppDataCommonDir", 0, @AppDataCommonDir)
00663  |        WriteLogStartupIni("", "Directory", "@DesktopCommonDir", 0, @DesktopCommonDir)
00664  |        WriteLogStartupIni("", "Directory", "@DocumentsCommonDir", 0, @DocumentsCommonDir)
00665  |        WriteLogStartupIni("", "Directory", "@FavoritesCommonDir", 0, @FavoritesCommonDir)
00666  |        WriteLogStartupIni("", "Directory", "@ProgramsCommonDir", 0, @ProgramsCommonDir)
00667  |        WriteLogStartupIni("", "Directory", "@StartMenuCommonDir", 0, @StartMenuCommonDir)
00668  |        WriteLogStartupIni("", "Directory", "@StartupCommonDir", 0, @StartupCommonDir)
00669  |    
00670  |        WriteLogStartupIni("", "Directory", "@AppDataDir", 0, @AppDataDir)
00671  |        WriteLogStartupIni("", "Directory", "@LocalAppDataDir", 0, @LocalAppDataDir)
00672  |        WriteLogStartupIni("", "Directory", "@DesktopDir", 0, @DesktopDir)
00673  |        WriteLogStartupIni("", "Directory", "@MyDocumentsDir", 0, @MyDocumentsDir)
00674  |        WriteLogStartupIni("", "Directory", "@FavoritesDir", 0, @FavoritesDir)
00675  |        WriteLogStartupIni("", "Directory", "@ProgramsDir", 0, @ProgramsDir)
00676  |        WriteLogStartupIni("", "Directory", "@StartMenuDir", 0, @StartMenuDir)
00677  |        WriteLogStartupIni("", "Directory", "@UserProfileDir", 0, @UserProfileDir)
00678  |    
00679  |        WriteLogStartupIni("", "Directory", "@HomeDrive", 0, @HomeDrive)
00680  |        WriteLogStartupIni("", "Directory", "@HomePath", 0, @HomePath)
00681  |        WriteLogStartupIni("", "Directory", "@HomeShare", 0, @HomeShare)
00682  |        WriteLogStartupIni("", "Directory", "@LogonDNSDomain", 0, @LogonDNSDomain)
00683  |        WriteLogStartupIni("", "Directory", "@LogonDomain", 0, @LogonDomain)
00684  |        WriteLogStartupIni("", "Directory", "@LogonServer", 0, @LogonServer)
00685  |        WriteLogStartupIni("", "Directory", "@ProgramFilesDir", 0, @ProgramFilesDir)
00686  |        WriteLogStartupIni("", "Directory", "@CommonFilesDir", 0, @CommonFilesDir)
00687  |        WriteLogStartupIni("", "Directory", "@WindowsDir", 0, @WindowsDir)
00688  |        WriteLogStartupIni("", "Directory", "@SystemDir", 0, @SystemDir)
00689  |        WriteLogStartupIni("", "Directory", "@TempDir", 0, @TempDir)
00690  |        WriteLogStartupIni("", "Directory", "@ComSpec", 0, @ComSpec)
00691  |    
00692  |        WriteLogStartupIni("", "SystemInfo", "@CPUArch", 0, @CPUArch)
00693  |        WriteLogStartupIni("", "SystemInfo", "@KBLayout", 0, @KBLayout)
00694  |        WriteLogStartupIni("", "SystemInfo", "@MUILang", 0, @MUILang)
00695  |        WriteLogStartupIni("", "SystemInfo", "@OSArch", 0, @OSArch)
00696  |        WriteLogStartupIni("", "SystemInfo", "@OSLang", 0, @OSLang)
00697  |        WriteLogStartupIni("", "SystemInfo", "@OSType", 0, @OSType)
00698  |        WriteLogStartupIni("", "SystemInfo", "@OSVersion", 0, @OSVersion)
00699  |        WriteLogStartupIni("", "SystemInfo", "@OSBuild", 0, @OSBuild)
00700  |        WriteLogStartupIni("", "SystemInfo", "@OSServicePack", 0, @OSServicePack)
00701  |        WriteLogStartupIni("", "SystemInfo", "@ComputerName", 0, @ComputerName)
00702  |        WriteLogStartupIni("", "SystemInfo", "@UserName", 0, @UserName)
00703  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress1", 0, @IPAddress1)
00704  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress2", 0, @IPAddress2)
00705  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress3", 0, @IPAddress3)
00706  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress4", 0, @IPAddress4)
00707  |    
00708  |        WriteLogStartupIni("", "SystemInfo", "@DesktopHeight", 0, @DesktopHeight)
00709  |        WriteLogStartupIni("", "SystemInfo", "@DesktopWidth", 0, @DesktopWidth)
00710  |        WriteLogStartupIni("", "SystemInfo", "@DesktopDepth", 0, @DesktopDepth)
00711  |        WriteLogStartupIni("", "SystemInfo", "@DesktopRefresh", 0, @DesktopRefresh)
00712  |    
00713  |    ;~     IniWrite($IniGlobalNetLogPath, "Computername", @IPAddress1, @ComputerName)
00714  |    ;~     IniWrite($IniGlobalNetLogPath, "IPAddress1", $ComputerName, @IPAddress1)
00715  |    ;~     IniWrite($IniGlobalNetLogPath, "AkkVersion", $ComputerName, FileGetVersion(@ScriptFullPath))
00716  |    ;~     IniWrite($IniGlobalNetLogPath, "SpawnExists", $ComputerName, $SpawnExists)
00717  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogFull", $ComputerName, $EventLogFull)
00718  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogCount", $ComputerName, $EventLogCount)
00719  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogOldest", $ComputerName, $EventLogOldest)
00720  |    
00721  |    ;~     IniWrite($LogSpawnStatsNetPath, "SpawnTimeModified", $ComputerName, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00722  |    
00723  |    ;~     _ArrayAdd($MacroAutoIt, "Compiled" & $DelimItem & @Compiled, 0, $DelimItem)
00724  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptName" & $DelimItem & @ScriptName, 0, $DelimItem)
00725  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptDir" & $DelimItem & @ScriptDir, 0, $DelimItem)
00726  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptFullPath" & $DelimItem & @ScriptFullPath, 0, $DelimItem)
00727  |    ;~     _ArrayAdd($MacroAutoIt, "WorkingDir" & $DelimItem & @WorkingDir, 0, $DelimItem)
00728  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItExe" & $DelimItem & @AutoItExe, 0, $DelimItem)
00729  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItPID" & $DelimItem & @AutoItPID, 0, $DelimItem)
00730  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItVersion" & $DelimItem & @AutoItVersion, 0, $DelimItem)
00731  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItX64" & $DelimItem & @AutoItX64, 0, $DelimItem)
00732  |    ;~     _ArrayDisplay($MacroAutoIt)
00733  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroAutoIt", $MacroAutoIt)
00734  |    
00735  |    ;~     _ArrayAdd($MacroDirectory, "AppDataCommonDir" & $DelimItem & @AppDataCommonDir, 0, $DelimItem)
00736  |    ;~     _ArrayAdd($MacroDirectory, "DesktopCommonDir" & $DelimItem & @DesktopCommonDir, 0, $DelimItem)
00737  |    ;~     _ArrayAdd($MacroDirectory, "DocumentsCommonDir" & $DelimItem & @DocumentsCommonDir, 0, $DelimItem)
00738  |    ;~     _ArrayAdd($MacroDirectory, "FavoritesCommonDir" & $DelimItem & @FavoritesCommonDir, 0, $DelimItem)
00739  |    ;~     _ArrayAdd($MacroDirectory, "ProgramsCommonDir" & $DelimItem & @ProgramsCommonDir, 0, $DelimItem)
00740  |    ;~     _ArrayAdd($MacroDirectory, "StartMenuCommonDir" & $DelimItem & @StartMenuCommonDir, 0, $DelimItem)
00741  |    ;~     _ArrayAdd($MacroDirectory, "StartupCommonDir" & $DelimItem & @StartupCommonDir, 0, $DelimItem)
00742  |    
00743  |    ;~     _ArrayAdd($MacroDirectory, "AppDataDir" & $DelimItem & @AppDataDir, 0, $DelimItem)
00744  |    ;~     _ArrayAdd($MacroDirectory, "LocalAppDataDir" & $DelimItem & @LocalAppDataDir, 0, $DelimItem)
00745  |    ;~     _ArrayAdd($MacroDirectory, "DesktopDir" & $DelimItem & @DesktopDir, 0, $DelimItem)
00746  |    ;~     _ArrayAdd($MacroDirectory, "MyDocumentsDir" & $DelimItem & @MyDocumentsDir, 0, $DelimItem)
00747  |    ;~     _ArrayAdd($MacroDirectory, "FavoritesDir" & $DelimItem & @FavoritesDir, 0, $DelimItem)
00748  |    ;~     _ArrayAdd($MacroDirectory, "ProgramsDir" & $DelimItem & @ProgramsDir, 0, $DelimItem)
00749  |    ;~     _ArrayAdd($MacroDirectory, "StartMenuDir" & $DelimItem & @StartMenuDir, 0, $DelimItem)
00750  |    ;~     _ArrayAdd($MacroDirectory, "StartupDir" & $DelimItem & @StartupDir, 0, $DelimItem)
00751  |    ;~     _ArrayAdd($MacroDirectory, "UserProfileDir" & $DelimItem & @UserProfileDir, 0, $DelimItem)
00752  |    
00753  |    ;~     _ArrayAdd($MacroDirectory, "HomeDrive" & $DelimItem & @HomeDrive, 0, $DelimItem)
00754  |    ;~     _ArrayAdd($MacroDirectory, "HomePath" & $DelimItem & @HomePath, 0, $DelimItem)
00755  |    ;~     _ArrayAdd($MacroDirectory, "HomeShare" & $DelimItem & @HomeShare, 0, $DelimItem)
00756  |    ;~     _ArrayAdd($MacroDirectory, "LogonDNSDomain" & $DelimItem & @LogonDNSDomain, 0, $DelimItem)
00757  |    ;~     _ArrayAdd($MacroDirectory, "LogonDomain" & $DelimItem & @LogonDomain, 0, $DelimItem)
00758  |    ;~     _ArrayAdd($MacroDirectory, "LogonServer" & $DelimItem & @LogonServer, 0, $DelimItem)
00759  |    ;~     _ArrayAdd($MacroDirectory, "ProgramFilesDir" & $DelimItem & @ProgramFilesDir, 0, $DelimItem)
00760  |    ;~     _ArrayAdd($MacroDirectory, "CommonFilesDir" & $DelimItem & @CommonFilesDir, 0, $DelimItem)
00761  |    ;~     _ArrayAdd($MacroDirectory, "WindowsDir" & $DelimItem & @WindowsDir, 0, $DelimItem)
00762  |    ;~     _ArrayAdd($MacroDirectory, "SystemDir" & $DelimItem & @SystemDir, 0, $DelimItem)
00763  |    ;~     _ArrayAdd($MacroDirectory, "TempDir" & $DelimItem & @TempDir, 0, $DelimItem)
00764  |    ;~     _ArrayAdd($MacroDirectory, "ComSpec" & $DelimItem & @ComSpec, 0, $DelimItem)
00765  |    ;~     _ArrayDisplay($MacroDirectory)
00766  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroDirectory", $MacroDirectory)
00767  |    
00768  |    ;~     _ArrayAdd($MacroSystemInfo, "CPUArch" & $DelimItem & @CPUArch, 0, $DelimItem)
00769  |    ;~     _ArrayAdd($MacroSystemInfo, "KBLayout" & $DelimItem & @KBLayout, 0, $DelimItem)
00770  |    ;~     _ArrayAdd($MacroSystemInfo, "MUILang" & $DelimItem & @MUILang, 0, $DelimItem)
00771  |    ;~     _ArrayAdd($MacroSystemInfo, "OSArch" & $DelimItem & @OSArch, 0, $DelimItem)
00772  |    ;~     _ArrayAdd($MacroSystemInfo, "OSLang" & $DelimItem & @OSLang, 0, $DelimItem)
00773  |    ;~     _ArrayAdd($MacroSystemInfo, "OSType" & $DelimItem & @OSType, 0, $DelimItem)
00774  |    ;~     _ArrayAdd($MacroSystemInfo, "OSVersion" & $DelimItem & @OSVersion, 0, $DelimItem)
00775  |    ;~     _ArrayAdd($MacroSystemInfo, "OSBuild" & $DelimItem & @OSBuild, 0, $DelimItem)
00776  |    ;~     _ArrayAdd($MacroSystemInfo, "OSServicePack" & $DelimItem & @OSServicePack, 0, $DelimItem)
00777  |    ;~     _ArrayAdd($MacroSystemInfo, "ComputerName" & $DelimItem & @ComputerName, 0, $DelimItem)
00778  |    ;~     _ArrayAdd($MacroSystemInfo, "UserName" & $DelimItem & @UserName, 0, $DelimItem)
00779  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress1" & $DelimItem & @IPAddress1, 0, $DelimItem)
00780  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress2" & $DelimItem & @IPAddress2, 0, $DelimItem)
00781  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress3" & $DelimItem & @IPAddress3, 0, $DelimItem)
00782  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress4" & $DelimItem & @IPAddress4, 0, $DelimItem)
00783  |    
00784  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopHeight" & $DelimItem & @DesktopHeight, 0, $DelimItem)
00785  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopWidth" & $DelimItem & @DesktopWidth, 0, $DelimItem)
00786  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopDepth" & $DelimItem & @DesktopDepth, 0, $DelimItem)
00787  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopRefresh" & $DelimItem & @DesktopRefresh, 0, $DelimItem)
00788  |    ;~     _ArrayDisplay($MacroSystemInfo)
00789  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroSystemInfo", $MacroSystemInfo)
00790  +-EndFunc   ;==>WriteLogStartup
00791    
00792  +-Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
00793  |  +-    If $FileName = "" Then
00794  |  |            $FileName = $IniGlobalNetLogDir & $Section & ".ini"
00795  |  +-    EndIf
00796  |        IniWrite($FileName, ($IsSectionAddedToKey ? $Section & $Key : $Key), $ComputerName, $Value)
00797  |        IniWrite($IniGlobalNetLogInstancePath, $Section, $Key, $Value)
00798  |    ;~ 	IniWrite ( "filename", "section", "key", "value" )
00799  +-EndFunc   ;==>WriteLogStartupIni
00800    #EndRegion
00801    #Region CheckAndRunProc
00802  +-Func Check()
00803  |        CheckAndRunProc($SpawnFileName, $SpawnDir, $SpawnPath, $SpawnExists)
00804  |        CheckAndRunProc($KPSInfoFileName, $KPSInfoDir, $KPSInfoPath, $KPSInfoExists)
00805  |        $WmiExporter1PID = CheckAndRunProc($WmiExporterLocalFileName, $WmiExporterLocalDir, $WmiExporterLocalPath & $WmiExporterParams, $WmiExporterLocalExists)
00806  |    ;~     CheckAndRunProcAs($PowerkatalogFileName, $PowerkatalogDir, $PowerkatalogPath, $PowerkatalogExists, "Administrator", "Brauckhoff", "")
00807  |    ;~     CheckAndRunProc($SHDUpdaterFileName, $SHDUpdaterDir, $SHDUpdaterPath, $SHDUpdaterExists)
00808  +-EndFunc   ;==>Check
00809    
00810  +-Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
00811  |  +-    If $Exists And Not ProcessExists($Name) Then
00812  |  |            ConsoleLog($Name & " wird gestartet")
00813  |  |            Return Run($Path, $Dir, $ShowFlag)
00814  |  +-    EndIf
00815  |        Return 0
00816  +-EndFunc   ;==>CheckAndRunProc
00817    
00818  +-Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
00819  |  +-    If $Exists And Not ProcessExists($Name) Then
00820  |  |            ConsoleLog($Name & " wird gestartet als " & $UserName & " in " & $Domain & " mit Network credentials only")
00821  |  |            RunAs($UserName, $Domain, $Password, $RUN_LOGON_NETWORK, $Path, $Dir)
00822  |  +-    EndIf
00823  +-EndFunc   ;==>CheckAndRunProcAs
00824    #EndRegion CheckAndRunProc
00825    #Region CleaningDownloads
00826  +-Func CleaningDownloads()
00827  |  +-    If DownloadsNeedCleaning() Then
00828  |  |            DirRemove($DownloadsOldDir, $DIR_REMOVE)
00829  |  |            FileDirMoveRec($DownloadsDir, $DownloadsOldDir)
00830  |  |            FileDelete($DownloadsOldDir & "\Downloads alt.lnk")
00831  |  |            FileCreateShortcut($DownloadsOldDir, $DownloadsDir & "\Downloads alt")
00832  |  |            IniWrite($IniLocalPath, "Downloads", "LastCleaningDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00833  |  |            Local Const $Warning = '' _
00834  |  |  |                        & 'Wenn Sie noch wichtige Dateien im Ordner "Downloads" aufbewahren, die Sie benötigen, kopieren Sie diese bitte an einen anderen Ort.' & @CRLF _
00835  |  |  |                        & 'Alle Dateien aus dem Ordner "Downloads" wurden bereits in den Ordner "Downloads alt" verschoben.' & @CRLF _
00836  |  |  |                        & 'Der Ordner "Downloads alt" ist über eine Verknüpfung in "Downloads" zu erreichen.' & @CRLF _
00837  |  |  |                        & 'Alle Ihre Dateien die im Ordner "Downloads alt" bleiben, werden demnächst unwiderruflich GELÖSCHT!' & @CRLF _
00838  |  |  |                        & 'Bitte sichten und sichern Sie am besten jetzt sofort Ihre weiterhin benötigten Dateien.' & @CRLF _
00839  |  |  |                        & 'Soll der Ordner "Downloads alt" jetzt geöffnet werden?' & @CRLF
00840  |  |  +-        If MsgBox($MB_YESNO + $MB_ICONWARNING + $MB_SYSTEMMODAL, "ACHTUNG WICHTIG! LÖSCHUNG IHRER DOWNLOAD-DATEIEN", $Warning, $MsgBoxTimeout) = $IDYES Then
00841  |  |  |                ShellExecute($DownloadsOldDir)
00842  |  |  +-        EndIf
00843  |  +-    EndIf
00844  +-EndFunc   ;==>CleaningDownloads
00845    
00846  +-Func DownloadsNeedCleaning()
00847  |        Return (_DateToDayValue(@YEAR, @MON, @MDAY) - GetDownloadsLastCleaningDate()) >= 14
00848  +-EndFunc   ;==>DownloadsNeedCleaning
00849  +-Func FileDirMoveRec($SourceDir, $DestDir)
00850  |  +-    If FileExists($SourceDir) Then
00851  |  |            If Not FileExists($DestDir) Then DirCreate($DestDir)
00852  |  |            FileMove($SourceDir & "\*.*", $DestDir, $FC_OVERWRITE + $FC_CREATEPATH)
00853  |  |            Local Const $FolderList = _FileListToArray($SourceDir, Default, $FLTA_FOLDERS, True)
00854  |  |  +-        If Not @error Then
00855  |  |  |  +-            For $Folder In $FolderList
00856  |  |  |  |                    DirMove($Folder, $DestDir, $FC_OVERWRITE)
00857  |  |  |  +-            Next
00858  |  |  +-        EndIf
00859  |  +-    EndIf
00860  +-EndFunc   ;==>FileDirMoveRec
00861    
00862  +-Func GetDownloadsLastCleaningDate()
00863  |        Return IniRead($IniLocalPath, "Downloads", "LastCleaningDate", "NULL")
00864  +-EndFunc   ;==>GetDownloadsLastCleaningDate
00865    #EndRegion CleaningDownloads
00866    #Region FreeSpaceCheck
00867  +-Func ByteSuffix($iBytes)
00868  |        Local $iIndex = 0, $aArray = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB']
00869  |  +-    While $iBytes > 1023
00870  |  |            $iIndex += 1
00871  |  |            $iBytes /= 1024
00872  |  +-    WEnd
00873  |        Return Round($iBytes) & $aArray[$iIndex]
00874  +-EndFunc   ;==>ByteSuffix
00875    
00876  +-Func CheckHomeDriveSpaceFree()
00877  |        Local Const $sLabel = DriveGetLabel(@HomeDrive & "\")
00878  |    ;~     Local Const $sSerial = DriveGetSerial(@HomeDrive & "\")
00879  |        Local Const $iFreeSpace = DriveSpaceFree(@HomeDrive & "\")
00880  |        Local Const $iTotalSpace = DriveSpaceTotal(@HomeDrive & "\")
00881  |        Local Const $iFreeSpacePerc = ($iFreeSpace / $iTotalSpace) * 100
00882  |  +-    If $iFreeSpacePerc < $LowSpaceThresholdPerc Then
00883  |  |  +-        If (_DateToDayValue(@YEAR, @MON, @MDAY) - IniRead($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", "NULL")) >= 1 Then
00884  |  |  |                IniWrite($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00885  |  |  |  +-            For $i = 0 To 9 Step 1
00886  |  |  |  |  +-                If $MailAddresses[$i][0] <> "" And $MailAddresses[$i][1] = 1 Then
00887  |  |  |  |  |                        ConsoleLog("Sending Mail to " & $MailAddresses[$i][0])
00888  |  |  |  |  |                        SendMailLowSpace($MailAddresses[$i][0], Round($iFreeSpacePerc, 2), $sLabel, $iFreeSpace, $iTotalSpace)
00889  |  |  |  |  |                        Sleep(3000)
00890  |  |  |  |  +-                EndIf
00891  |  |  |  +-            Next
00892  |  |  +-        EndIf
00893  |  +-    EndIf
00894  +-EndFunc   ;==>CheckHomeDriveSpaceFree
00895    
00896  +-Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
00897  |        Local $sFromName = "akk.exe (Gerrit)"
00898  |        Local $sFromAddress = "akk@kuechen-brauckhoff.de"
00899  |        Local $sSubject = "AKK Warnung freier Speicher auf " & @ComputerName & " ist " & $iFreeSpacePerc & "% !"
00900  |        Local $asBody[0]
00901  |        _ArrayAdd($asBody, "Akk Warnung wenig Speicherplatz auf:")
00902  |        _ArrayAdd($asBody, @ComputerName)
00903  |        If @IPAddress1 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress1)
00904  |        If @IPAddress2 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress2)
00905  |        If @IPAddress3 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress3)
00906  |        If @IPAddress4 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress4)
00907  |        _ArrayAdd($asBody, $sLabel & " (" & @HomeDrive & ")")
00908  |        _ArrayAdd($asBody, Round($iFreeSpace / 1024, 2) & " GB frei von " & Round($iTotalSpace / 1024, 2) & " GB")
00909  |        _ArrayAdd($asBody, $iFreeSpacePerc & "% frei")
00910  |        Local $iResponse = _INetSmtpMail($SmtpMailSmtpServer, $sFromName, $sFromAddress, $sToAddress, $sSubject, $asBody, $SmtpMailEHLO, $SmtpMailFirst, $SmtpMailTrace)
00911  |        Local $iErr = @error
00912  |  +-    If $iResponse = 0 Then
00913  |  |            Local Const $Warning = '' _
00914  |  |  |                        & 'DIE FESTPLATTE IST FAST VOLL!' & @CRLF & @CRLF _
00915  |  |  |                        & 'Bitte Herrn Heger bescheid geben:' & @CRLF _
00916  |  |  |                        & 'heger@easyconnectit.de' & @CRLF _
00917  |  |  |                        & 'oder 0176 23984427' & @CRLF & @CRLF _
00918  |  |  |                        & _ArrayToString($asBody, @CRLF) & @CRLF & @CRLF _
00919  |  |  |                        & 'Mail failed with error code ' & $iErr & @CRLF
00920  |  |            MsgBox($MB_ICONWARNING + $MB_SYSTEMMODAL, "Warnung!", $Warning)
00921  |  +-    EndIf
00922  +-EndFunc   ;==>SendMailLowSpace
00923    #EndRegion FreeSpaceCheck
00924    #Region WMI Exporter
00925    
00926  +-Func MetaProcessCount($ProcessName)
00927  |        Local $aProcessList = ProcessList($ProcessName)
00928  |        Local $sDrive = "", $sDir = "", $sFileName = "", $sExtension = ""
00929  |        _PathSplit($ProcessName, $sDrive, $sDir, $sFileName, $sExtension)
00930  |        Local $MetaProcessCount = 'akk_process_count{process="' & $sFileName & '"} ' & $aProcessList[0][0]
00931  |        Return $MetaProcessCount
00932  +-EndFunc   ;==>MetaProcessCount
00933    
00934  +-Func Scrape()
00935  |  +-    If $ScrapeComplete And ProcessExists($WmiExporterLocalFileName) Then
00936  |  |            $hDownload = InetGet("http://localhost:9182/metrics", $LogScrapePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)
00937  |  |            $ScrapeComplete = 0
00938  |  +-    EndIf
00939  +-EndFunc   ;==>Scrape
00940    
00941  +-Func ScrapeDownload()
00942  |  +-    If Not $ScrapeComplete Then
00943  |  |  +-        If InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE) Then
00944  |  |  |  +-            If InetGetInfo($hDownload, $INET_DOWNLOADSUCCESS) Then
00945  |  |  |  |                    If FileGetSize($LogScrapePath) Then FileCopy($LogScrapePath, $LogScrapeNetPath, $FC_OVERWRITE + $FC_CREATEPATH)
00946  |  |  |  +-            Else
00947  |  |  |  |                    FileDelete($LogScrapePath)
00948  |  |  |  |                    ConsoleLog("Error ScrapeDownload")
00949  |  |  |  +-            EndIf
00950  |  |  |                InetClose($hDownload)
00951  |  |  |                $hDownload = 0
00952  |  |  |                $ScrapeComplete = 1
00953  |  |  +-        EndIf
00954  |  +-    EndIf
00955  +-EndFunc   ;==>ScrapeDownload
00956    
00957  +-Func SetupExactFile()
00958  |  +-    If Not $ExactFileExists Then
00959  |  |  +-        If FileCopy($ExactFileNetPath, $ExactFilePath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00960  |  |  |                $ExactFileExists = FileExists($ExactFilePath)
00961  |  |  +-        EndIf
00962  |  +-    EndIf
00963  +-EndFunc   ;==>SetupExactFile
00964    
00965  +-Func SetupWmiExporter()
00966  |        ProcessClose($WmiExporterLocalFileName)
00967  |  +-    If Not $WmiExporterLocalExists Then
00968  |  |            Local $SourcePath = (@OSArch = "X64") ? $WmiExporterX64GlobalNetSetupPath : $WmiExporterX32GlobalNetSetupPath
00969  |  |  +-        If FileCopy($SourcePath, $WmiExporterLocalPath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00970  |  |  |                $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00971  |  |  +-        EndIf
00972  |  +-    EndIf
00973  |        If Not FileExists($WmiExporterCollectorTextfileDir) Then DirCreate($WmiExporterCollectorTextfileDir)
00974  +-EndFunc   ;==>SetupWmiExporter
00975    
00976  +-Func WriteMetaDataFile()
00977  |        Local $MetaData = 'akk_metadata{username="@UserName@",ip_address="@IPAddress1@"' _
00978  |  |                    & ',netphone_user="' & ($ActiveWinTitle = "LockScreen" ? "LockScreen" : $NetPhoneUser) & '"'
00979  |  +-    If $WmiExporterMetadataString <> "NULL" And StringLen($WmiExporterMetadataString) And Not StringIsSpace($WmiExporterMetadataString) Then
00980  |  |            $MetaData &= "," & $WmiExporterMetadataString
00981  |  +-    EndIf
00982  |        $MetaData &= '} 1'
00983  |    
00984  |        $IdleTime = _Timer_GetIdleTime()
00985  |        Local $MetaIdleTime = 'akk_idletime_sec ' & $IdleTime / 1e3
00986  |    
00987  |        Local $aMemStats = MemGetStats()
00988  |        Local $MetaMemLoad = 'akk_memstats_load ' & $aMemStats[$MEM_LOAD] ; Memory Load (Percentage of memory in use)
00989  |        Local $MetaMemTotalPhysRam = 'akk_memstats_total_physram_gb ' & Round($aMemStats[$MEM_TOTALPHYSRAM] / 1024 / 1024, 2) ; Total physical RAM
00990  |        Local $MetaMemAvailPhysRam = 'akk_memstats_avail_physram_gb ' & Round($aMemStats[$MEM_AVAILPHYSRAM] / 1024 / 1024, 2) ; Available physical RAM
00991  |        Local $MetaMemTotalPageFile = 'akk_memstats_total_pagefile_gb ' & Round($aMemStats[$MEM_TOTALPAGEFILE] / 1024 / 1024, 2) ; Total Pagefile
00992  |        Local $MetaMemAvailPageFile = 'akk_memstats_avail_pagefile_gb ' & Round($aMemStats[$MEM_AVAILPAGEFILE] / 1024 / 1024, 2) ; Available Pagefile
00993  |        Local $MetaMemTotalVirtual = 'akk_memstats_total_virtual_gb ' & Round($aMemStats[$MEM_TOTALVIRTUAL] / 1024 / 1024, 2) ; Total virtual
00994  |        Local $MetaMemAvailVirtual = 'akk_memstats_avail_virtual_gb ' & Round($aMemStats[$MEM_AVAILVIRTUAL] / 1024 / 1024, 2) ; Available virtual
00995  |    
00996  |        Local $MetaEventLogFull = 'akk_eventlog_full ' & ($EventLogFull ? 1 : 0)
00997  |        Local $MetaEventLogCount = 'akk_eventlog_count ' & $EventLogCount
00998  |        Local $MetaEventLogOldest = 'akk_eventlog_oldest ' & $EventLogOldest
00999  |    
01000  |        Local $MetaProcessCountChrome = MetaProcessCount("chrome.exe")
01001  |        Local $MetaProcessCountJavaw = MetaProcessCount("javaw.exe")
01002  |        Local $MetaProcessCountFusionFX = MetaProcessCount("FusionFX.exe")
01003  |    
01004  |        $WmiExporterMetadataArray[1] = $MetaData
01005  |        $WmiExporterMetadataArray[2] = $MetaIdleTime
01006  |        $WmiExporterMetadataArray[3] = $MetaMemLoad
01007  |        $WmiExporterMetadataArray[4] = $MetaMemTotalPhysRam
01008  |        $WmiExporterMetadataArray[5] = $MetaMemAvailPhysRam
01009  |        $WmiExporterMetadataArray[6] = $MetaMemTotalPageFile
01010  |        $WmiExporterMetadataArray[7] = $MetaMemAvailPageFile
01011  |        $WmiExporterMetadataArray[8] = $MetaMemTotalVirtual
01012  |        $WmiExporterMetadataArray[9] = $MetaMemAvailVirtual
01013  |        $WmiExporterMetadataArray[10] = $MetaEventLogFull
01014  |        $WmiExporterMetadataArray[11] = $MetaEventLogCount
01015  |        $WmiExporterMetadataArray[12] = $MetaEventLogOldest
01016  |        $WmiExporterMetadataArray[13] = $MetaProcessCountChrome
01017  |        $WmiExporterMetadataArray[14] = $MetaProcessCountJavaw
01018  |        $WmiExporterMetadataArray[15] = $MetaProcessCountFusionFX
01019  |        $WmiExporterMetadataArray[0] = UBound($WmiExporterMetadataArray) - 1
01020  |        _FileReadToArray($WmiExporterMetadataPath, $WmiExporterMetadataArrayRet)
01021  |  +-    If Not _ArrayCompare($WmiExporterMetadataArray, $WmiExporterMetadataArrayRet, 3) Then
01022  |  |            _FileWriteFromArray($WmiExporterMetadataPath, $WmiExporterMetadataArray, 1)
01023  |  +-    EndIf
01024  +-EndFunc   ;==>WriteMetaDataFile
01025    
01026  +-Func WriteScrapeTargetFile()
01027  |        Local $Lines[1]
01028  |        _ArrayAdd($Lines, '[')
01029  |        _ArrayAdd($Lines, '  {')
01030  |        _ArrayAdd($Lines, '    "labels": {')
01031  |        _ArrayAdd($Lines, '      "job": "node",')
01032  |        _ArrayAdd($Lines, '      "instance": "@ComputerName@"')
01033  |        _ArrayAdd($Lines, '    },')
01034  |        _ArrayAdd($Lines, '    "targets": [')
01035  |        _ArrayAdd($Lines, '      "@IPAddress1@:9182"')
01036  |        _ArrayAdd($Lines, '    ]')
01037  |        _ArrayAdd($Lines, '  }')
01038  |        _ArrayAdd($Lines, ']')
01039  |        Local $CurrentFile
01040  |        $Lines[0] = UBound($Lines) - 1
01041  |        Local $FilePath = $PromScrapeTargetsDir & "@ComputerName@.json"
01042  |        _FileReadToArray($FilePath, $CurrentFile)
01043  |  +-    If Not _ArrayCompare($Lines, $CurrentFile, 3) Then
01044  |  |            _FileWriteFromArray($FilePath, $Lines, 1)
01045  |  +-    EndIf
01046  +-EndFunc   ;==>WriteScrapeTargetFile
01047    #EndRegion WMI Exporter
01048    #Region UDF
01049    ;~ https://www.autoitscript.com/forum/topic/182506-array-comparison/
01050    ;~ Melba23
01051  +-Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
01052  |    
01053  |        ; Check if arrays
01054  |  +-    If Not (IsArray($aArray1)) Or Not (IsArray($aArray2)) Then
01055  |  |            Return SetError(1, 0, 0)
01056  |  +-    EndIf
01057  |    
01058  |        ; Check if same number of dimensions
01059  |        Local $iDims = UBound($aArray1, $UBOUND_DIMENSIONS)
01060  |  +-    If $iDims <> UBound($aArray2, $UBOUND_DIMENSIONS) Then
01061  |  |            Return SetError(2, 0, 0)
01062  |  +-    EndIf
01063  |    
01064  |        ; Check if same size
01065  |        Local $iRows = UBound($aArray1, $UBOUND_ROWS)
01066  |        Local $iCols = UBound($aArray1, $UBOUND_COLUMNS)
01067  |  +-    If $iRows <> UBound($aArray2, $UBOUND_ROWS) Or $iCols <> UBound($aArray2, $UBOUND_COLUMNS) Then
01068  |  |            Return SetError(3, 0, 0)
01069  |  +-    EndIf
01070  |    
01071  |        Local $sString_1, $sString_2
01072  |    
01073  |  +-    Switch $iMode
01074  |  |    
01075  |  |  +-        Case 0     ; Compare each element
01076  |  |  |  +-            For $i = 0 To $iRows - 1
01077  |  |  |  |  +-                For $j = 0 To $iCols - 1
01078  |  |  |  |  |  +-                    If $aArray1[$i][$j] <> $aArray1[$i][$j] Then
01079  |  |  |  |  |  |                            Return SetError(4, 0, 0)
01080  |  |  |  |  |  +-                    EndIf
01081  |  |  |  |  +-                Next
01082  |  |  |  +-            Next
01083  |  |  |    
01084  |  |  +-        Case 1     ; Convert rows to strings
01085  |  |  |  +-            For $i = 0 To $iRows - 1
01086  |  |  |  |  +-                For $j = 0 To $iCols - 1
01087  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
01088  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
01089  |  |  |  |  +-                Next
01090  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
01091  |  |  |  |  |                        Return SetError(4, 0, 0)
01092  |  |  |  |  +-                EndIf
01093  |  |  |  +-            Next
01094  |  |  |    
01095  |  |  +-        Case 2     ; Convert columnss to strings
01096  |  |  |  +-            For $j = 0 To $iCols - 1
01097  |  |  |  |  +-                For $i = 0 To $iRows - 1
01098  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
01099  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
01100  |  |  |  |  +-                Next
01101  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
01102  |  |  |  |  |                        Return SetError(4, 0, 0)
01103  |  |  |  |  +-                EndIf
01104  |  |  |  +-            Next
01105  |  |  |    
01106  |  |  +-        Case 3     ; Convert whole array to string
01107  |  |  |  +-            If _ArrayToString($aArray1) <> _ArrayToString($aArray2) Then
01108  |  |  |  |                    Return SetError(4, 0, 0)
01109  |  |  |  +-            EndIf
01110  |  |  |    
01111  |  +-    EndSwitch
01112  |    
01113  |        ; Looks as if they match
01114  |        Return 1
01115  |    
01116  +-EndFunc   ;==>_ArrayCompare
01117    
01118  +-Func _ComputerNameAndModel()
01119  |        Local $aReturn[2] = ["(Unknown)", "(Unknown)"], $oColItems, $oWMIService
01120  |    
01121  |        $oWMIService = ObjGet("winmgmts:\\.\root\cimv2")
01122  |        $oColItems = $oWMIService.ExecQuery("Select * From Win32_ComputerSystemProduct", "WQL", 0x30)
01123  |  +-    If IsObj($oColItems) Then
01124  |  |  +-        For $oObjectItem In $oColItems
01125  |  |  |                $aReturn[0] = $oObjectItem.Name
01126  |  |  |                $aReturn[1] = $oObjectItem.IdentifyingNumber
01127  |  |  +-        Next
01128  |  |            Return $aReturn
01129  |  +-    EndIf
01130  |        Return SetError(1, 0, $aReturn)
01131  +-EndFunc   ;==>_ComputerNameAndModel
01132    #EndRegion UDF
01133    

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================
ByteSuffix                00867 
Check                     00802 
CheckAndRunProc           00810 
CheckAndRunProcAs         00818 
CheckHomeDriveSpaceFree   00876 
CleaningDownloads         00826 
ConsoleLog                00407 
DownloadsNeedCleaning     00846 
EventLog                  00416 
FileDirMoveRec            00849 
GetDownloadsLastCleaningDate  00862 
GetGlobalConfig           00424 
GetWinList                00467 
ManageLogFile             00508 
MetaProcessCount          00926 
ReadGlobalConfig          00524 
ReadLocalConfig           00541 
Scrape                    00934 
ScrapeDownload            00941 
ScreenCaptureNetPhoneClient  00549 
ScreenCaptureWnd          00580 
SendMailLowSpace          00896 
SetVar                    00611 
SetupExactFile            00957 
SetupWmiExporter          00965 
Timeout                   00616 
WriteLogStartup           00625 
WriteLogStartupIni        00792 
WriteMetaDataFile         00976 
WriteScrapeTargetFile     01027 
_ArrayCompare             01052 
_ComputerNameAndModel     01119 

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
#Au3Stripper_Parameters   ----- 00023
#AutoIt3Wrapper_AU3Check_Parameters  ----- 00017
#AutoIt3Wrapper_AU3Check_Stop_OnWarning  ----- 00016
#AutoIt3Wrapper_Icon      ----- 00002
#AutoIt3Wrapper_Outfile   ----- 00003
#AutoIt3Wrapper_Res_Comment  ----- 00004
#AutoIt3Wrapper_Res_CompanyName  ----- 00009
#AutoIt3Wrapper_Res_Description  ----- 00005
#AutoIt3Wrapper_Res_Field  ----- 00014
#AutoIt3Wrapper_Res_Fileversion  ----- 00006
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement  ----- 00007
#AutoIt3Wrapper_Res_Language  ----- 00013
#AutoIt3Wrapper_Res_LegalCopyright  ----- 00010
#AutoIt3Wrapper_Res_LegalTradeMarks  ----- 00011
#AutoIt3Wrapper_Res_ProductName  ----- 00008
#AutoIt3Wrapper_Res_SaveSource  ----- 00012
#AutoIt3Wrapper_Run_AU3Check  ----- 00015
#AutoIt3Wrapper_Run_After  ----- 00019
#AutoIt3Wrapper_Run_Au3Stripper  ----- 00022
#AutoIt3Wrapper_Run_Before  ----- 00018
#AutoIt3Wrapper_Run_Tidy  ----- 00020
#EndRegion                ----- 00024 00086 00138 00264 00273 00359 00800 00824 00865 00923 01047 01132
#Region                   ----- 00001 00041 00088 00139 00265 00274 00360 00801 00825 00866 00924 01048
#Tidy_Parameters          ----- 00021
#include                  ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036 00037 00038 00039 00040
$ActiveWinTitle           ----- 00111 00587 00636 00977
$AkkDir                   ----- 00151 00152 00161 00171 00176 00198 00236 00246
$AkkExists                ----- 00153
$AkkFileName              ----- 00150 00152 00155
$AkkNetDir                ----- 00156 00157
$AkkNetExists             ----- 00158
$AkkNetFileName           ----- 00155 00157
$AkkNetPath               ----- 00157 00158 00460 00463
$AkkNetTime               ----- 00460 00461
$AkkPath                  ----- 00152 00153 00459
$AkkRootDir               ----- 00146 00147 00181 00191 00204 00210 00215 00221 00226 00252 00290 00300 00305 00345
$AkkRootExists            ----- 00148
$AkkRootFileName          ----- 00145 00147
$AkkRootPath              ----- 00147 00148
$AkkTime                  ----- 00459 00461
$AkkUpdaterDir            ----- 00161 00162 00462
$AkkUpdaterExists         ----- 00163 00431 00432 00455 00462
$AkkUpdaterFileName       ----- 00160 00162 00165 00462
$AkkUpdaterNetDir         ----- 00166 00167
$AkkUpdaterNetExists      ----- 00168 00431
$AkkUpdaterNetFileName    ----- 00165 00167
$AkkUpdaterNetPath        ----- 00167 00168 00432 00453 00455 00456
$AkkUpdaterNetTime        ----- 00453 00454
$AkkUpdaterPath           ----- 00162 00163 00432 00452 00455 00462
$AkkUpdaterTime           ----- 00452 00454
$AkkVersion               ----- 00106 00630
$ArrayDelimItem           ----- 00260 00482 00496
$ComputerName             ----- 00105 00796
$CurrentFile              ----- 01039 01042 01043
$Cycle                    ----- 00093 00394 00403 00404 00408
$DIR_REMOVE               ----- 00828
$Delay                    ----- 00616 00618
$Dest                     ----- 00519 00520
$DestDir                  ----- 00849 00851 00852 00856
$Diff                     ----- 00617 00618 00620
$Dir                      ----- 00810 00813 00818 00821
$Domain                   ----- 00818 00820 00821
$DownloadsDir             ----- 00257 00258 00829 00831
$DownloadsOldDir          ----- 00258 00828 00829 00830 00831 00841
$EventLogCount            ----- 00281 00419 00640 00997
$EventLogFull             ----- 00280 00418 00639 00996
$EventLogOldest           ----- 00282 00420 00641 00998
$ExactFileDir             ----- 00285 00286
$ExactFileExists          ----- 00287 00958 00960
$ExactFileFileName        ----- 00284 00286 00289
$ExactFileNetDir          ----- 00290 00291
$ExactFileNetExists       ----- 00292
$ExactFileNetFileName     ----- 00289 00291
$ExactFileNetPath         ----- 00291 00292 00959
$ExactFilePath            ----- 00286 00287 00959 00960
$Exists                   ----- 00810 00811 00818 00819
$FC_CREATEPATH            ----- 00426 00429 00432 00438 00446 00455 00520 00852 00945 00959 00969
$FC_OVERWRITE             ----- 00426 00429 00432 00438 00446 00455 00520 00852 00856 00945 00959 00969
$FLTA_FOLDERS             ----- 00853
$FT_MODIFIED              ----- 00435 00436 00443 00444 00452 00453 00459 00460 00643
$FT_STRING                ----- 00435 00436 00443 00444 00452 00453 00459 00460 00643
$FileName                 ----- 00792 00793 00794 00796
$FilePath                 ----- 01041 01042 01044
$Folder                   ----- 00855 00856
$FolderList               ----- 00853 00855
$IDYES                    ----- 00840
$INET_DOWNLOADBACKGROUND  ----- 00936
$INET_DOWNLOADCOMPLETE    ----- 00943
$INET_DOWNLOADSUCCESS     ----- 00944
$INET_FORCERELOAD         ----- 00936
$IdleTime                 ----- 00278 00401 00984 00985
$IniGlobalDir             ----- 00176 00177 00186
$IniGlobalExDir           ----- 00186 00187
$IniGlobalExExists        ----- 00188 00428 00429 00446
$IniGlobalExFileName      ----- 00185 00187 00190
$IniGlobalExNetDir        ----- 00191 00192
$IniGlobalExNetExists     ----- 00193 00428
$IniGlobalExNetFileName   ----- 00190 00192
$IniGlobalExNetPath       ----- 00192 00193 00429 00444 00446 00447 00536
$IniGlobalExNetTime       ----- 00444 00445
$IniGlobalExPath          ----- 00187 00188 00429 00443 00446 00533 00534 00575
$IniGlobalExTime          ----- 00443 00445
$IniGlobalExists          ----- 00178 00425 00426 00438
$IniGlobalFileName        ----- 00175 00177 00180
$IniGlobalNetDir          ----- 00181 00182
$IniGlobalNetExists       ----- 00183 00425
$IniGlobalNetFileName     ----- 00180 00182
$IniGlobalNetLogDir       ----- 00221 00222 00628 00794
$IniGlobalNetLogExists    ----- 00223
$IniGlobalNetLogFileName  ----- 00220 00222
$IniGlobalNetLogInstanceDir  ----- 00231 00232
$IniGlobalNetLogInstanceExists  ----- 00233
$IniGlobalNetLogInstanceFileName  ----- 00230 00232
$IniGlobalNetLogInstancePath  ----- 00232 00233 00797
$IniGlobalNetLogPath      ----- 00222 00223
$IniGlobalNetPath         ----- 00182 00183 00426 00436 00438 00439
$IniGlobalNetTime         ----- 00436 00437
$IniGlobalPath            ----- 00177 00178 00426 00435 00438 00525 00526 00528 00529 00531
$IniGlobalTime            ----- 00435 00437
$IniLocalDir              ----- 00171 00172
$IniLocalExists           ----- 00173
$IniLocalFileName         ----- 00170 00172
$IniLocalPath             ----- 00172 00173 00514 00516 00517 00542 00544 00832 00863 00883 00884
$IntMax                   ----- 00104
$IntMin                   ----- 00103
$IsSectionAddedToKey      ----- 00792 00796
$KPSInfoDir               ----- 00120 00121 00804
$KPSInfoExists            ----- 00122 00632 00804
$KPSInfoFileName          ----- 00119 00121 00804
$KPSInfoPath              ----- 00121 00122 00804
$Key                      ----- 00792 00796 00797
$Lines                    ----- 01027 01028 01029 01030 01031 01032 01033 01034 01035 01036 01037 01038 01040 01043 
                                01044
$List                     ----- 00581 00584 00585 00586 00587 00588 00590 00591 00595 00598
$ListStates               ----- 00470 00472 00473 00474 00475 00476 00477 00478 00482 00491 00494 00495 00496
$ListVisble               ----- 00493 00496 00503 00505
$LogArchiveNetDir         ----- 00215 00216 00218 00519
$LogArchiveNetExists      ----- 00217
$LogArchiveNetFileName    ----- 00214 00216
$LogArchiveNetPath        ----- 00216 00217
$LogDir                   ----- 00198 00199 00201 00510
$LogExists                ----- 00200
$LogFileID                ----- 00195 00509 00513 00514 00542 00543 00545
$LogFileName              ----- 00197 00199 00509 00510 00511
$LogGlobalNetDir          ----- 00210 00211
$LogGlobalNetExists       ----- 00212
$LogGlobalNetFileName     ----- 00209 00211
$LogGlobalNetPath         ----- 00211 00212 00413 00518 00520
$LogNetDir                ----- 00204 00205 00207 00231 00241 00511
$LogNetExists             ----- 00206
$LogNetFileName           ----- 00203 00205
$LogNetPath               ----- 00205 00206 00412 00511 00517
$LogPath                  ----- 00199 00200 00411 00510 00512 00516
$LogScrapeDir             ----- 00236 00237
$LogScrapeExists          ----- 00238
$LogScrapeFileName        ----- 00235 00237
$LogScrapeNetDir          ----- 00241 00242
$LogScrapeNetExists       ----- 00243
$LogScrapeNetFileName     ----- 00240 00242
$LogScrapeNetPath         ----- 00242 00243 00945
$LogScrapePath            ----- 00237 00238 00936 00945 00947
$LogScreenCapDir          ----- 00246 00247 00249 00593
$LogScreenCapExists       ----- 00248
$LogScreenCapFileName     ----- 00245 00247
$LogScreenCapNetDir       ----- 00252 00253 00255 00567 00570
$LogScreenCapNetExists    ----- 00254
$LogScreenCapNetFileName  ----- 00251 00253
$LogScreenCapNetPath      ----- 00253 00254
$LogScreenCapPath         ----- 00247 00248
$LogSpawnStatsNetDir      ----- 00226 00227
$LogSpawnStatsNetExists   ----- 00228
$LogSpawnStatsNetFileName  ----- 00225 00227
$LogSpawnStatsNetPath     ----- 00227 00228
$LowSpaceThresholdPerc    ----- 00271 00526 00882
$MB_ICONWARNING           ----- 00840 00920
$MB_SYSTEMMODAL           ----- 00840 00920
$MB_YESNO                 ----- 00840
$MEM_AVAILPAGEFILE        ----- 00992
$MEM_AVAILPHYSRAM         ----- 00990
$MEM_AVAILVIRTUAL         ----- 00994
$MEM_LOAD                 ----- 00988
$MEM_TOTALPAGEFILE        ----- 00991
$MEM_TOTALPHYSRAM         ----- 00989
$MEM_TOTALVIRTUAL         ----- 00993
$MacroAutoIt              ----- 00261
$MacroDirectory           ----- 00262
$MacroSystemInfo          ----- 00263
$MailAddresses            ----- 00272 00528 00529 00886 00887 00888
$MetaData                 ----- 00977 00980 00982 01004
$MetaEventLogCount        ----- 00997 01014
$MetaEventLogFull         ----- 00996 01013
$MetaEventLogOldest       ----- 00998 01015
$MetaIdleTime             ----- 00985 01005
$MetaMemAvailPageFile     ----- 00992 01010
$MetaMemAvailPhysRam      ----- 00990 01008
$MetaMemAvailVirtual      ----- 00994 01012
$MetaMemLoad              ----- 00988 01006
$MetaMemTotalPageFile     ----- 00991 01009
$MetaMemTotalPhysRam      ----- 00989 01007
$MetaMemTotalVirtual      ----- 00993 01011
$MetaProcessCount         ----- 00930 00931
$MetaProcessCountChrome   ----- 01000 01016
$MetaProcessCountFusionFX  ----- 01002 01018
$MetaProcessCountJavaw    ----- 01001 01017
$MsgBoxTimeout            ----- 00091 00840
$Name                     ----- 00810 00811 00812 00818 00819 00820
$NetPhoneClientDir        ----- 00135 00136
$NetPhoneClientExists     ----- 00137 00635
$NetPhoneClientFileName   ----- 00134 00136 00553
$NetPhoneClientPath       ----- 00136 00137
$NetPhoneUser             ----- 00110 00575 00576 00977
$NetPhoneUserChecksum     ----- 00109 00566 00567 00570 00575 00577
$Password                 ----- 00818 00821
$Path                     ----- 00810 00813 00818 00821
$PowerkatalogDir          ----- 00125 00126
$PowerkatalogExists       ----- 00127 00633
$PowerkatalogFileName     ----- 00124 00126
$PowerkatalogPath         ----- 00126 00127
$ProcessName              ----- 00926 00927 00929
$PromScrapeTargetsDir     ----- 00345 00346 00348 01041
$PromScrapeTargetsExists  ----- 00347
$PromScrapeTargetsFileName  ----- 00344 00346
$PromScrapeTargetsPath    ----- 00346 00347
$RUN_LOGON_NETWORK        ----- 00821
$RootDir                  ----- 00141 00142 00146 00156 00166
$RootExists               ----- 00143
$RootFileName             ----- 00140 00142
$RootPath                 ----- 00142 00143
$SHDUpdaterDir            ----- 00130 00131
$SHDUpdaterExists         ----- 00132 00634
$SHDUpdaterFileName       ----- 00129 00131
$SHDUpdaterPath           ----- 00131 00132
$STR_STRIPLEADING         ----- 00590
$STR_STRIPTRAILING        ----- 00590
$ScrapeComplete           ----- 00276 00935 00937 00942 00952
$ScreenCaptureWinActivate  ----- 00108 00556 00574
$ScreenCaptureWnd         ----- 00107 00590
$Section                  ----- 00792 00794 00796 00797
$ShowFlag                 ----- 00810 00813
$SmtpMailEHLO             ----- 00267 00910
$SmtpMailFirst            ----- 00268 00910
$SmtpMailSmtpServer       ----- 00266 00531 00910
$SmtpMailTrace            ----- 00269 00910
$SourceDir                ----- 00849 00850 00852 00853
$SourcePath               ----- 00968 00969
$SpawnDir                 ----- 00115 00116 00803
$SpawnExists              ----- 00117 00631 00803
$SpawnFileName            ----- 00114 00116 00643 00803
$SpawnPath                ----- 00116 00117 00643 00803
$StartTimer               ----- 00094 00095 00096 00097 00098 00099 00100 00101 00102
$T1                       ----- 00089
$T2                       ----- 00090
$Text                     ----- 00407 00408 00409 00411 00412 00413
$Timer                    ----- 00616 00617 00619
$Timer1                   ----- 00095 00395
$Timer2                   ----- 00096 00396
$Timer3                   ----- 00097 00397
$Timer4                   ----- 00098 00398
$Timer5                   ----- 00099 00399
$Timer6                   ----- 00100 00400
$Timer7                   ----- 00101 00401
$Timer8                   ----- 00102
$TrayTipTimeout           ----- 00092
$UBOUND_COLUMNS           ----- 01066 01067
$UBOUND_DIMENSIONS        ----- 01059 01060
$UBOUND_ROWS              ----- 01065 01067
$UserName                 ----- 00818 00820 00821
$Value                    ----- 00611 00612 00613 00792 00796 00797
$Var                      ----- 00611 00612
$WIN_STATE_ACTIVE         ----- 00482 00586
$WIN_STATE_ENABLED        ----- 00482
$WIN_STATE_EXISTS         ----- 00482
$WIN_STATE_MAXIMIZED      ----- 00482 00598
$WIN_STATE_MINIMIZED      ----- 00482 00572 00595
$WIN_STATE_VISIBLE        ----- 00482 00495
$Warning                  ----- 00833 00840 00913 00920
$WmiExporter1PID          ----- 00277 00805
$WmiExporterCollectorTextfileDir  ----- 00337 00340 00354 00973
$WmiExporterCollectorsEnabled  ----- 00309 00354
$WmiExporterLocalDir      ----- 00295 00296 00337 00805
$WmiExporterLocalExists   ----- 00297 00805 00967 00970
$WmiExporterLocalFileName  ----- 00294 00296 00805 00935 00966
$WmiExporterLocalPath     ----- 00296 00297 00805 00969 00970
$WmiExporterMetadataArray  ----- 00351 01004 01005 01006 01007 01008 01009 01010 01011 01012 01013 01014 01015 01016 
                                01017 01018 01019 01021 01022
$WmiExporterMetadataArrayRet  ----- 00352 01020 01021
$WmiExporterMetadataDir   ----- 00340 00341
$WmiExporterMetadataExists  ----- 00342
$WmiExporterMetadataFileName  ----- 00339 00341
$WmiExporterMetadataPath  ----- 00341 00342 01020 01022
$WmiExporterMetadataString  ----- 00350 00534 00535 00979 00980
$WmiExporterParams        ----- 00354 00374 00805
$WmiExporterX32GlobalNetSetupDir  ----- 00300 00301
$WmiExporterX32GlobalNetSetupExists  ----- 00302
$WmiExporterX32GlobalNetSetupFileName  ----- 00299 00301
$WmiExporterX32GlobalNetSetupPath  ----- 00301 00302 00968
$WmiExporterX64GlobalNetSetupDir  ----- 00305 00306
$WmiExporterX64GlobalNetSetupExists  ----- 00307
$WmiExporterX64GlobalNetSetupFileName  ----- 00304 00306
$WmiExporterX64GlobalNetSetupPath  ----- 00306 00307 00968
$aArray                   ----- 00868 00873
$aArray1                  ----- 01051 01054 01059 01065 01066 01078 01087 01098 01107
$aArray2                  ----- 01051 01054 01060 01067 01088 01099 01107
$aComputerSystemProduct   ----- 00648 00649 00650
$aList                    ----- 00468 00480 00481 00482
$aMemStats                ----- 00987 00988 00989 00990 00991 00992 00993 00994
$aPos                     ----- 00560 00561 00562 00563 00564 00565 00566 00570
$aProcessList             ----- 00927 00930
$aReturn                  ----- 01119 01125 01126 01128 01130
$asBody                   ----- 00900 00901 00902 00903 00904 00905 00906 00907 00908 00909 00910 00913
$hDownload                ----- 00275 00936 00943 00944 00950 00951
$hEventLog                ----- 00417 00418 00419 00420 00421
$hWnd                     ----- 00551 00555 00557 00560 00572 00582 00591 00592 00593 00596 00599 00605 00606 00607 
                                00608
$hWndActive               ----- 00550 00574 00583 00588 00605
$hWndActivePid            ----- 00112 00606 00637
$i                        ----- 00480 00481 00482 00494 00495 00496 00527 00528 00529 00584 00585 00586 00587 00588 
                                00590 00591 00593 00595 00598 00885 00886 00887 00888 01076 01078 01085 01087 01088 
                                01097 01098 01099
$iBytes                   ----- 00867 00869 00871 00873
$iCols                    ----- 01066 01067 01077 01086 01096
$iDims                    ----- 01059 01060
$iErr                     ----- 00911 00913
$iFreeSpace               ----- 00879 00881 00888 00896 00908
$iFreeSpacePerc           ----- 00881 00882 00888 00896 00899 00909
$iIndex                   ----- 00868 00870 00873
$iMode                    ----- 01051 01073
$iResponse                ----- 00910 00912
$iRows                    ----- 01065 01067 01076 01085 01097
$iState                   ----- 00479 00481 00482 00555 00572
$iTotalSpace              ----- 00880 00881 00888 00896 00908
$j                        ----- 01077 01078 01086 01087 01088 01096 01098 01099
$oColItems                ----- 01119 01122 01123 01124
$oObjectItem              ----- 01124 01125 01126
$oWMIService              ----- 01119 01121 01122
$sDir                     ----- 00928 00929
$sDrive                   ----- 00928 00929
$sExtension               ----- 00928 00929
$sFileName                ----- 00928 00929 00930
$sFromAddress             ----- 00898 00910
$sFromName                ----- 00897 00910
$sLabel                   ----- 00877 00888 00896 00907
$sString_1                ----- 01071 01087 01090 01098 01101
$sString_2                ----- 01071 01088 01090 01099 01101
$sSubject                 ----- 00899 00910
$sToAddress               ----- 00896 00910
0                         ----- 00070 00093 00269 00275 00278 00394 00403 00472 00473 00474 00475 00476 00477 00478 
                                00480 00482 00491 00494 00495 00496 00503 00527 00528 00529 00544 00545 00561 00563 
                                00565 00566 00570 00576 00577 00584 00585 00587 00590 00622 00629 00630 00631 00632 
                                00633 00634 00635 00636 00637 00639 00640 00641 00643 00649 00650 00652 00653 00654 
                                00655 00656 00657 00658 00659 00660 00662 00663 00664 00665 00666 00667 00668 00670 
                                00671 00672 00673 00674 00675 00676 00677 00679 00680 00681 00682 00683 00684 00685 
                                00686 00687 00688 00689 00690 00692 00693 00694 00695 00696 00697 00698 00699 00700 
                                00701 00702 00703 00704 00705 00706 00708 00709 00710 00711 00815 00868 00885 00886 
                                00887 00888 00900 00912 00930 00937 00951 00996 01019 01040 01051 01055 01061 01068 
                                01075 01076 01077 01079 01085 01086 01091 01096 01097 01102 01108 01125 01130
0x30                      ----- 01122
0x7FFFFFFFFFFFFFFF        ----- 00104
0x8000000000000000        ----- 00103
1                         ----- 00044 00062 00261 00262 00263 00268 00276 00395 00399 00400 00404 00470 00472 00480 
                                00481 00482 00491 00493 00494 00496 00503 00513 00527 00529 00562 00564 00566 00570 
                                00584 00588 00591 00650 00870 00883 00885 00886 00952 00996 01004 01019 01022 01027 
                                01040 01044 01055 01076 01077 01084 01085 01086 01096 01097 01114 01126 01130
10                        ----- 00272 00393 00398 01013
100                       ----- 00518 00881
1023                      ----- 00869
1024                      ----- 00518 00871 00908 00989 00990 00991 00992 00993 00994
11                        ----- 01014
12                        ----- 01015
13                        ----- 01016
14                        ----- 00847 01017
15                        ----- 00092 00401 00564 01018
15e3                      ----- 00089 00090 00395
16                        ----- 00351
174                       ----- 00563
1e3                       ----- 00512 00985
2                         ----- 00261 00262 00263 00272 00401 00473 00563 00566 00570 00586 00888 00908 00989 00990 
                                00991 00992 00993 00994 01005 01061 01095 01119
250                       ----- 00558
3                         ----- 00474 00495 00562 00564 00566 00570 00595 01006 01021 01043 01068 01106
300                       ----- 00394
3000                      ----- 00889
30e3                      ----- 00399 00400
4                         ----- 00475 00598 01007 01079 01091 01102 01108
42                        ----- 00392
5                         ----- 00091 00396 00397 00476 00493 00496 00526 01008
500                       ----- 00403
54                        ----- 00562
57                        ----- 00561
5e3                       ----- 00363 00390
6                         ----- 00477 00496 01009
60                        ----- 00091
60e3                      ----- 00396 00397 00398 00401
7                         ----- 00478 00496 01010
8                         ----- 00470 01011
9                         ----- 00527 00885 01012
@AppDataCommonDir         ----- 00662
@AppDataDir               ----- 00670
@AutoItExe                ----- 00657
@AutoItPID                ----- 00658
@AutoItVersion            ----- 00659
@AutoItX64                ----- 00660
@CPUArch                  ----- 00692
@CRLF                     ----- 00087 00409 00833 00913
@ComSpec                  ----- 00690
@CommonFilesDir           ----- 00686
@Compiled                 ----- 00363 00374 00390 00454 00461 00652
@ComputerName             ----- 00105 00204 00267 00413 00534 00536 00628 00701 00899 00902
@DesktopCommonDir         ----- 00663
@DesktopDepth             ----- 00710
@DesktopDir               ----- 00672
@DesktopHeight            ----- 00708
@DesktopRefresh           ----- 00711
@DesktopWidth             ----- 00709
@DocumentsCommonDir       ----- 00664
@FavoritesCommonDir       ----- 00665
@FavoritesDir             ----- 00674
@HomeDrive                ----- 00285 00295 00679 00877 00879 00880 00907
@HomePath                 ----- 00680
@HomeShare                ----- 00681
@IPAddress1               ----- 00628 00629 00703 00903
@IPAddress2               ----- 00704 00904
@IPAddress3               ----- 00705 00905
@IPAddress4               ----- 00706 00906
@KBLayout                 ----- 00693
@LocalAppDataDir          ----- 00671
@LogonDNSDomain           ----- 00682
@LogonDomain              ----- 00683
@LogonServer              ----- 00684
@MDAY                     ----- 00519 00832 00847 00883 00884
@MIN                      ----- 00519
@MON                      ----- 00519 00832 00847 00883 00884
@MSEC                     ----- 00519
@MUILang                  ----- 00694
@MyDocumentsDir           ----- 00115 00673
@OSArch                   ----- 00695 00968
@OSBuild                  ----- 00699
@OSLang                   ----- 00696
@OSServicePack            ----- 00700
@OSType                   ----- 00697
@OSVersion                ----- 00698
@ProgramFilesDir          ----- 00120 00125 00130 00135 00685
@ProgramsCommonDir        ----- 00666
@ProgramsDir              ----- 00675
@SEC                      ----- 00519
@SW_HIDE                  ----- 00810
@SW_MAXIMIZE              ----- 00599
@SW_MINIMIZE              ----- 00572 00596
@ScriptDir                ----- 00151 00654
@ScriptFullPath           ----- 00106 00655
@ScriptName               ----- 00653
@StartMenuCommonDir       ----- 00667
@StartMenuDir             ----- 00676
@StartupCommonDir         ----- 00668
@SystemDir                ----- 00688
@TempDir                  ----- 00689
@UserName                 ----- 00413 00702
@UserProfileDir           ----- 00257 00677
@WindowsDir               ----- 00687
@WorkingDir               ----- 00656
@YEAR                     ----- 00519 00832 00847 00883 00884
@error                    ----- 00552 00601 00854 00911
#### ActiveWinTitle       00111
#### AkkDir               00151
#### AkkExists            00153
#### AkkFileName          00150
#### AkkNetDir            00156
#### AkkNetExists         00158
#### AkkNetFileName       00155
#### AkkNetPath           00157
#### AkkNetTime           00460
#### AkkPath              00152
#### AkkRootDir           00146
#### AkkRootExists        00148
#### AkkRootFileName      00145
#### AkkRootPath          00147
#### AkkTime              00459
#### AkkUpdaterDir        00161
#### AkkUpdaterExists     00163
#### AkkUpdaterFileName   00160
#### AkkUpdaterNetDir     00166
#### AkkUpdaterNetExists  00168
#### AkkUpdaterNetFileName  00165
#### AkkUpdaterNetPath    00167
#### AkkUpdaterNetTime    00453
#### AkkUpdaterPath       00162
#### AkkUpdaterTime       00452
#### AkkVersion           00106
And                       ----- 00401 00425 00428 00431 00454 00461 00495 00567 00811 00819 00886 00935 00979
Array                     ----- 00036
#### ArrayDelimItem       00260
AutoItConstants           ----- 00028
ByRef                     ----- 00611 00616 01051
Case                      ----- 01075 01084 01095 01106
#### ComputerName         00105
Const                     ----- 00089 00090 00091 00092 00103 00104 00105 00106 00107 00108 00114 00115 00116 00117 
                                00119 00120 00121 00122 00124 00125 00126 00127 00129 00130 00131 00132 00134 00135 
                                00136 00137 00140 00141 00142 00143 00145 00146 00147 00148 00150 00151 00152 00153 
                                00155 00156 00157 00158 00160 00161 00162 00165 00166 00167 00168 00170 00171 00172 
                                00173 00175 00176 00177 00180 00181 00182 00183 00185 00186 00187 00190 00191 00192 
                                00193 00198 00204 00210 00215 00220 00221 00222 00223 00225 00226 00227 00228 00230 
                                00231 00232 00233 00235 00236 00237 00238 00240 00241 00242 00243 00245 00246 00247 
                                00248 00251 00252 00253 00254 00257 00258 00260 00267 00268 00269 00284 00285 00286 
                                00289 00290 00291 00292 00294 00295 00296 00299 00300 00301 00302 00304 00305 00306 
                                00307 00309 00337 00339 00340 00341 00344 00345 00346 00347 00354 00833 00853 00877 
                                00879 00880 00881 00913 01051
#### Const$aArray2        01052
#### CurrentFile          01040
#### Cycle                00093
Date                      ----- 00039
Debug                     ----- 00035
Default                   ----- 00566 00572 00596 00599 00853
#### Delay                00616
#### Dest                 00519
#### DestDir              00849
#### Diff                 00617
Dir                       00810 00818
#### Domain               00818
#### DownloadsDir         00257
#### DownloadsOldDir      00258
Else                      ----- 00554 00946
EndFunc                   ----- 00414 00422 00465 00506 00522 00539 00547 00578 00609 00614 00623 00790 00799 00808 
                                00816 00823 00844 00848 00860 00864 00874 00894 00922 00932 00939 00955 00963 00974 
                                01024 01046 01116 01131
EndIf                     ----- 00402 00427 00430 00433 00441 00450 00457 00464 00501 00515 00521 00532 00537 00538 
                                00546 00559 00571 00573 00589 00594 00597 00600 00602 00603 00621 00795 00814 00822 
                                00842 00843 00858 00859 00890 00892 00893 00921 00938 00949 00953 00954 00961 00962 
                                00971 00972 00981 01023 01045 01056 01062 01069 01080 01092 01103 01109 01129
EndSwitch                 ----- 01111
EventLog                  ----- 00033
#### EventLogCount        00281
#### EventLogFull         00280
#### EventLogOldest       00282
#### ExactFileDir         00285
#### ExactFileExists      00287
#### ExactFileFileName    00284
#### ExactFileNetDir      00290
#### ExactFileNetExists   00292
#### ExactFileNetFileName  00289
#### ExactFileNetPath     00291
#### ExactFilePath        00286
Exists                    00810 00818
False                     ----- 00107 00108
File                      ----- 00037
FileConstants             ----- 00031
#### FileName             00792
#### FilePath             01042
#### FolderList           00853
For                       ----- 00480 00494 00527 00584 00855 00885 01076 01077 01085 01086 01096 01097 01124
Func                      ----- 00407 00416 00424 00467 00508 00524 00541 00549 00580 00611 00616 00625 00792 00802 
                                00810 00818 00826 00846 00849 00862 00867 00876 00896 00926 00934 00941 00957 00965 
                                00976 01026 01051 01118
Global                    ----- 00089 00090 00091 00092 00093 00094 00095 00096 00097 00098 00099 00100 00101 00102 
                                00103 00104 00105 00106 00107 00108 00109 00110 00111 00112 00114 00115 00116 00117 
                                00119 00120 00121 00122 00124 00125 00126 00127 00129 00130 00131 00132 00134 00135 
                                00136 00137 00140 00141 00142 00143 00145 00146 00147 00148 00150 00151 00152 00153 
                                00155 00156 00157 00158 00160 00161 00162 00163 00165 00166 00167 00168 00170 00171 
                                00172 00173 00175 00176 00177 00178 00180 00181 00182 00183 00185 00186 00187 00188 
                                00190 00191 00192 00193 00195 00197 00198 00199 00200 00203 00204 00205 00206 00209 
                                00210 00211 00212 00214 00215 00216 00217 00220 00221 00222 00223 00225 00226 00227 
                                00228 00230 00231 00232 00233 00235 00236 00237 00238 00240 00241 00242 00243 00245 
                                00246 00247 00248 00251 00252 00253 00254 00257 00258 00260 00261 00262 00263 00266 
                                00267 00268 00269 00271 00272 00275 00276 00277 00278 00280 00281 00282 00284 00285 
                                00286 00287 00289 00290 00291 00292 00294 00295 00296 00297 00299 00300 00301 00302 
                                00304 00305 00306 00307 00309 00337 00339 00340 00341 00342 00344 00345 00346 00347 
                                00350 00351 00352 00354
IdentifyingNumber         ----- 01126
#### IdleTime             00278
If                        ----- 00201 00207 00218 00249 00255 00348 00363 00374 00390 00395 00396 00397 00398 00399 
                                00400 00401 00425 00428 00431 00437 00445 00454 00461 00495 00512 00518 00525 00533 
                                00535 00543 00552 00553 00556 00567 00572 00574 00585 00586 00590 00592 00595 00598 
                                00601 00618 00793 00811 00819 00827 00840 00850 00851 00854 00882 00886 00903 00904 
                                00905 00906 00912 00935 00942 00943 00944 00945 00958 00959 00967 00969 00973 00979 
                                01021 01043 01054 01060 01067 01078 01090 01101 01107 01123
In                        ----- 00855 01124
Inet                      ----- 00040
#### IniGlobalDir         00176
#### IniGlobalExDir       00186
#### IniGlobalExExists    00188
#### IniGlobalExFileName  00185
#### IniGlobalExNetDir    00191
#### IniGlobalExNetExists  00193
#### IniGlobalExNetFileName  00190
#### IniGlobalExNetPath   00192
#### IniGlobalExNetTime   00444
#### IniGlobalExPath      00187
#### IniGlobalExTime      00443
#### IniGlobalExists      00178
#### IniGlobalFileName    00175
#### IniGlobalNetDir      00181
#### IniGlobalNetExists   00183
#### IniGlobalNetFileName  00180
#### IniGlobalNetLogDir   00221
#### IniGlobalNetLogExists  00223
#### IniGlobalNetLogFileName  00220
#### IniGlobalNetLogInstanceDir  00231
#### IniGlobalNetLogInstanceExists  00233
#### IniGlobalNetLogInstanceFileName  00230
#### IniGlobalNetLogInstancePath  00232
#### IniGlobalNetLogPath  00222
#### IniGlobalNetPath     00182
#### IniGlobalNetTime     00436
#### IniGlobalPath        00177
#### IniGlobalTime        00435
#### IniLocalDir          00171
#### IniLocalExists       00173
#### IniLocalFileName     00170
#### IniLocalPath         00172
#### IntMax               00104
#### IntMin               00103
#### IsSectionAddedToKey  00792
#### KPSInfoDir           00120
#### KPSInfoExists        00122
#### KPSInfoFileName      00119
#### KPSInfoPath          00121
#### Key                  00792
#### Lines                01028
#### List                 00581
#### ListStates           00470
#### ListVisble           00493
Local                     ----- 00417 00435 00436 00443 00444 00452 00453 00459 00460 00468 00470 00479 00493 00519 
                                00550 00551 00555 00560 00581 00582 00583 00617 00648 00833 00853 00868 00877 00879 
                                00880 00881 00897 00898 00899 00900 00910 00911 00913 00927 00928 00930 00968 00977 
                                00985 00987 00988 00989 00990 00991 00992 00993 00994 00996 00997 00998 01000 01001 
                                01002 01027 01039 01041 01059 01065 01066 01071 01119
#### LogArchiveNetDir     00215
#### LogArchiveNetExists  00217
#### LogArchiveNetFileName  00214
#### LogArchiveNetPath    00216
#### LogDir               00198
#### LogExists            00200
#### LogFileID            00195
#### LogFileName          00197
#### LogGlobalNetDir      00210
#### LogGlobalNetExists   00212
#### LogGlobalNetFileName  00209
#### LogGlobalNetPath     00211
#### LogNetDir            00204
#### LogNetExists         00206
#### LogNetFileName       00203
#### LogNetPath           00205
#### LogPath              00199
#### LogScrapeDir         00236
#### LogScrapeExists      00238
#### LogScrapeFileName    00235
#### LogScrapeNetDir      00241
#### LogScrapeNetExists   00243
#### LogScrapeNetFileName  00240
#### LogScrapeNetPath     00242
#### LogScrapePath        00237
#### LogScreenCapDir      00246
#### LogScreenCapExists   00248
#### LogScreenCapFileName  00245
#### LogScreenCapNetDir   00252
#### LogScreenCapNetExists  00254
#### LogScreenCapNetFileName  00251
#### LogScreenCapNetPath  00253
#### LogScreenCapPath     00247
#### LogSpawnStatsNetDir  00226
#### LogSpawnStatsNetExists  00228
#### LogSpawnStatsNetFileName  00225
#### LogSpawnStatsNetPath  00227
#### LowSpaceThresholdPerc  00271
#### MacroAutoIt          00261
#### MacroDirectory       00262
#### MacroSystemInfo      00263
#### MailAddresses        00272
#### MetaData             00977
#### MetaEventLogCount    00997
#### MetaEventLogFull     00996
#### MetaEventLogOldest   00998
#### MetaIdleTime         00985
#### MetaMemAvailPageFile  00992
#### MetaMemAvailPhysRam  00990
#### MetaMemAvailVirtual  00994
#### MetaMemLoad          00988
#### MetaMemTotalPageFile  00991
#### MetaMemTotalPhysRam  00989
#### MetaMemTotalVirtual  00993
#### MetaProcessCount     00930
#### MetaProcessCountChrome  01001
#### MetaProcessCountFusionFX  01003
#### MetaProcessCountJavaw  01002
Misc                      ----- 00038
MsgBoxConstants           ----- 00029
#### MsgBoxTimeout        00091
Name                      00810 00818 01125
#### NetPhoneClientDir    00135
#### NetPhoneClientExists  00137
#### NetPhoneClientFileName  00134
#### NetPhoneClientPath   00136
#### NetPhoneUser         00110
#### NetPhoneUserChecksum  00109
Next                      ----- 00490 00502 00530 00604 00857 00891 01081 01082 01089 01093 01100 01104 01127
Not                       ----- 00201 00207 00218 00249 00255 00348 00374 00425 00428 00431 00567 00811 00819 00851 
                                00854 00942 00958 00967 00973 00979 01021 01043
Or                        ----- 01054 01067
#### Password             00818
Path                      00810 00818
#### PowerkatalogDir      00125
#### PowerkatalogExists   00127
#### PowerkatalogFileName  00124
#### PowerkatalogPath     00126
#### ProcessName          00926
#### PromScrapeTargetsDir  00345
#### PromScrapeTargetsExists  00347
#### PromScrapeTargetsFileName  00344
#### PromScrapeTargetsPath  00346
Return                    ----- 00505 00608 00613 00620 00622 00813 00815 00863 00873 00931 01055 01061 01068 01079 
                                01091 01102 01108 01114 01128 01130
#### RootDir              00141
#### RootExists           00143
#### RootFileName         00140
#### RootPath             00142
#### SHDUpdaterDir        00130
#### SHDUpdaterExists     00132
#### SHDUpdaterFileName   00129
#### SHDUpdaterPath       00131
#### ScrapeComplete       00276
ScreenCapture             ----- 00032
#### ScreenCaptureWinActivate  00108
#### ScreenCaptureWnd     00107
#### Section              00792
#### ShowFlag             00810
#### SmtpMailEHLO         00267
#### SmtpMailFirst        00268
#### SmtpMailSmtpServer   00266
#### SmtpMailTrace        00269
#### SourceDir            00849
#### SourcePath           00968
#### SpawnDir             00115
#### SpawnExists          00117
#### SpawnFileName        00114
#### SpawnPath            00116
#### StartTimer           00094
Step                      ----- 00527 00885
Switch                    ----- 01073
#### T1                   00089
#### T2                   00090
#### Text                 00407
Then                      ----- 00201 00207 00218 00249 00255 00348 00363 00374 00390 00394 00395 00396 00397 00398 
                                00399 00400 00401 00403 00425 00428 00431 00437 00445 00454 00461 00495 00512 00518 
                                00525 00533 00535 00543 00552 00553 00556 00567 00572 00574 00585 00586 00590 00592 
                                00595 00598 00601 00618 00793 00811 00819 00827 00840 00850 00851 00854 00882 00883 
                                00886 00903 00904 00905 00906 00912 00935 00942 00943 00944 00945 00958 00959 00967 
                                00969 00973 00979 01021 01043 01054 01060 01067 01078 01090 01101 01107 01123
#### Timer                00616
#### Timer1               00095
#### Timer2               00096
#### Timer3               00097
#### Timer4               00098
#### Timer5               00099
#### Timer6               00100
#### Timer7               00101
#### Timer8               00102
Timers                    ----- 00034
To                        ----- 00480 00494 00527 00584 00885 01076 01077 01085 01086 01096 01097
TrayConstants             ----- 00030
#### TrayTipTimeout       00092
True                      ----- 00853
#### UserName             00818
Value                     00611 00792
#### Var                  00611
WEnd                      ----- 00405 00872
Warning                   00833 00913
While                     ----- 00392 00869
#### WmiExporter1PID      00277
#### WmiExporterCollectorTextfileDir  00337
#### WmiExporterCollectorsEnabled  00309
#### WmiExporterLocalDir  00295
#### WmiExporterLocalExists  00297
#### WmiExporterLocalFileName  00294
#### WmiExporterLocalPath  00296
#### WmiExporterMetadataArray  00351
#### WmiExporterMetadataArrayRet  00352
#### WmiExporterMetadataDir  00340
#### WmiExporterMetadataExists  00342
#### WmiExporterMetadataFileName  00339
#### WmiExporterMetadataPath  00341
#### WmiExporterMetadataString  00350
#### WmiExporterParams    00354
#### WmiExporterX32GlobalNetSetupDir  00300
#### WmiExporterX32GlobalNetSetupExists  00302
#### WmiExporterX32GlobalNetSetupFileName  00299
#### WmiExporterX32GlobalNetSetupPath  00301
#### WmiExporterX64GlobalNetSetupDir  00305
#### WmiExporterX64GlobalNetSetupExists  00307
#### WmiExporterX64GlobalNetSetupFileName  00304
#### WmiExporterX64GlobalNetSetupPath  00306
#### aArray               00868
#### aArray1              01052
#### aComputerSystemProduct  00648
#### aList                00468
#### aMemStats            00987
#### aPos                 00560
#### aProcessList         00927
#### aReturn              01120
#### asBody               00900
au3                       ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036 00037 00038 00039 00040
#### dieSiebenötigen     00833
#### hDownload            00275
#### hEventLog            00417
hWnd                      00551 00582
hWndActive                00550 00583
#### hWndActivePid        00112
#### iBytes               00867
#### iCols                01067
#### iDims                01060
#### iErr                 00911
iFreeSpace                00879 00896
iFreeSpacePerc            00881 00896
#### iIndex               00868
#### iMode                01052
#### iResponse            00910
#### iRows                01066
iState                    00479 00555
iTotalSpace               00880 00896
#### ip_address           00977
#### kopierenSiediesebitteaneinenanderenOrt.'&@CRLF&'AlleDateienausdemOrdnerwurdenbereitsindenOrdnerverschoben.'&@CRLF&'DerOrdneristübereineVerknüpfunginzuerreichen.'&@CRLF&'AlleIhreDateiendieimOrdnerble  00833
#### netphone_user        00977
#### oColItems            01120
#### oWMIService          01120
#### sDir                 00928
#### sDrive               00928
#### sExtension           00928
#### sFileName            00928
#### sFromAddress         00898
#### sFromName            00897
sLabel                    00877 00896
#### sString_1            01072
#### sString_2            01072
#### sSubject             00899
#### sToAddress           00896
#### werdendemnächstunwiderruflichGELÖSCHT!'&@CRLF&'BittesichtenundsichernSieambestenjetztsofortIhreweiterhinbenötigtenDateien.'&@CRLF&'SollderOrdnerjetztgeöffnetwerden?'&@CRLF  00833
== Sort Func Names Within #regions =====================================================================
 --------------- Current sequence  ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000041   #Region - Options
0000000086   #EndRegion - Options
0000000088   #Region Globals 1
0000000138   #EndRegion Globals 1
0000000139   #Region Globals 2
0000000264   #EndRegion Globals 2
0000000265   #Region Globals SMTP
0000000273   #EndRegion Globals SMTP
0000000274   #Region Globals Prometheus WMI Exporter
0000000359   #EndRegion Globals Prometheus WMI Exporter
0000000360   #Region
0000000407   Func ConsoleLog($Text)
0000000414   EndFunc   ;==>ConsoleLog
0000000416   Func EventLog()
0000000422   EndFunc   ;==>EventLog
0000000424   Func GetGlobalConfig()
0000000465   EndFunc   ;==>GetGlobalConfig
0000000467   Func GetWinList()
0000000506   EndFunc   ;==>GetWinList
0000000508   Func ManageLogFile()
0000000522   EndFunc   ;==>ManageLogFile
0000000524   Func ReadGlobalConfig()
0000000539   EndFunc   ;==>ReadGlobalConfig
0000000541   Func ReadLocalConfig()
0000000547   EndFunc   ;==>ReadLocalConfig
0000000549   Func ScreenCaptureNetPhoneClient()
0000000578   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000580   Func ScreenCaptureWnd()
0000000609   EndFunc   ;==>ScreenCaptureWnd
0000000611   Func SetVar(ByRef $Var, $Value)
0000000614   EndFunc   ;==>SetVar
0000000616   Func Timeout(ByRef $Timer, $Delay)
0000000623   EndFunc   ;==>Timeout
0000000625   Func WriteLogStartup()
0000000790   EndFunc   ;==>WriteLogStartup
0000000792   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000799   EndFunc   ;==>WriteLogStartupIni
0000000800   #EndRegion
0000000801   #Region CheckAndRunProc
0000000802   Func Check()
0000000808   EndFunc   ;==>Check
0000000810   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000816   EndFunc   ;==>CheckAndRunProc
0000000818   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000823   EndFunc   ;==>CheckAndRunProcAs
0000000824   #EndRegion CheckAndRunProc
0000000825   #Region CleaningDownloads
0000000826   Func CleaningDownloads()
0000000844   EndFunc   ;==>CleaningDownloads
0000000846   Func DownloadsNeedCleaning()
0000000848   EndFunc   ;==>DownloadsNeedCleaning
0000000849   Func FileDirMoveRec($SourceDir, $DestDir)
0000000860   EndFunc   ;==>FileDirMoveRec
0000000862   Func GetDownloadsLastCleaningDate()
0000000864   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000865   #EndRegion CleaningDownloads
0000000866   #Region FreeSpaceCheck
0000000867   Func ByteSuffix($iBytes)
0000000874   EndFunc   ;==>ByteSuffix
0000000876   Func CheckHomeDriveSpaceFree()
0000000894   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000896   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000922   EndFunc   ;==>SendMailLowSpace
0000000923   #EndRegion FreeSpaceCheck
0000000924   #Region WMI Exporter
0000000926   Func MetaProcessCount($ProcessName)
0000000932   EndFunc   ;==>MetaProcessCount
0000000934   Func Scrape()
0000000939   EndFunc   ;==>Scrape
0000000941   Func ScrapeDownload()
0000000955   EndFunc   ;==>ScrapeDownload
0000000957   Func SetupExactFile()
0000000963   EndFunc   ;==>SetupExactFile
0000000965   Func SetupWmiExporter()
0000000974   EndFunc   ;==>SetupWmiExporter
0000000976   Func WriteMetaDataFile()
0000001024   EndFunc   ;==>WriteMetaDataFile
0000001026   Func WriteScrapeTargetFile()
0000001046   EndFunc   ;==>WriteScrapeTargetFile
0000001047   #EndRegion WMI Exporter
0000001048   #Region UDF
0000001051   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000001116   EndFunc   ;==>_ArrayCompare
0000001118   Func _ComputerNameAndModel()
0000001131   EndFunc   ;==>_ComputerNameAndModel
0000001132   #EndRegion UDF
 --------------- New Sequence      ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000041   #Region - Options
0000000086   #EndRegion - Options
0000000088   #Region Globals 1
0000000138   #EndRegion Globals 1
0000000139   #Region Globals 2
0000000264   #EndRegion Globals 2
0000000265   #Region Globals SMTP
0000000273   #EndRegion Globals SMTP
0000000274   #Region Globals Prometheus WMI Exporter
0000000359   #EndRegion Globals Prometheus WMI Exporter
0000000360   #Region
0000000407   Func ConsoleLog($Text)
0000000414   EndFunc   ;==>ConsoleLog
0000000416   Func EventLog()
0000000422   EndFunc   ;==>EventLog
0000000424   Func GetGlobalConfig()
0000000465   EndFunc   ;==>GetGlobalConfig
0000000467   Func GetWinList()
0000000506   EndFunc   ;==>GetWinList
0000000508   Func ManageLogFile()
0000000522   EndFunc   ;==>ManageLogFile
0000000524   Func ReadGlobalConfig()
0000000539   EndFunc   ;==>ReadGlobalConfig
0000000541   Func ReadLocalConfig()
0000000547   EndFunc   ;==>ReadLocalConfig
0000000549   Func ScreenCaptureNetPhoneClient()
0000000578   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000580   Func ScreenCaptureWnd()
0000000609   EndFunc   ;==>ScreenCaptureWnd
0000000611   Func SetVar(ByRef $Var, $Value)
0000000614   EndFunc   ;==>SetVar
0000000616   Func Timeout(ByRef $Timer, $Delay)
0000000623   EndFunc   ;==>Timeout
0000000625   Func WriteLogStartup()
0000000790   EndFunc   ;==>WriteLogStartup
0000000792   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000799   EndFunc   ;==>WriteLogStartupIni
0000000800   #EndRegion
0000000801   #Region CheckAndRunProc
0000000802   Func Check()
0000000808   EndFunc   ;==>Check
0000000810   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000816   EndFunc   ;==>CheckAndRunProc
0000000818   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000823   EndFunc   ;==>CheckAndRunProcAs
0000000824   #EndRegion CheckAndRunProc
0000000825   #Region CleaningDownloads
0000000826   Func CleaningDownloads()
0000000844   EndFunc   ;==>CleaningDownloads
0000000846   Func DownloadsNeedCleaning()
0000000848   EndFunc   ;==>DownloadsNeedCleaning
0000000849   Func FileDirMoveRec($SourceDir, $DestDir)
0000000860   EndFunc   ;==>FileDirMoveRec
0000000862   Func GetDownloadsLastCleaningDate()
0000000864   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000865   #EndRegion CleaningDownloads
0000000866   #Region FreeSpaceCheck
0000000867   Func ByteSuffix($iBytes)
0000000874   EndFunc   ;==>ByteSuffix
0000000876   Func CheckHomeDriveSpaceFree()
0000000894   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000896   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000922   EndFunc   ;==>SendMailLowSpace
0000000923   #EndRegion FreeSpaceCheck
0000000924   #Region WMI Exporter
0000000926   Func MetaProcessCount($ProcessName)
0000000932   EndFunc   ;==>MetaProcessCount
0000000934   Func Scrape()
0000000939   EndFunc   ;==>Scrape
0000000941   Func ScrapeDownload()
0000000955   EndFunc   ;==>ScrapeDownload
0000000957   Func SetupExactFile()
0000000963   EndFunc   ;==>SetupExactFile
0000000965   Func SetupWmiExporter()
0000000974   EndFunc   ;==>SetupWmiExporter
0000000976   Func WriteMetaDataFile()
0000001024   EndFunc   ;==>WriteMetaDataFile
0000001026   Func WriteScrapeTargetFile()
0000001046   EndFunc   ;==>WriteScrapeTargetFile
0000001047   #EndRegion WMI Exporter
0000001048   #Region UDF
0000001051   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000001116   EndFunc   ;==>_ArrayCompare
0000001118   Func _ComputerNameAndModel()
0000001131   EndFunc   ;==>_ComputerNameAndModel
0000001132   #EndRegion UDF
== END Sort Func Names Within #Region - #EndRegion =====================================================

