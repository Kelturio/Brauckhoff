========================================================================================================
===  Tidy report for :C:\Users\bauer\Documents\GitHub\Brauckhoff\src\akk.au3
========================================================================================================

00001    #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_Icon=icons\MyAutoIt3_Blue.ico
00003    #AutoIt3Wrapper_Outfile=..\bin\akk.exe
00004    #AutoIt3Wrapper_Res_Comment=Hallo Werner!
00005    #AutoIt3Wrapper_Res_Description=Akk Brauckhoff Bot
00006    #AutoIt3Wrapper_Res_Fileversion=1.0.0.101
00007    #AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
00008    #AutoIt3Wrapper_Res_ProductName=Akk Brauckhoff Bot
00009    #AutoIt3Wrapper_Res_CompanyName=Sliph Co.
00010    #AutoIt3Wrapper_Res_LegalCopyright=Searinox
00011    #AutoIt3Wrapper_Res_LegalTradeMarks=Akk
00012    #AutoIt3Wrapper_Res_SaveSource=y
00013    #AutoIt3Wrapper_Res_Language=1031
00014    #AutoIt3Wrapper_Res_Field=Made By|Searinox
00015    #AutoIt3Wrapper_Run_AU3Check=n
00016    #AutoIt3Wrapper_AU3Check_Stop_OnWarning=y
00017    #AutoIt3Wrapper_AU3Check_Parameters=-d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -v 1 -v 3
00018    #AutoIt3Wrapper_Run_Before=call "..\compile\before.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00019    #AutoIt3Wrapper_Run_After=call "..\compile\after.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00020    #AutoIt3Wrapper_Run_Tidy=y
00021    #Tidy_Parameters=/tc 4 /gd /reel /sci 9 /kv 0 /bdir "tidy\bdir\" /sf
00022    #AutoIt3Wrapper_Run_Au3Stripper=y
00023    #Au3Stripper_Parameters=/tl /debug /pe /mi=99 /rm /rsln
00024    #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
00025    #cs ----------------------------------------------------------------------------
00026       
00027    #ce ----------------------------------------------------------------------------
00028    #include <AutoItConstants.au3>
00029    #include <MsgBoxConstants.au3>
00030    #include <TrayConstants.au3>
00031    #include <FileConstants.au3>
00032    #include <ScreenCapture.au3>
00033    #include <EventLog.au3>
00034    #include <Timers.au3>
00035    #include <Debug.au3>
00036    #include <Array.au3>
00037    #include <File.au3>
00038    #include <Misc.au3>
00039    #include <Date.au3>
00040    #include <Inet.au3>
00041    #Region - Options
00042    ;~ Opt('CaretCoordMode', 0)				; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.
00043    ;~ Opt('ExpandEnvStrings', 1)			; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).
00044    Opt('ExpandVarStrings', 1)            ; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).
00045    ;~ Opt('FtpBinaryMode', 0)				; 1 = Binary transfer, 0 = ASCII transfer.
00046    ;~ Opt('GUICloseOnESC', 0)				; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).
00047    ; 										  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.
00048    ;~ Opt('GUICoordMode', 2)				; 1 = Absolute coordinates still relative to the dialog box.
00049    ; 										  0 = Relative position to the start of the last control (Upper left corner).
00050    ; 										  2 = Cell positionining relative to current cell.
00051    ;~ Opt('GUIDataSeparatorChar', '')		; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is ''.
00052    ;~ Opt('GUIEventOptions', 1)			; 0 = Windows behavior on click on Minimize, Restore and Maximize.
00053    ;										  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.
00054    ;										  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.
00055    ;										  3 = Combined mode of 1 & 2.
00056    ;~ Opt('GUIOnEventMode', 1)				; 0 = Disable, 1 = Enable.
00057    ;~ Opt('GUIResizeMode', 1)				; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).
00058    ;~ Opt('MouseClickDelay', 10)			; ? = 10 milliseconds by default.
00059    ;~ Opt('MouseClickDownDelay', 10)		; ? = 10 milliseconds by default.
00060    ;~ Opt('MouseClickDragDelay', 250)		; ? = 250 milliseconds by default.
00061    ;~ Opt('MouseCoordMode', 0)				; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.
00062    Opt('MustDeclareVars', 1)            ; 0 = No, 1 = Require pre-declare.
00063    ;~ Opt('OnExitFunc', '')				; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).
00064    ;~ Opt('PixelCoordMode', 2)                ; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.
00065    ;~ Opt('SendAttachMode', 1)				; 0 = Don't attach, 1 = Attach.
00066    ;~ Opt('SendCapslockMode', 0)			; 1 = Store and restore, 0 = Don't store / restore.
00067    ;~ Opt('SendKeyDelay', 5)				; ? = 5 milliseconds by default.
00068    ;~ Opt('SendKeyDownDelay', 1)			; ? = 1 millisecond by default.
00069    ;~ Opt('TCPTimeout', 100)				; ? = 100 milliseconds by default.
00070    Opt('TrayAutoPause', 0)                ; 1 = AutoPausing is On, 0 = AutoPausing is Off.
00071    ;~ Opt('TrayIconDebug', 1)				; 0 = No info, 1 = Debug line info.
00072    ;~ Opt('TrayIconHide', 1)				; 0 = Show, 1 = Hide.
00073    ;~ Opt('TrayMenuMode', 1)				; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,
00074    ;											user created checked items will automatically unchecked, if you double click the tray
00075    ;											icon then the controlid is returned which has the "Default"-style.
00076    ;										  1 = No default menu.
00077    ;										  2 = User created checked items will not automatically unchecked if you click it.
00078    ;										  4 = Don't return the menuitemID which has the "default"-style in
00079    ;											the main contextmenu if you double click the tray icon.
00080    ;~ Opt('TrayOnEventMode', 1)			; 0 = disable, 1 = enable.
00081    ;~ Opt('WinDetectHiddenText', 1)		; 0 = Don't detect, 1=Do detect.
00082    ;~ Opt('WinSearchChildren', 1)			; 0 = No, 1 = Search children also.
00083    ;~ Opt('WinTextMatchMode', 4)			; 1 = Complete / Slow mode, 2 = Quick mode.
00084    ;~ Opt('WinTitleMatchMode', 4)			; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.
00085    ;~ Opt('WinWaitDelay', 250)				; ? = 250 milliseconds by default.
00086    #EndRegion - Options
00087    ConsoleWrite(@CRLF)
00088    #Region Globals 1
00089    Global Const $T1 = 15e3
00090    Global Const $T2 = 15e3
00091    Global Const $MsgBoxTimeout = 60 * 5
00092    Global Const $TrayTipTimeout = 15
00093    Global $Cycle = 0
00094    Global $StartTimer = TimerInit()
00095    Global $Timer1 = $StartTimer
00096    Global $Timer2 = $StartTimer
00097    Global $Timer3 = $StartTimer
00098    Global $Timer4 = $StartTimer
00099    Global $Timer5 = $StartTimer
00100    Global $Timer6 = $StartTimer
00101    Global $Timer7 = $StartTimer
00102    Global $Timer8 = $StartTimer
00103    Global Const $IntMin = 0x8000000000000000
00104    Global Const $IntMax = 0x7FFFFFFFFFFFFFFF
00105    Global Const $ComputerName = StringReplace(StringFormat("%-16s", @ComputerName), " ", ".")
00106    Global Const $AkkVersion = FileGetVersion(@ScriptFullPath)
00107    Global Const $ScreenCaptureWnd = False
00108    Global $NetPhoneUserChecksum = ""
00109    Global $NetPhoneUser
00110    Global $ActiveWinTitle
00111    Global $hWndActivePid
00112    
00113    Global Const $SpawnFileName = "ShadowSpawn.exe"
00114    Global Const $SpawnDir = @MyDocumentsDir & "\Isopedia GmbH\ShadowSpawn\"
00115    Global Const $SpawnPath = $SpawnDir & $SpawnFileName
00116    Global Const $SpawnExists = FileExists($SpawnPath)
00117    
00118    Global Const $KPSInfoFileName = "KPSInfo.exe"
00119    Global Const $KPSInfoDir = @ProgramFilesDir & "\KPS designstudio\KPSInfo\"
00120    Global Const $KPSInfoPath = $KPSInfoDir & $KPSInfoFileName
00121    Global Const $KPSInfoExists = FileExists($KPSInfoPath)
00122    
00123    Global Const $PowerkatalogFileName = "Powerkatalog-Schnittstelle.exe"
00124    Global Const $PowerkatalogDir = @ProgramFilesDir & "\KPS designstudio\Powerkatalog-Schnittstelle\"
00125    Global Const $PowerkatalogPath = $PowerkatalogDir & $PowerkatalogFileName
00126    Global Const $PowerkatalogExists = FileExists($PowerkatalogPath)
00127    
00128    Global Const $SHDUpdaterFileName = "SHDUpdater_min.exe"
00129    Global Const $SHDUpdaterDir = @ProgramFilesDir & "\SHDUpdater\"
00130    Global Const $SHDUpdaterPath = $SHDUpdaterDir & $SHDUpdaterFileName
00131    Global Const $SHDUpdaterExists = FileExists($SHDUpdaterPath)
00132    
00133    Global Const $NetPhoneClientFileName = "NetPhone Client.exe"
00134    Global Const $NetPhoneClientDir = @ProgramFilesDir & "\NetPhone Client\"
00135    Global Const $NetPhoneClientPath = $NetPhoneClientDir & $NetPhoneClientFileName
00136    Global Const $NetPhoneClientExists = FileExists($NetPhoneClientPath)
00137    #EndRegion Globals 1
00138    #Region Globals 2
00139    Global Const $RootFileName = ""
00140    Global Const $RootDir = "\\172.16.128.4\edv\Gerrit\"
00141    Global Const $RootPath = $RootDir & $RootFileName
00142    Global Const $RootExists = FileExists($RootPath)
00143    
00144    Global Const $AkkRootFileName = ""
00145    Global Const $AkkRootDir = $RootDir & "akk\"
00146    Global Const $AkkRootPath = $AkkRootDir & $AkkRootFileName
00147    Global Const $AkkRootExists = FileExists($AkkRootPath)
00148    
00149    Global Const $AkkFileName = "akk.exe"
00150    Global Const $AkkDir = @ScriptDir & "\"
00151    Global Const $AkkPath = $AkkDir & $AkkFileName
00152    Global Const $AkkExists = FileExists($AkkPath)
00153    
00154    Global Const $AkkNetFileName = $AkkFileName
00155    Global Const $AkkNetDir = $RootDir
00156    Global Const $AkkNetPath = $AkkNetDir & $AkkNetFileName
00157    Global Const $AkkNetExists = FileExists($AkkNetPath)
00158    
00159    Global Const $AkkUpdaterFileName = "akkUpdater.exe"
00160    Global Const $AkkUpdaterDir = $AkkDir
00161    Global Const $AkkUpdaterPath = $AkkUpdaterDir & $AkkUpdaterFileName
00162    Global $AkkUpdaterExists = FileExists($AkkUpdaterPath)
00163    
00164    Global Const $AkkUpdaterNetFileName = $AkkUpdaterFileName
00165    Global Const $AkkUpdaterNetDir = $RootDir
00166    Global Const $AkkUpdaterNetPath = $AkkUpdaterNetDir & $AkkUpdaterNetFileName
00167    Global Const $AkkUpdaterNetExists = FileExists($AkkUpdaterNetPath)
00168    
00169    Global Const $IniLocalFileName = "akk.ini"
00170    Global Const $IniLocalDir = $AkkDir
00171    Global Const $IniLocalPath = $IniLocalDir & $IniLocalFileName
00172    Global Const $IniLocalExists = FileExists($IniLocalPath)
00173    
00174    Global Const $IniGlobalFileName = "akkGlobalConfig.ini"
00175    Global Const $IniGlobalDir = $AkkDir
00176    Global Const $IniGlobalPath = $IniGlobalDir & $IniGlobalFileName
00177    Global $IniGlobalExists = FileExists($IniGlobalPath)
00178    
00179    Global Const $IniGlobalNetFileName = $IniGlobalFileName
00180    Global Const $IniGlobalNetDir = $AkkRootDir
00181    Global Const $IniGlobalNetPath = $IniGlobalNetDir & $IniGlobalNetFileName
00182    Global Const $IniGlobalNetExists = FileExists($IniGlobalNetPath)
00183    
00184    Global Const $IniGlobalExFileName = "akkGlobalConfigExtended.ini"
00185    Global Const $IniGlobalExDir = $IniGlobalDir
00186    Global Const $IniGlobalExPath = $IniGlobalExDir & $IniGlobalExFileName
00187    Global $IniGlobalExExists = FileExists($IniGlobalExPath)
00188    
00189    Global Const $IniGlobalExNetFileName = $IniGlobalExFileName
00190    Global Const $IniGlobalExNetDir = $AkkRootDir
00191    Global Const $IniGlobalExNetPath = $IniGlobalExNetDir & $IniGlobalExNetFileName
00192    Global Const $IniGlobalExNetExists = FileExists($IniGlobalExNetPath)
00193    
00194    Global $LogFileID
00195    
00196    Global $LogFileName = ""
00197    Global Const $LogDir = $AkkDir & "log\"
00198    Global $LogPath = $LogDir & $LogFileName
00199    Global $LogExists = FileExists($LogPath)
00200    If Not $LogExists Then DirCreate($LogDir)
00201    
00202    Global $LogNetFileName = ""
00203    Global Const $LogNetDir = $AkkRootDir & "log\" & @ComputerName & "\"
00204    Global $LogNetPath = $LogNetDir & $LogNetFileName
00205    Global $LogNetExists = FileExists($LogNetPath)
00206    If Not $LogNetExists Then DirCreate($LogNetDir)
00207    
00208    Global $LogGlobalNetFileName = "akkGlobal.log"
00209    Global Const $LogGlobalNetDir = $AkkRootDir & "log\"
00210    Global $LogGlobalNetPath = $LogGlobalNetDir & $LogGlobalNetFileName
00211    Global $LogGlobalNetExists = FileExists($LogGlobalNetPath)
00212    
00213    Global $LogArchiveNetFileName = ""
00214    Global Const $LogArchiveNetDir = $AkkRootDir & "log\_archive\"
00215    Global $LogArchiveNetPath = $LogArchiveNetDir & $LogArchiveNetFileName
00216    Global $LogArchiveNetExists = FileExists($LogArchiveNetPath)
00217    If Not $LogArchiveNetExists Then DirCreate($LogArchiveNetDir)
00218    
00219    Global Const $IniGlobalNetLogFileName = "akkGlobal.ini"
00220    Global Const $IniGlobalNetLogDir = $AkkRootDir & "log\"
00221    Global Const $IniGlobalNetLogPath = $IniGlobalNetLogDir & $IniGlobalNetLogFileName
00222    Global Const $IniGlobalNetLogExists = FileExists($IniGlobalNetLogPath)
00223    
00224    Global Const $LogSpawnStatsNetFileName = "akkGlobalSpawnStats.ini"
00225    Global Const $LogSpawnStatsNetDir = $AkkRootDir & "log\"
00226    Global Const $LogSpawnStatsNetPath = $LogSpawnStatsNetDir & $LogSpawnStatsNetFileName
00227    Global Const $LogSpawnStatsNetExists = FileExists($LogSpawnStatsNetPath)
00228    
00229    Global Const $IniGlobalNetLogInstanceFileName = "akkMacro.ini"
00230    Global Const $IniGlobalNetLogInstanceDir = $LogNetDir
00231    Global Const $IniGlobalNetLogInstancePath = $IniGlobalNetLogInstanceDir & $IniGlobalNetLogInstanceFileName
00232    Global Const $IniGlobalNetLogInstanceExists = FileExists($IniGlobalNetLogInstancePath)
00233    
00234    Global Const $LogScrapeFileName = "scrape.prom"
00235    Global Const $LogScrapeDir = $AkkDir & "log\"
00236    Global Const $LogScrapePath = $LogScrapeDir & $LogScrapeFileName
00237    Global Const $LogScrapeExists = FileExists($LogScrapePath)
00238    
00239    Global Const $LogScrapeNetFileName = "scrape.prom"
00240    Global Const $LogScrapeNetDir = $LogNetDir
00241    Global Const $LogScrapeNetPath = $LogScrapeNetDir & $LogScrapeNetFileName
00242    Global Const $LogScrapeNetExists = FileExists($LogScrapeNetPath)
00243    
00244    Global Const $LogScreenCapFileName = ""
00245    Global Const $LogScreenCapDir = $AkkDir & "log\sc\"
00246    Global Const $LogScreenCapPath = $LogScreenCapDir & $LogScreenCapFileName
00247    Global Const $LogScreenCapExists = FileExists($LogScreenCapPath)
00248    If Not $LogScreenCapExists Then DirCreate($LogScreenCapDir)
00249    
00250    Global Const $LogScreenCapNetFileName = ""
00251    Global Const $LogScreenCapNetDir = $AkkRootDir & "log\_sc\NetPhoneUser\"
00252    Global Const $LogScreenCapNetPath = $LogScreenCapNetDir & $LogScreenCapNetFileName
00253    Global Const $LogScreenCapNetExists = FileExists($LogScreenCapNetPath)
00254    If Not $LogScreenCapNetExists Then DirCreate($LogScreenCapNetDir)
00255    
00256    Global Const $DownloadsDir = @UserProfileDir & "\Downloads"
00257    Global Const $DownloadsOldDir = $DownloadsDir & " alt"
00258    
00259    Global Const $ArrayDelimItem = "|"
00260    Global $MacroAutoIt[1][2]
00261    Global $MacroDirectory[1][2]
00262    Global $MacroSystemInfo[1][2]
00263    #EndRegion Globals 2
00264    #Region Globals SMTP
00265    Global $SmtpMailSmtpServer = ""
00266    Global Const $SmtpMailEHLO = @ComputerName
00267    Global Const $SmtpMailFirst = -1
00268    Global Const $SmtpMailTrace = 0
00269    
00270    Global $LowSpaceThresholdPerc
00271    Global $MailAddresses[10][2]
00272    #EndRegion Globals SMTP
00273    #Region Globals Prometheus WMI Exporter
00274    Global $hDownload = 0
00275    Global $ScrapeComplete = 1
00276    Global $WmiExporter1PID
00277    Global $IdleTime = 0
00278    
00279    Global $EventLogFull
00280    Global $EventLogCount
00281    Global $EventLogOldest
00282    
00283    Global Const $ExactFileFileName = "exf.exe"
00284    Global Const $ExactFileDir = @HomeDrive & "\Brauckhoff\akk\" ;@SCRIPTDIR?
00285    Global Const $ExactFilePath = $ExactFileDir & $ExactFileFileName
00286    Global $ExactFileExists = FileExists($ExactFilePath)
00287    
00288    Global Const $ExactFileNetFileName = $ExactFileFileName
00289    Global Const $ExactFileNetDir = $AkkRootDir
00290    Global Const $ExactFileNetPath = $ExactFileNetDir & $ExactFileNetFileName
00291    Global Const $ExactFileNetExists = FileExists($ExactFileNetPath)
00292    
00293    Global Const $WmiExporterLocalFileName = "wmi_exporter.exe"
00294    Global Const $WmiExporterLocalDir = @HomeDrive & "\Brauckhoff\wmi_exporter\" ;@SCRIPTDIR?
00295    Global Const $WmiExporterLocalPath = $WmiExporterLocalDir & $WmiExporterLocalFileName
00296    Global $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00297    
00298    Global Const $WmiExporterX32GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-386.exe"
00299    Global Const $WmiExporterX32GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00300    Global Const $WmiExporterX32GlobalNetSetupPath = $WmiExporterX32GlobalNetSetupDir & $WmiExporterX32GlobalNetSetupFileName
00301    Global Const $WmiExporterX32GlobalNetSetupExists = FileExists($WmiExporterX32GlobalNetSetupPath)
00302    
00303    Global Const $WmiExporterX64GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-amd64.exe"
00304    Global Const $WmiExporterX64GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00305    Global Const $WmiExporterX64GlobalNetSetupPath = $WmiExporterX64GlobalNetSetupDir & $WmiExporterX64GlobalNetSetupFileName
00306    Global Const $WmiExporterX64GlobalNetSetupExists = FileExists($WmiExporterX64GlobalNetSetupPath)
00307    
00308    Global Const $WmiExporterCollectorsEnabled = "cs,logical_disk,memory,net,os,process,service,system,textfile"
00309    ;~          & "" _ ;~ & "ad" _ ; Active Directory Domain Services
00310    ;~          & "" _ ;~ & ",cpu" _ ; CPU usage
00311    ;~          & "cs" _ ; "Computer System" metrics (system properties, num cpus/total memory)
00312    ;~          & "" _ ;~ & ",dns" _ ; DNS Server
00313    ;~          & "" _ ;~ & ",hyperv" _ ; Hyper-V hosts
00314    ;~          & "" _ ;~ & ",iis" _ ; IIS sites and applications
00315    ;~          & ",logical_disk" _ ; Logical disks, disk I/O
00316    ;~          & ",memory" _ ; Memory usage metrics
00317    ;~          & "" _ ;~ & ",msmq" _ ; MSMQ queues
00318    ;~          & "" _ ;~ & ",mssql" _ ; SQL Server Performance Objects metrics
00319    ;~          & "" _ ;~ & ",netframework_clrexceptions" _ ; .NET Framework CLR Exceptions
00320    ;~          & "" _ ;~ & ",netframework_clrinterop" _ ; .NET Framework Interop Metrics
00321    ;~          & "" _ ;~ & ",netframework_clrjit" _ ; .NET Framework JIT metrics
00322    ;~          & "" _ ;~ & ",netframework_clrloading" _ ; .NET Framework CLR Loading metrics
00323    ;~          & "" _ ;~ & ",netframework_clrlocksandthreads" _ ; .NET Framework locks and metrics threads
00324    ;~          & "" _ ;~ & ",netframework_clrmemory" _ ; .NET Framework Memory metrics
00325    ;~          & "" _ ;~ & ",netframework_clrremoting" _ ; .NET Framework Remoting metrics
00326    ;~          & "" _ ;~ & ",netframework_clrsecurity" _ ; .NET Framework Security Check metrics
00327    ;~          & ",net" _ ; Network interface I/O
00328    ;~          & ",os" _ ; OS metrics (memory, processes, users)
00329    ;~          & ",process" _ ; Per-process metrics
00330    ;~          & ",service" _ ; Service state metrics
00331    ;~          & ",system" _ ; System calls
00332    ;~          & "" _ ;~ & ",tcp" _ ; TCP connections
00333    ;~          & ",textfile" _ ; Read prometheus metrics from a text file
00334    ;~          & "" _ ;~ & ",vmware" ; Performance counters installed by the Vmware Guest agent
00335    
00336    Global Const $WmiExporterCollectorTextfileDir = $WmiExporterLocalDir & "textfile_inputs\"
00337    
00338    Global Const $WmiExporterMetadataFileName = "metadata.prom"
00339    Global Const $WmiExporterMetadataDir = $WmiExporterCollectorTextfileDir
00340    Global Const $WmiExporterMetadataPath = $WmiExporterMetadataDir & $WmiExporterMetadataFileName
00341    Global $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00342    
00343    Global $WmiExporterMetadataString
00344    Global $WmiExporterMetadataArray[16]
00345    Global $WmiExporterMetadataArrayRet
00346    
00347    Global Const $WmiExporterParams = '' _
00348                   & ' --log.format logger:eventlog?name=wmi_exporter' _
00349                   & ' --collectors.enabled ' & $WmiExporterCollectorsEnabled _
00350                   & ' --telemetry.addr :9182 ' _
00351                   & ' --collector.textfile.directory ' & $WmiExporterCollectorTextfileDir
00352    #EndRegion Globals Prometheus WMI Exporter
00353    #Region
00354    _Singleton("akk")
00355    
00356    If @Compiled Then Sleep(5e3)
00357    
00358    ReadLocalConfig()
00359    
00360    ManageLogFile()
00361    
00362    ConsoleLog("akk.exe läuft Spawn, KPSInfo & WMI Exporter werden überwacht")
00363    ;~ ConsoleLog($SpawnPath)
00364    ;~ ConsoleLog($KPSInfoPath)
00365    ;~ ConsoleLog($WmiExporterLocalPath)
00366    ;~ ConsoleLog("werden überwacht")
00367    If Not @Compiled Then ConsoleLog("$WmiExporterParams: " & $WmiExporterParams)
00368    
00369    GetGlobalConfig()
00370    ReadGlobalConfig()
00371    EventLog()
00372    SetupWmiExporter()
00373    SetupExactFile()
00374    CleaningDownloads()
00375    CheckHomeDriveSpaceFree()
00376    ;~ GetWinList()
00377    ;~ ScreenCaptureWnd()
00378    ScreenCaptureNetPhoneClient()
00379    WriteMetaDataFile()
00380    WriteLogStartup()
00381    
00382    If @Compiled Then Sleep(5e3)
00383    
00384  +-While 42
00385  |        Sleep(10)
00386  |  +-    If (Mod($Cycle, 300) = 0) Then
00387  |  |            If Timeout($Timer1, 15e3 * 1) Then Check()
00388  |  |            If Timeout($Timer2, 60e3 * 5) Then GetGlobalConfig()
00389  |  |            If Timeout($Timer3, 60e3 * 5) Then ManageLogFile()
00390  |  |            If Timeout($Timer4, 60e3 * 10) Then Scrape()
00391  |  |            If Timeout($Timer5, 30e3 * 1) Then EventLog()
00392  |  |            If Timeout($Timer6, 30e3 * 1) Then WriteMetaDataFile()
00393  |  |            If $IdleTime > 60e3 * 2 And Timeout($Timer7, 60e3 * 15) Then ScreenCaptureNetPhoneClient()
00394  |  +-    EndIf
00395  |        If (Mod($Cycle, 500) = 0) Then ScrapeDownload()
00396  |        $Cycle += 1
00397  +-WEnd
00398    
00399  +-Func ConsoleLog($Text)
00400  |        $Text = StringFormat("%10s", $Cycle) & " : " & $Text
00401  |        ConsoleWrite($Text & @CRLF)
00402  |    ;~     If @OSArch <> "WIN_10" Then TrayTip("", $Text, $TrayTipTimeout, $TIP_ICONEXCLAMATION)
00403  |        _FileWriteLog($LogPath, $Text)
00404  |        _FileWriteLog($LogNetPath, $Text)
00405  |        _FileWriteLog($LogGlobalNetPath, StringFormat("%-16s", @ComputerName) & " " & StringFormat("%-16s", @UserName) & " " & $Text)
00406  +-EndFunc   ;==>ConsoleLog
00407    
00408  +-Func EventLog()
00409  |        Local $hEventLog = _EventLog__Open("", "Application")
00410  |        $EventLogFull = _EventLog__Full($hEventLog)
00411  |        $EventLogCount = _EventLog__Count($hEventLog)
00412  |        $EventLogOldest = _EventLog__Oldest($hEventLog)
00413  |        _EventLog__Close($hEventLog)
00414  +-EndFunc   ;==>EventLog
00415    
00416  +-Func GetGlobalConfig()
00417  |  +-    If $IniGlobalNetExists And Not $IniGlobalExists Then
00418  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00419  |  +-    EndIf
00420  |  +-    If $IniGlobalExNetExists And Not $IniGlobalExExists Then
00421  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00422  |  +-    EndIf
00423  |  +-    If $AkkUpdaterNetExists And Not $AkkUpdaterExists Then
00424  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00425  |  +-    EndIf
00426  |    
00427  |        Local $IniGlobalTime = FileGetTime($IniGlobalPath, $FT_MODIFIED, $FT_STRING)
00428  |        Local $IniGlobalNetTime = FileGetTime($IniGlobalNetPath, $FT_MODIFIED, $FT_STRING)
00429  |  +-    If $IniGlobalTime <> $IniGlobalNetTime Then
00430  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00431  |  |            ConsoleLog("Reload Config " & $IniGlobalNetPath)
00432  |  |            ReadGlobalConfig()
00433  |  +-    EndIf
00434  |    
00435  |        Local $IniGlobalExTime = FileGetTime($IniGlobalExPath, $FT_MODIFIED, $FT_STRING)
00436  |        Local $IniGlobalExNetTime = FileGetTime($IniGlobalExNetPath, $FT_MODIFIED, $FT_STRING)
00437  |  +-    If $IniGlobalExTime <> $IniGlobalExNetTime Then
00438  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00439  |  |            ConsoleLog("Reload Config Ex" & $IniGlobalExNetPath)
00440  |  |            ReadGlobalConfig()
00441  |  |            WriteMetaDataFile()
00442  |  +-    EndIf
00443  |    
00444  |        Local $AkkUpdaterTime = FileGetTime($AkkUpdaterPath, $FT_MODIFIED, $FT_STRING)
00445  |        Local $AkkUpdaterNetTime = FileGetTime($AkkUpdaterNetPath, $FT_MODIFIED, $FT_STRING)
00446  |  +-    If $AkkUpdaterTime <> $AkkUpdaterNetTime And @Compiled Then
00447  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00448  |  |            ConsoleLog("Reload Akk Updater " & $AkkUpdaterNetPath)
00449  |  +-    EndIf
00450  |    
00451  |        Local $AkkTime = FileGetTime($AkkPath, $FT_MODIFIED, $FT_STRING)
00452  |        Local $AkkNetTime = FileGetTime($AkkNetPath, $FT_MODIFIED, $FT_STRING)
00453  |  +-    If $AkkTime <> $AkkNetTime And @Compiled Then
00454  |  |            CheckAndRunProc($AkkUpdaterFileName, $AkkUpdaterDir, $AkkUpdaterPath, $AkkUpdaterExists)
00455  |  |            ConsoleLog("Reload Akk " & $AkkNetPath)
00456  |  +-    EndIf
00457  +-EndFunc   ;==>GetGlobalConfig
00458    
00459  +-Func GetWinList()
00460  |        Local $aList = WinList()
00461  |    ;~     _DebugArrayDisplay($aList)
00462  |        Local $ListStates[1][8]
00463  |    ;~     $ListStates[0][0] = "title"
00464  |        $ListStates[0][1] = "hWnd"
00465  |        $ListStates[0][2] = "$WIN_STATE_EXISTS"
00466  |        $ListStates[0][3] = "$WIN_STATE_VISIBLE"
00467  |        $ListStates[0][4] = "$WIN_STATE_ENABLED"
00468  |        $ListStates[0][5] = "$WIN_STATE_ACTIVE"
00469  |        $ListStates[0][6] = "$WIN_STATE_MINIMIZED"
00470  |        $ListStates[0][7] = "$WIN_STATE_MAXIMIZED"
00471  |        Local $iState
00472  |  +-    For $i = 1 To $aList[0][0]
00473  |  |            $iState = WinGetState($aList[$i][1])
00474  |  |            _ArrayAdd($ListStates, $aList[$i][0] & $ArrayDelimItem _
00475  |  |  |                        & String($aList[$i][1]) & $ArrayDelimItem _
00476  |  |  |                        & BitAND($iState, $WIN_STATE_EXISTS) & $ArrayDelimItem _
00477  |  |  |                        & BitAND($iState, $WIN_STATE_VISIBLE) & $ArrayDelimItem _
00478  |  |  |                        & BitAND($iState, $WIN_STATE_ENABLED) & $ArrayDelimItem _
00479  |  |  |                        & BitAND($iState, $WIN_STATE_ACTIVE) & $ArrayDelimItem _
00480  |  |  |                        & BitAND($iState, $WIN_STATE_MINIMIZED) & $ArrayDelimItem _
00481  |  |  |                        & BitAND($iState, $WIN_STATE_MAXIMIZED), 0, $ArrayDelimItem)
00482  |  +-    Next
00483  |        $ListStates[0][0] = UBound($ListStates) - 1
00484  |    ;~     _DebugArrayDisplay($ListStates)
00485  |        Local $ListVisble[1][5] = [["", "hWnd", "$WIN_STATE_ACTIVE", "$WIN_STATE_MINIMIZED", "$WIN_STATE_MAXIMIZED"]]
00486  |  +-    For $i = 1 To $ListStates[0][0]
00487  |  |  +-        If $ListStates[$i][0] <> "" And $ListStates[$i][3] = $WIN_STATE_VISIBLE Then
00488  |  |  |                _ArrayAdd($ListVisble, $ListStates[$i][0] & $ArrayDelimItem _
00489  |  |  |  |                            & $ListStates[$i][1] & $ArrayDelimItem _
00490  |  |  |  |                            & $ListStates[$i][5] & $ArrayDelimItem _
00491  |  |  |  |                            & $ListStates[$i][6] & $ArrayDelimItem _
00492  |  |  |  |                            & $ListStates[$i][7], 0, $ArrayDelimItem)
00493  |  |  +-        EndIf
00494  |  +-    Next
00495  |        $ListVisble[0][0] = UBound($ListVisble) - 1
00496  |    ;~     _DebugArrayDisplay($ListVisble)
00497  |        Return $ListVisble
00498  +-EndFunc   ;==>GetWinList
00499    
00500  +-Func ManageLogFile()
00501  |        $LogFileName = StringFormat("%04s", $LogFileID) & ".log"
00502  |        $LogPath = $LogDir & $LogFileName
00503  |        $LogNetPath = $LogNetDir & $LogFileName
00504  |  +-    If _FileCountLines($LogPath) > 1e3 Then
00505  |  |            $LogFileID += 1
00506  |  |            IniWrite($IniLocalPath, "LogFile", "ID", $LogFileID)
00507  |  +-    EndIf
00508  |        IniWrite($IniLocalPath, "LogFile", "LogPath", $LogPath)
00509  |        IniWrite($IniLocalPath, "LogFile", "LogNetPath", $LogNetPath)
00510  |  +-    If FileGetSize($LogGlobalNetPath) / 1024 > 100 Then
00511  |  |            Local $Dest = $LogArchiveNetDir & @YEAR & @MON & @MDAY & @MIN & @SEC & @MSEC & ".log"
00512  |  |            FileMove($LogGlobalNetPath, $Dest, $FC_OVERWRITE + $FC_CREATEPATH)
00513  |  +-    EndIf
00514  +-EndFunc   ;==>ManageLogFile
00515    
00516  +-Func ReadGlobalConfig()
00517  |  +-    If FileExists($IniGlobalPath) Then
00518  |  |            $LowSpaceThresholdPerc = IniRead($IniGlobalPath, "FreeSpaceCheck", "LowSpaceThresholdPerc", 5)
00519  |  |  +-        For $i = 0 To 9 Step 1
00520  |  |  |                $MailAddresses[$i][0] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Address", "")
00521  |  |  |                $MailAddresses[$i][1] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Active", 0)
00522  |  |  +-        Next
00523  |  |            $SmtpMailSmtpServer = IniRead($IniGlobalPath, "SmtpMail", "SmtpServer", "")
00524  |  +-    EndIf
00525  |  +-    If FileExists($IniGlobalExPath) Then
00526  |  |            $WmiExporterMetadataString = IniRead($IniGlobalExPath, "MetaData", @ComputerName, "NULL")
00527  |  |  +-        If $WmiExporterMetadataString = "NULL" Then
00528  |  |  |                IniWrite($IniGlobalExNetPath, "MetaData", @ComputerName, "")
00529  |  |  +-        EndIf
00530  |  +-    EndIf
00531  +-EndFunc   ;==>ReadGlobalConfig
00532    
00533  +-Func ReadLocalConfig()
00534  |        $LogFileID = IniRead($IniLocalPath, "LogFile", "ID", "NULL")
00535  |  +-    If $LogFileID = "NULL" Then
00536  |  |            IniWrite($IniLocalPath, "LogFile", "ID", 0)
00537  |  |            $LogFileID = 0
00538  |  +-    EndIf
00539  +-EndFunc   ;==>ReadLocalConfig
00540    
00541  +-Func ScreenCaptureNetPhoneClient()
00542  |        Local $hWndActive = ScreenCaptureWnd()
00543  |        Local $hWnd = WinGetHandle("NetPhone Client")
00544  |  +-    If @error Then
00545  |  |            If ProcessExists($NetPhoneClientFileName) Then ConsoleLog("Error ScreenCaptureNetPhoneClient")
00546  |  +-    Else
00547  |  |            Local $iState = WinGetState($hWnd)
00548  |  |  +-        If WinActivate($hWnd) Then
00549  |  |  |                Sleep(250)
00550  |  |  |                Local $aPos = WinGetPos($hWnd)
00551  |  |  |                $aPos[0] = $aPos[0] + 57
00552  |  |  |                $aPos[1] = $aPos[1] + $aPos[3] - 54
00553  |  |  |                $aPos[2] = $aPos[0] + 174
00554  |  |  |                $aPos[3] = $aPos[1] + 15
00555  |  |  |                WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneClientPos", 0, _ArrayToString($aPos))
00556  |  |  |                $NetPhoneUserChecksum = PixelChecksum($aPos[0], $aPos[1], $aPos[2], $aPos[3], 1, Default, 1)
00557  |  |  |  +-            If Not FileExists($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png") _
00558  |  |  |  |                           And Not FileExists($LogScreenCapNetDir & "del\" & $NetPhoneUserChecksum & ".png") _
00559  |  |  |  |                           And Not FileExists($LogScreenCapNetDir & "ini\" & $NetPhoneUserChecksum & ".png") Then
00560  |  |  |  |                    _ScreenCapture_Capture($LogScreenCapNetDir & $NetPhoneUserChecksum & ".png", $aPos[0], $aPos[1], $aPos[2], $aPos[3], 0)
00561  |  |  |  +-            EndIf
00562  |  |  |                If BitAND($iState, $WIN_STATE_MINIMIZED) Then WinSetState($hWnd, Default, @SW_MINIMIZE)
00563  |  |  +-        EndIf
00564  |  +-    EndIf
00565  |        WinActivate($hWndActive)
00566  |        $NetPhoneUser = IniRead($IniGlobalExPath, "$NetPhoneUser", $NetPhoneUserChecksum, "NULL")
00567  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUser", 0, $NetPhoneUser)
00568  |        WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00569  +-EndFunc   ;==>ScreenCaptureNetPhoneClient
00570    
00571  +-Func ScreenCaptureWnd()
00572  |        Local $List = GetWinList()
00573  |        Local $hWnd
00574  |        Local $hWndActive
00575  |  +-    For $i = 1 To $List[0][0]
00576  |  |  +-        If $List[$i][0] <> "" Then
00577  |  |  |  +-            If $List[$i][2] = $WIN_STATE_ACTIVE Then
00578  |  |  |  |                    $ActiveWinTitle = $List[$i][0]
00579  |  |  |  |                    $hWndActive = $List[$i][1]
00580  |  |  |  +-            EndIf
00581  |  |  |  +-            If $ScreenCaptureWnd & StringStripWS($List[$i][0], $STR_STRIPLEADING + $STR_STRIPTRAILING) = "NetPhone Client" Then
00582  |  |  |  |                    $hWnd = HWnd($List[$i][1])
00583  |  |  |  |  +-                If WinActivate($hWnd) Then
00584  |  |  |  |  |                        _ScreenCapture_CaptureWnd($LogScreenCapDir & $i & ".png", $hWnd)
00585  |  |  |  |  +-                EndIf
00586  |  |  |  |  +-                If $List[$i][3] = $WIN_STATE_MINIMIZED Then
00587  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MINIMIZE)
00588  |  |  |  |  +-                EndIf
00589  |  |  |  |  +-                If $List[$i][4] = $WIN_STATE_MAXIMIZED Then
00590  |  |  |  |  |                        WinSetState($hWnd, Default, @SW_MAXIMIZE)
00591  |  |  |  |  +-                EndIf
00592  |  |  |  |                    If @error Then ConsoleLog("Error ScreenCaptureWnd")
00593  |  |  |  +-            EndIf
00594  |  |  +-        EndIf
00595  |  +-    Next
00596  |        $hWnd = HWnd($hWndActive)
00597  |        $hWndActivePid = WinGetProcess($hWnd)
00598  |        WinActivate($hWnd)
00599  |        Return $hWnd
00600  +-EndFunc   ;==>ScreenCaptureWnd
00601    
00602  +-Func SetVar(ByRef $Var, $Value)
00603  |        $Var = $Value
00604  |        Return $Value
00605  +-EndFunc   ;==>SetVar
00606    
00607  +-Func Timeout(ByRef $Timer, $Delay)
00608  |        Local $Diff = TimerDiff($Timer)
00609  |  +-    If $Diff > $Delay Then
00610  |  |            $Timer = TimerInit()
00611  |  |            Return $Diff
00612  |  +-    EndIf
00613  |        Return 0
00614  +-EndFunc   ;==>Timeout
00615    
00616  +-Func WriteLogStartup()
00617  |    ;~     Local Const $DelimItem = $ArrayDelimItem
00618  |    
00619  |        IniWrite($IniGlobalNetLogDir & "Global" & ".ini", "@ComputerName", StringReplace(StringFormat("%-16s", @IPAddress1), " ", "."), @ComputerName)
00620  |        WriteLogStartupIni("", "Global", "@IPAddress1", 0, @IPAddress1)
00621  |        WriteLogStartupIni("", "Global", "$AkkVersion", 0, $AkkVersion)
00622  |        WriteLogStartupIni("", "Global", "$SpawnExists", 0, $SpawnExists)
00623  |        WriteLogStartupIni("", "Global", "$KPSInfoExists", 0, $KPSInfoExists)
00624  |        WriteLogStartupIni("", "Global", "$PowerkatalogExists", 0, $PowerkatalogExists)
00625  |        WriteLogStartupIni("", "Global", "$SHDUpdaterExists", 0, $SHDUpdaterExists)
00626  |        WriteLogStartupIni("", "Global", "$NetPhoneClientExists", 0, $NetPhoneClientExists)
00627  |        WriteLogStartupIni("", "Global", "$ActiveWinTitle", 0, $ActiveWinTitle)
00628  |        WriteLogStartupIni("", "Global", "$hWndActivePid", 0, $hWndActivePid)
00629  |    
00630  |        WriteLogStartupIni("", "EventLog", "$EventLogFull", 0, $EventLogFull)
00631  |        WriteLogStartupIni("", "EventLog", "$EventLogCount", 0, $EventLogCount)
00632  |        WriteLogStartupIni("", "EventLog", "$EventLogOldest", 0, $EventLogOldest)
00633  |    
00634  |        WriteLogStartupIni("", "SpawnStats", $SpawnFileName & "TimeModified", 0, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00635  |    
00636  |    ;~     WriteLogStartupIni("", "NetPhoneUser", "$NetPhoneUserChecksum", 0, $NetPhoneUserChecksum)
00637  |    ;~     If $NetPhoneUserChecksum <> "" Then IniWrite($IniGlobalNetLogDir & "NetPhoneUser" & ".ini", "$NetPhoneUser", $NetPhoneUserChecksum, "")
00638  |    
00639  |        Local $aComputerSystemProduct = _ComputerNameAndModel()
00640  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductName", 0, $aComputerSystemProduct[0])
00641  |        WriteLogStartupIni("", "Wmi", "$ComputerSystemProductIdentifyingNumber", 0, $aComputerSystemProduct[1])
00642  |    
00643  |        WriteLogStartupIni("", "AutoIt", "@Compiled", 0, @Compiled)
00644  |        WriteLogStartupIni("", "AutoIt", "@ScriptName", 0, @ScriptName)
00645  |        WriteLogStartupIni("", "AutoIt", "@ScriptDir", 0, @ScriptDir)
00646  |        WriteLogStartupIni("", "AutoIt", "@ScriptFullPath", 0, @ScriptFullPath)
00647  |        WriteLogStartupIni("", "AutoIt", "@WorkingDir", 0, @WorkingDir)
00648  |        WriteLogStartupIni("", "AutoIt", "@AutoItExe", 0, @AutoItExe)
00649  |        WriteLogStartupIni("", "AutoIt", "@AutoItPID", 0, @AutoItPID)
00650  |        WriteLogStartupIni("", "AutoIt", "@AutoItVersion", 0, @AutoItVersion)
00651  |        WriteLogStartupIni("", "AutoIt", "@AutoItX64", 0, @AutoItX64)
00652  |    
00653  |        WriteLogStartupIni("", "Directory", "@AppDataCommonDir", 0, @AppDataCommonDir)
00654  |        WriteLogStartupIni("", "Directory", "@DesktopCommonDir", 0, @DesktopCommonDir)
00655  |        WriteLogStartupIni("", "Directory", "@DocumentsCommonDir", 0, @DocumentsCommonDir)
00656  |        WriteLogStartupIni("", "Directory", "@FavoritesCommonDir", 0, @FavoritesCommonDir)
00657  |        WriteLogStartupIni("", "Directory", "@ProgramsCommonDir", 0, @ProgramsCommonDir)
00658  |        WriteLogStartupIni("", "Directory", "@StartMenuCommonDir", 0, @StartMenuCommonDir)
00659  |        WriteLogStartupIni("", "Directory", "@StartupCommonDir", 0, @StartupCommonDir)
00660  |    
00661  |        WriteLogStartupIni("", "Directory", "@AppDataDir", 0, @AppDataDir)
00662  |        WriteLogStartupIni("", "Directory", "@LocalAppDataDir", 0, @LocalAppDataDir)
00663  |        WriteLogStartupIni("", "Directory", "@DesktopDir", 0, @DesktopDir)
00664  |        WriteLogStartupIni("", "Directory", "@MyDocumentsDir", 0, @MyDocumentsDir)
00665  |        WriteLogStartupIni("", "Directory", "@FavoritesDir", 0, @FavoritesDir)
00666  |        WriteLogStartupIni("", "Directory", "@ProgramsDir", 0, @ProgramsDir)
00667  |        WriteLogStartupIni("", "Directory", "@StartMenuDir", 0, @StartMenuDir)
00668  |        WriteLogStartupIni("", "Directory", "@UserProfileDir", 0, @UserProfileDir)
00669  |    
00670  |        WriteLogStartupIni("", "Directory", "@HomeDrive", 0, @HomeDrive)
00671  |        WriteLogStartupIni("", "Directory", "@HomePath", 0, @HomePath)
00672  |        WriteLogStartupIni("", "Directory", "@HomeShare", 0, @HomeShare)
00673  |        WriteLogStartupIni("", "Directory", "@LogonDNSDomain", 0, @LogonDNSDomain)
00674  |        WriteLogStartupIni("", "Directory", "@LogonDomain", 0, @LogonDomain)
00675  |        WriteLogStartupIni("", "Directory", "@LogonServer", 0, @LogonServer)
00676  |        WriteLogStartupIni("", "Directory", "@ProgramFilesDir", 0, @ProgramFilesDir)
00677  |        WriteLogStartupIni("", "Directory", "@CommonFilesDir", 0, @CommonFilesDir)
00678  |        WriteLogStartupIni("", "Directory", "@WindowsDir", 0, @WindowsDir)
00679  |        WriteLogStartupIni("", "Directory", "@SystemDir", 0, @SystemDir)
00680  |        WriteLogStartupIni("", "Directory", "@TempDir", 0, @TempDir)
00681  |        WriteLogStartupIni("", "Directory", "@ComSpec", 0, @ComSpec)
00682  |    
00683  |        WriteLogStartupIni("", "SystemInfo", "@CPUArch", 0, @CPUArch)
00684  |        WriteLogStartupIni("", "SystemInfo", "@KBLayout", 0, @KBLayout)
00685  |        WriteLogStartupIni("", "SystemInfo", "@MUILang", 0, @MUILang)
00686  |        WriteLogStartupIni("", "SystemInfo", "@OSArch", 0, @OSArch)
00687  |        WriteLogStartupIni("", "SystemInfo", "@OSLang", 0, @OSLang)
00688  |        WriteLogStartupIni("", "SystemInfo", "@OSType", 0, @OSType)
00689  |        WriteLogStartupIni("", "SystemInfo", "@OSVersion", 0, @OSVersion)
00690  |        WriteLogStartupIni("", "SystemInfo", "@OSBuild", 0, @OSBuild)
00691  |        WriteLogStartupIni("", "SystemInfo", "@OSServicePack", 0, @OSServicePack)
00692  |        WriteLogStartupIni("", "SystemInfo", "@ComputerName", 0, @ComputerName)
00693  |        WriteLogStartupIni("", "SystemInfo", "@UserName", 0, @UserName)
00694  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress1", 0, @IPAddress1)
00695  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress2", 0, @IPAddress2)
00696  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress3", 0, @IPAddress3)
00697  |        WriteLogStartupIni("", "SystemInfo", "@IPAddress4", 0, @IPAddress4)
00698  |    
00699  |        WriteLogStartupIni("", "SystemInfo", "@DesktopHeight", 0, @DesktopHeight)
00700  |        WriteLogStartupIni("", "SystemInfo", "@DesktopWidth", 0, @DesktopWidth)
00701  |        WriteLogStartupIni("", "SystemInfo", "@DesktopDepth", 0, @DesktopDepth)
00702  |        WriteLogStartupIni("", "SystemInfo", "@DesktopRefresh", 0, @DesktopRefresh)
00703  |    
00704  |    ;~     IniWrite($IniGlobalNetLogPath, "Computername", @IPAddress1, @ComputerName)
00705  |    ;~     IniWrite($IniGlobalNetLogPath, "IPAddress1", $ComputerName, @IPAddress1)
00706  |    ;~     IniWrite($IniGlobalNetLogPath, "AkkVersion", $ComputerName, FileGetVersion(@ScriptFullPath))
00707  |    ;~     IniWrite($IniGlobalNetLogPath, "SpawnExists", $ComputerName, $SpawnExists)
00708  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogFull", $ComputerName, $EventLogFull)
00709  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogCount", $ComputerName, $EventLogCount)
00710  |    ;~     IniWrite($IniGlobalNetLogPath, "$EventLogOldest", $ComputerName, $EventLogOldest)
00711  |    
00712  |    ;~     IniWrite($LogSpawnStatsNetPath, "SpawnTimeModified", $ComputerName, FileGetTime($SpawnPath, $FT_MODIFIED, $FT_STRING))
00713  |    
00714  |    ;~     _ArrayAdd($MacroAutoIt, "Compiled" & $DelimItem & @Compiled, 0, $DelimItem)
00715  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptName" & $DelimItem & @ScriptName, 0, $DelimItem)
00716  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptDir" & $DelimItem & @ScriptDir, 0, $DelimItem)
00717  |    ;~     _ArrayAdd($MacroAutoIt, "ScriptFullPath" & $DelimItem & @ScriptFullPath, 0, $DelimItem)
00718  |    ;~     _ArrayAdd($MacroAutoIt, "WorkingDir" & $DelimItem & @WorkingDir, 0, $DelimItem)
00719  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItExe" & $DelimItem & @AutoItExe, 0, $DelimItem)
00720  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItPID" & $DelimItem & @AutoItPID, 0, $DelimItem)
00721  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItVersion" & $DelimItem & @AutoItVersion, 0, $DelimItem)
00722  |    ;~     _ArrayAdd($MacroAutoIt, "AutoItX64" & $DelimItem & @AutoItX64, 0, $DelimItem)
00723  |    ;~     _ArrayDisplay($MacroAutoIt)
00724  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroAutoIt", $MacroAutoIt)
00725  |    
00726  |    ;~     _ArrayAdd($MacroDirectory, "AppDataCommonDir" & $DelimItem & @AppDataCommonDir, 0, $DelimItem)
00727  |    ;~     _ArrayAdd($MacroDirectory, "DesktopCommonDir" & $DelimItem & @DesktopCommonDir, 0, $DelimItem)
00728  |    ;~     _ArrayAdd($MacroDirectory, "DocumentsCommonDir" & $DelimItem & @DocumentsCommonDir, 0, $DelimItem)
00729  |    ;~     _ArrayAdd($MacroDirectory, "FavoritesCommonDir" & $DelimItem & @FavoritesCommonDir, 0, $DelimItem)
00730  |    ;~     _ArrayAdd($MacroDirectory, "ProgramsCommonDir" & $DelimItem & @ProgramsCommonDir, 0, $DelimItem)
00731  |    ;~     _ArrayAdd($MacroDirectory, "StartMenuCommonDir" & $DelimItem & @StartMenuCommonDir, 0, $DelimItem)
00732  |    ;~     _ArrayAdd($MacroDirectory, "StartupCommonDir" & $DelimItem & @StartupCommonDir, 0, $DelimItem)
00733  |    
00734  |    ;~     _ArrayAdd($MacroDirectory, "AppDataDir" & $DelimItem & @AppDataDir, 0, $DelimItem)
00735  |    ;~     _ArrayAdd($MacroDirectory, "LocalAppDataDir" & $DelimItem & @LocalAppDataDir, 0, $DelimItem)
00736  |    ;~     _ArrayAdd($MacroDirectory, "DesktopDir" & $DelimItem & @DesktopDir, 0, $DelimItem)
00737  |    ;~     _ArrayAdd($MacroDirectory, "MyDocumentsDir" & $DelimItem & @MyDocumentsDir, 0, $DelimItem)
00738  |    ;~     _ArrayAdd($MacroDirectory, "FavoritesDir" & $DelimItem & @FavoritesDir, 0, $DelimItem)
00739  |    ;~     _ArrayAdd($MacroDirectory, "ProgramsDir" & $DelimItem & @ProgramsDir, 0, $DelimItem)
00740  |    ;~     _ArrayAdd($MacroDirectory, "StartMenuDir" & $DelimItem & @StartMenuDir, 0, $DelimItem)
00741  |    ;~     _ArrayAdd($MacroDirectory, "StartupDir" & $DelimItem & @StartupDir, 0, $DelimItem)
00742  |    ;~     _ArrayAdd($MacroDirectory, "UserProfileDir" & $DelimItem & @UserProfileDir, 0, $DelimItem)
00743  |    
00744  |    ;~     _ArrayAdd($MacroDirectory, "HomeDrive" & $DelimItem & @HomeDrive, 0, $DelimItem)
00745  |    ;~     _ArrayAdd($MacroDirectory, "HomePath" & $DelimItem & @HomePath, 0, $DelimItem)
00746  |    ;~     _ArrayAdd($MacroDirectory, "HomeShare" & $DelimItem & @HomeShare, 0, $DelimItem)
00747  |    ;~     _ArrayAdd($MacroDirectory, "LogonDNSDomain" & $DelimItem & @LogonDNSDomain, 0, $DelimItem)
00748  |    ;~     _ArrayAdd($MacroDirectory, "LogonDomain" & $DelimItem & @LogonDomain, 0, $DelimItem)
00749  |    ;~     _ArrayAdd($MacroDirectory, "LogonServer" & $DelimItem & @LogonServer, 0, $DelimItem)
00750  |    ;~     _ArrayAdd($MacroDirectory, "ProgramFilesDir" & $DelimItem & @ProgramFilesDir, 0, $DelimItem)
00751  |    ;~     _ArrayAdd($MacroDirectory, "CommonFilesDir" & $DelimItem & @CommonFilesDir, 0, $DelimItem)
00752  |    ;~     _ArrayAdd($MacroDirectory, "WindowsDir" & $DelimItem & @WindowsDir, 0, $DelimItem)
00753  |    ;~     _ArrayAdd($MacroDirectory, "SystemDir" & $DelimItem & @SystemDir, 0, $DelimItem)
00754  |    ;~     _ArrayAdd($MacroDirectory, "TempDir" & $DelimItem & @TempDir, 0, $DelimItem)
00755  |    ;~     _ArrayAdd($MacroDirectory, "ComSpec" & $DelimItem & @ComSpec, 0, $DelimItem)
00756  |    ;~     _ArrayDisplay($MacroDirectory)
00757  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroDirectory", $MacroDirectory)
00758  |    
00759  |    ;~     _ArrayAdd($MacroSystemInfo, "CPUArch" & $DelimItem & @CPUArch, 0, $DelimItem)
00760  |    ;~     _ArrayAdd($MacroSystemInfo, "KBLayout" & $DelimItem & @KBLayout, 0, $DelimItem)
00761  |    ;~     _ArrayAdd($MacroSystemInfo, "MUILang" & $DelimItem & @MUILang, 0, $DelimItem)
00762  |    ;~     _ArrayAdd($MacroSystemInfo, "OSArch" & $DelimItem & @OSArch, 0, $DelimItem)
00763  |    ;~     _ArrayAdd($MacroSystemInfo, "OSLang" & $DelimItem & @OSLang, 0, $DelimItem)
00764  |    ;~     _ArrayAdd($MacroSystemInfo, "OSType" & $DelimItem & @OSType, 0, $DelimItem)
00765  |    ;~     _ArrayAdd($MacroSystemInfo, "OSVersion" & $DelimItem & @OSVersion, 0, $DelimItem)
00766  |    ;~     _ArrayAdd($MacroSystemInfo, "OSBuild" & $DelimItem & @OSBuild, 0, $DelimItem)
00767  |    ;~     _ArrayAdd($MacroSystemInfo, "OSServicePack" & $DelimItem & @OSServicePack, 0, $DelimItem)
00768  |    ;~     _ArrayAdd($MacroSystemInfo, "ComputerName" & $DelimItem & @ComputerName, 0, $DelimItem)
00769  |    ;~     _ArrayAdd($MacroSystemInfo, "UserName" & $DelimItem & @UserName, 0, $DelimItem)
00770  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress1" & $DelimItem & @IPAddress1, 0, $DelimItem)
00771  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress2" & $DelimItem & @IPAddress2, 0, $DelimItem)
00772  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress3" & $DelimItem & @IPAddress3, 0, $DelimItem)
00773  |    ;~     _ArrayAdd($MacroSystemInfo, "IPAddress4" & $DelimItem & @IPAddress4, 0, $DelimItem)
00774  |    
00775  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopHeight" & $DelimItem & @DesktopHeight, 0, $DelimItem)
00776  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopWidth" & $DelimItem & @DesktopWidth, 0, $DelimItem)
00777  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopDepth" & $DelimItem & @DesktopDepth, 0, $DelimItem)
00778  |    ;~     _ArrayAdd($MacroSystemInfo, "DesktopRefresh" & $DelimItem & @DesktopRefresh, 0, $DelimItem)
00779  |    ;~     _ArrayDisplay($MacroSystemInfo)
00780  |    ;~     IniWriteSection($IniGlobalNetLogInstancePath, "MacroSystemInfo", $MacroSystemInfo)
00781  +-EndFunc   ;==>WriteLogStartup
00782    
00783  +-Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
00784  |  +-    If $FileName = "" Then
00785  |  |            $FileName = $IniGlobalNetLogDir & $Section & ".ini"
00786  |  +-    EndIf
00787  |        IniWrite($FileName, ($IsSectionAddedToKey ? $Section & $Key : $Key), $ComputerName, $Value)
00788  |        IniWrite($IniGlobalNetLogInstancePath, $Section, $Key, $Value)
00789  |    ;~ 	IniWrite ( "filename", "section", "key", "value" )
00790  +-EndFunc   ;==>WriteLogStartupIni
00791    #EndRegion
00792    #Region CheckAndRunProc
00793  +-Func Check()
00794  |        CheckAndRunProc($SpawnFileName, $SpawnDir, $SpawnPath, $SpawnExists)
00795  |        CheckAndRunProc($KPSInfoFileName, $KPSInfoDir, $KPSInfoPath, $KPSInfoExists)
00796  |        $WmiExporter1PID = CheckAndRunProc($WmiExporterLocalFileName, $WmiExporterLocalDir, $WmiExporterLocalPath & $WmiExporterParams, $WmiExporterLocalExists)
00797  |    ;~     CheckAndRunProcAs($PowerkatalogFileName, $PowerkatalogDir, $PowerkatalogPath, $PowerkatalogExists, "Administrator", "Brauckhoff", "")
00798  |    ;~     CheckAndRunProc($SHDUpdaterFileName, $SHDUpdaterDir, $SHDUpdaterPath, $SHDUpdaterExists)
00799  +-EndFunc   ;==>Check
00800    
00801  +-Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
00802  |  +-    If $Exists And Not ProcessExists($Name) Then
00803  |  |            ConsoleLog($Name & " wird gestartet")
00804  |  |            Return Run($Path, $Dir, $ShowFlag)
00805  |  +-    EndIf
00806  |        Return 0
00807  +-EndFunc   ;==>CheckAndRunProc
00808    
00809  +-Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
00810  |  +-    If $Exists And Not ProcessExists($Name) Then
00811  |  |            ConsoleLog($Name & " wird gestartet als " & $UserName & " in " & $Domain & " mit Network credentials only")
00812  |  |            RunAs($UserName, $Domain, $Password, $RUN_LOGON_NETWORK, $Path, $Dir)
00813  |  +-    EndIf
00814  +-EndFunc   ;==>CheckAndRunProcAs
00815    #EndRegion CheckAndRunProc
00816    #Region CleaningDownloads
00817  +-Func CleaningDownloads()
00818  |  +-    If DownloadsNeedCleaning() Then
00819  |  |            DirRemove($DownloadsOldDir, $DIR_REMOVE)
00820  |  |            FileDirMoveRec($DownloadsDir, $DownloadsOldDir)
00821  |  |            FileDelete($DownloadsOldDir & "\Downloads alt.lnk")
00822  |  |            FileCreateShortcut($DownloadsOldDir, $DownloadsDir & "\Downloads alt")
00823  |  |            IniWrite($IniLocalPath, "Downloads", "LastCleaningDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00824  |  |            Local Const $Warning = '' _
00825  |  |  |                        & 'Wenn Sie noch wichtige Dateien im Ordner "Downloads" aufbewahren, die Sie benötigen, kopieren Sie diese bitte an einen anderen Ort.' & @CRLF _
00826  |  |  |                        & 'Alle Dateien aus dem Ordner "Downloads" wurden bereits in den Ordner "Downloads alt" verschoben.' & @CRLF _
00827  |  |  |                        & 'Der Ordner "Downloads alt" ist über eine Verknüpfung in "Downloads" zu erreichen.' & @CRLF _
00828  |  |  |                        & 'Alle Ihre Dateien die im Ordner "Downloads alt" bleiben, werden demnächst unwiderruflich GELÖSCHT!' & @CRLF _
00829  |  |  |                        & 'Bitte sichten und sichern Sie am besten jetzt sofort Ihre weiterhin benötigten Dateien.' & @CRLF _
00830  |  |  |                        & 'Soll der Ordner "Downloads alt" jetzt geöffnet werden?' & @CRLF
00831  |  |  +-        If MsgBox($MB_YESNO + $MB_ICONWARNING + $MB_SYSTEMMODAL, "ACHTUNG WICHTIG! LÖSCHUNG IHRER DOWNLOAD-DATEIEN", $Warning, $MsgBoxTimeout) = $IDYES Then
00832  |  |  |                ShellExecute($DownloadsOldDir)
00833  |  |  +-        EndIf
00834  |  +-    EndIf
00835  +-EndFunc   ;==>CleaningDownloads
00836    
00837  +-Func DownloadsNeedCleaning()
00838  |        Return (_DateToDayValue(@YEAR, @MON, @MDAY) - GetDownloadsLastCleaningDate()) >= 14
00839  +-EndFunc   ;==>DownloadsNeedCleaning
00840  +-Func FileDirMoveRec($SourceDir, $DestDir)
00841  |  +-    If FileExists($SourceDir) Then
00842  |  |            If Not FileExists($DestDir) Then DirCreate($DestDir)
00843  |  |            FileMove($SourceDir & "\*.*", $DestDir, $FC_OVERWRITE + $FC_CREATEPATH)
00844  |  |            Local Const $FolderList = _FileListToArray($SourceDir, Default, $FLTA_FOLDERS, True)
00845  |  |  +-        If Not @error Then
00846  |  |  |  +-            For $Folder In $FolderList
00847  |  |  |  |                    DirMove($Folder, $DestDir, $FC_OVERWRITE)
00848  |  |  |  +-            Next
00849  |  |  +-        EndIf
00850  |  +-    EndIf
00851  +-EndFunc   ;==>FileDirMoveRec
00852    
00853  +-Func GetDownloadsLastCleaningDate()
00854  |        Return IniRead($IniLocalPath, "Downloads", "LastCleaningDate", "NULL")
00855  +-EndFunc   ;==>GetDownloadsLastCleaningDate
00856    #EndRegion CleaningDownloads
00857    #Region FreeSpaceCheck
00858  +-Func ByteSuffix($iBytes)
00859  |        Local $iIndex = 0, $aArray = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB']
00860  |  +-    While $iBytes > 1023
00861  |  |            $iIndex += 1
00862  |  |            $iBytes /= 1024
00863  |  +-    WEnd
00864  |        Return Round($iBytes) & $aArray[$iIndex]
00865  +-EndFunc   ;==>ByteSuffix
00866    
00867  +-Func CheckHomeDriveSpaceFree()
00868  |        Local Const $sLabel = DriveGetLabel(@HomeDrive & "\")
00869  |    ;~     Local Const $sSerial = DriveGetSerial(@HomeDrive & "\")
00870  |        Local Const $iFreeSpace = DriveSpaceFree(@HomeDrive & "\")
00871  |        Local Const $iTotalSpace = DriveSpaceTotal(@HomeDrive & "\")
00872  |        Local Const $iFreeSpacePerc = ($iFreeSpace / $iTotalSpace) * 100
00873  |  +-    If $iFreeSpacePerc < $LowSpaceThresholdPerc Then
00874  |  |  +-        If (_DateToDayValue(@YEAR, @MON, @MDAY) - IniRead($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", "NULL")) >= 1 Then
00875  |  |  |                IniWrite($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00876  |  |  |  +-            For $i = 0 To 9 Step 1
00877  |  |  |  |  +-                If $MailAddresses[$i][0] <> "" And $MailAddresses[$i][1] = 1 Then
00878  |  |  |  |  |                        ConsoleLog("Sending Mail to " & $MailAddresses[$i][0])
00879  |  |  |  |  |                        SendMailLowSpace($MailAddresses[$i][0], Round($iFreeSpacePerc, 2), $sLabel, $iFreeSpace, $iTotalSpace)
00880  |  |  |  |  |                        Sleep(3000)
00881  |  |  |  |  +-                EndIf
00882  |  |  |  +-            Next
00883  |  |  +-        EndIf
00884  |  +-    EndIf
00885  +-EndFunc   ;==>CheckHomeDriveSpaceFree
00886    
00887  +-Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
00888  |        Local $sFromName = "akk.exe (Gerrit)"
00889  |        Local $sFromAddress = "akk@kuechen-brauckhoff.de"
00890  |        Local $sSubject = "AKK Warnung freier Speicher auf " & @ComputerName & " ist " & $iFreeSpacePerc & "% !"
00891  |        Local $asBody[0]
00892  |        _ArrayAdd($asBody, "Akk Warnung wenig Speicherplatz auf:")
00893  |        _ArrayAdd($asBody, @ComputerName)
00894  |        If @IPAddress1 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress1)
00895  |        If @IPAddress2 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress2)
00896  |        If @IPAddress3 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress3)
00897  |        If @IPAddress4 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress4)
00898  |        _ArrayAdd($asBody, $sLabel & " (" & @HomeDrive & ")")
00899  |        _ArrayAdd($asBody, Round($iFreeSpace / 1024, 2) & " GB frei von " & Round($iTotalSpace / 1024, 2) & " GB")
00900  |        _ArrayAdd($asBody, $iFreeSpacePerc & "% frei")
00901  |        Local $iResponse = _INetSmtpMail($SmtpMailSmtpServer, $sFromName, $sFromAddress, $sToAddress, $sSubject, $asBody, $SmtpMailEHLO, $SmtpMailFirst, $SmtpMailTrace)
00902  |        Local $iErr = @error
00903  |  +-    If $iResponse = 0 Then
00904  |  |            Local Const $Warning = '' _
00905  |  |  |                        & 'DIE FESTPLATTE IST FAST VOLL!' & @CRLF & @CRLF _
00906  |  |  |                        & 'Bitte Herrn Heger bescheid geben:' & @CRLF _
00907  |  |  |                        & 'heger@easyconnectit.de' & @CRLF _
00908  |  |  |                        & 'oder 0176 23984427' & @CRLF & @CRLF _
00909  |  |  |                        & _ArrayToString($asBody, @CRLF) & @CRLF & @CRLF _
00910  |  |  |                        & 'Mail failed with error code ' & $iErr & @CRLF
00911  |  |            MsgBox($MB_ICONWARNING + $MB_SYSTEMMODAL, "Warnung!", $Warning)
00912  |  +-    EndIf
00913  +-EndFunc   ;==>SendMailLowSpace
00914    #EndRegion FreeSpaceCheck
00915    #Region WMI Exporter
00916    
00917  +-Func MetaProcessCount($ProcessName)
00918  |        Local $aProcessList = ProcessList($ProcessName)
00919  |        Local $sDrive = "", $sDir = "", $sFileName = "", $sExtension = ""
00920  |        _PathSplit($ProcessName, $sDrive, $sDir, $sFileName, $sExtension)
00921  |        Local $MetaProcessCount = 'akk_process_count{computername="@ComputerName@",process="' & $sFileName & '"} ' & $aProcessList[0][0]
00922  |        Return $MetaProcessCount
00923  +-EndFunc   ;==>MetaProcessCount
00924    
00925  +-Func Scrape()
00926  |  +-    If $ScrapeComplete And ProcessExists($WmiExporterLocalFileName) Then
00927  |  |            $hDownload = InetGet("http://localhost:9182/metrics", $LogScrapePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)
00928  |  |            $ScrapeComplete = 0
00929  |  +-    EndIf
00930  +-EndFunc   ;==>Scrape
00931    
00932  +-Func ScrapeDownload()
00933  |  +-    If Not $ScrapeComplete Then
00934  |  |  +-        If InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE) Then
00935  |  |  |  +-            If InetGetInfo($hDownload, $INET_DOWNLOADSUCCESS) Then
00936  |  |  |  |                    If FileGetSize($LogScrapePath) Then FileCopy($LogScrapePath, $LogScrapeNetPath, $FC_OVERWRITE + $FC_CREATEPATH)
00937  |  |  |  +-            Else
00938  |  |  |  |                    FileDelete($LogScrapePath)
00939  |  |  |  |                    ConsoleLog("Error ScrapeDownload")
00940  |  |  |  +-            EndIf
00941  |  |  |                InetClose($hDownload)
00942  |  |  |                $hDownload = 0
00943  |  |  |                $ScrapeComplete = 1
00944  |  |  +-        EndIf
00945  |  +-    EndIf
00946  +-EndFunc   ;==>ScrapeDownload
00947    
00948  +-Func SetupExactFile()
00949  |  +-    If Not $ExactFileExists Then
00950  |  |  +-        If FileCopy($ExactFileNetPath, $ExactFilePath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00951  |  |  |                $ExactFileExists = FileExists($ExactFilePath)
00952  |  |  +-        EndIf
00953  |  +-    EndIf
00954  +-EndFunc   ;==>SetupExactFile
00955    
00956  +-Func SetupWmiExporter()
00957  |        ProcessClose($WmiExporterLocalFileName)
00958  |  +-    If Not $WmiExporterLocalExists Then
00959  |  |            Local $SourcePath = (@OSArch = "X64") ? $WmiExporterX64GlobalNetSetupPath : $WmiExporterX32GlobalNetSetupPath
00960  |  |  +-        If FileCopy($SourcePath, $WmiExporterLocalPath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00961  |  |  |                $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00962  |  |  +-        EndIf
00963  |  +-    EndIf
00964  |        If Not FileExists($WmiExporterCollectorTextfileDir) Then DirCreate($WmiExporterCollectorTextfileDir)
00965  +-EndFunc   ;==>SetupWmiExporter
00966    
00967  +-Func WriteMetaDataFile()
00968  |        Local $MetaData = 'akk_metadata{computername="@ComputerName@",username="@UserName@"' _
00969  |  |                    & ',netphone_user="' & ($ActiveWinTitle = "LockScreen" ? "LockScreen" : $NetPhoneUser) & '"'
00970  |  +-    If $WmiExporterMetadataString <> "NULL" And StringLen($WmiExporterMetadataString) And Not StringIsSpace($WmiExporterMetadataString) Then
00971  |  |            $MetaData &= "," & $WmiExporterMetadataString
00972  |  +-    EndIf
00973  |        $MetaData &= '} 1'
00974  |    
00975  |        $IdleTime = _Timer_GetIdleTime()
00976  |        Local $MetaIdleTime = 'akk_idletime_sec{computername="@ComputerName@"} ' & $IdleTime / 1e3
00977  |    
00978  |        Local $aMemStats = MemGetStats()
00979  |        Local $MetaMemLoad = 'akk_memstats_load{computername="@ComputerName@"} ' & $aMemStats[$MEM_LOAD] ; Memory Load (Percentage of memory in use)
00980  |        Local $MetaMemTotalPhysRam = 'akk_memstats_total_physram_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_TOTALPHYSRAM] / 1024 / 1024, 2) ; Total physical RAM
00981  |        Local $MetaMemAvailPhysRam = 'akk_memstats_avail_physram_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_AVAILPHYSRAM] / 1024 / 1024, 2) ; Available physical RAM
00982  |        Local $MetaMemTotalPageFile = 'akk_memstats_total_pagefile_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_TOTALPAGEFILE] / 1024 / 1024, 2) ; Total Pagefile
00983  |        Local $MetaMemAvailPageFile = 'akk_memstats_avail_pagefile_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_AVAILPAGEFILE] / 1024 / 1024, 2) ; Available Pagefile
00984  |        Local $MetaMemTotalVirtual = 'akk_memstats_total_virtual_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_TOTALVIRTUAL] / 1024 / 1024, 2) ; Total virtual
00985  |        Local $MetaMemAvailVirtual = 'akk_memstats_avail_virtual_gb{computername="@ComputerName@"} ' & Round($aMemStats[$MEM_AVAILVIRTUAL] / 1024 / 1024, 2) ; Available virtual
00986  |    
00987  |        Local $MetaEventLogFull = 'akk_eventlog_full{computername="@ComputerName@"} ' & ($EventLogFull ? 1 : 0)
00988  |        Local $MetaEventLogCount = 'akk_eventlog_count{computername="@ComputerName@"} ' & $EventLogCount
00989  |        Local $MetaEventLogOldest = 'akk_eventlog_oldest{computername="@ComputerName@"} ' & $EventLogOldest
00990  |    
00991  |        Local $MetaProcessCountChrome = MetaProcessCount("chrome.exe")
00992  |        Local $MetaProcessCountJavaw = MetaProcessCount("javaw.exe")
00993  |        Local $MetaProcessCountFusionFX = MetaProcessCount("FusionFX.exe")
00994  |    
00995  |        $WmiExporterMetadataArray[1] = $MetaData
00996  |        $WmiExporterMetadataArray[2] = $MetaIdleTime
00997  |        $WmiExporterMetadataArray[3] = $MetaMemLoad
00998  |        $WmiExporterMetadataArray[4] = $MetaMemTotalPhysRam
00999  |        $WmiExporterMetadataArray[5] = $MetaMemAvailPhysRam
01000  |        $WmiExporterMetadataArray[6] = $MetaMemTotalPageFile
01001  |        $WmiExporterMetadataArray[7] = $MetaMemAvailPageFile
01002  |        $WmiExporterMetadataArray[8] = $MetaMemTotalVirtual
01003  |        $WmiExporterMetadataArray[9] = $MetaMemAvailVirtual
01004  |        $WmiExporterMetadataArray[10] = $MetaEventLogFull
01005  |        $WmiExporterMetadataArray[11] = $MetaEventLogCount
01006  |        $WmiExporterMetadataArray[12] = $MetaEventLogOldest
01007  |        $WmiExporterMetadataArray[13] = $MetaProcessCountChrome
01008  |        $WmiExporterMetadataArray[14] = $MetaProcessCountJavaw
01009  |        $WmiExporterMetadataArray[15] = $MetaProcessCountFusionFX
01010  |        $WmiExporterMetadataArray[0] = UBound($WmiExporterMetadataArray) - 1
01011  |        _FileReadToArray($WmiExporterMetadataPath, $WmiExporterMetadataArrayRet)
01012  |  +-    If Not _ArrayCompare($WmiExporterMetadataArray, $WmiExporterMetadataArrayRet, 3) Then
01013  |  |            _FileWriteFromArray($WmiExporterMetadataPath, $WmiExporterMetadataArray, 1)
01014  |  +-    EndIf
01015  +-EndFunc   ;==>WriteMetaDataFile
01016    #EndRegion WMI Exporter
01017    #Region UDF
01018    ;~ https://www.autoitscript.com/forum/topic/182506-array-comparison/
01019    ;~ Melba23
01020  +-Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
01021  |    
01022  |        ; Check if arrays
01023  |  +-    If Not (IsArray($aArray1)) Or Not (IsArray($aArray2)) Then
01024  |  |            Return SetError(1, 0, 0)
01025  |  +-    EndIf
01026  |    
01027  |        ; Check if same number of dimensions
01028  |        Local $iDims = UBound($aArray1, $UBOUND_DIMENSIONS)
01029  |  +-    If $iDims <> UBound($aArray2, $UBOUND_DIMENSIONS) Then
01030  |  |            Return SetError(2, 0, 0)
01031  |  +-    EndIf
01032  |    
01033  |        ; Check if same size
01034  |        Local $iRows = UBound($aArray1, $UBOUND_ROWS)
01035  |        Local $iCols = UBound($aArray1, $UBOUND_COLUMNS)
01036  |  +-    If $iRows <> UBound($aArray2, $UBOUND_ROWS) Or $iCols <> UBound($aArray2, $UBOUND_COLUMNS) Then
01037  |  |            Return SetError(3, 0, 0)
01038  |  +-    EndIf
01039  |    
01040  |        Local $sString_1, $sString_2
01041  |    
01042  |  +-    Switch $iMode
01043  |  |    
01044  |  |  +-        Case 0     ; Compare each element
01045  |  |  |  +-            For $i = 0 To $iRows - 1
01046  |  |  |  |  +-                For $j = 0 To $iCols - 1
01047  |  |  |  |  |  +-                    If $aArray1[$i][$j] <> $aArray1[$i][$j] Then
01048  |  |  |  |  |  |                            Return SetError(4, 0, 0)
01049  |  |  |  |  |  +-                    EndIf
01050  |  |  |  |  +-                Next
01051  |  |  |  +-            Next
01052  |  |  |    
01053  |  |  +-        Case 1     ; Convert rows to strings
01054  |  |  |  +-            For $i = 0 To $iRows - 1
01055  |  |  |  |  +-                For $j = 0 To $iCols - 1
01056  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
01057  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
01058  |  |  |  |  +-                Next
01059  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
01060  |  |  |  |  |                        Return SetError(4, 0, 0)
01061  |  |  |  |  +-                EndIf
01062  |  |  |  +-            Next
01063  |  |  |    
01064  |  |  +-        Case 2     ; Convert columnss to strings
01065  |  |  |  +-            For $j = 0 To $iCols - 1
01066  |  |  |  |  +-                For $i = 0 To $iRows - 1
01067  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
01068  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
01069  |  |  |  |  +-                Next
01070  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
01071  |  |  |  |  |                        Return SetError(4, 0, 0)
01072  |  |  |  |  +-                EndIf
01073  |  |  |  +-            Next
01074  |  |  |    
01075  |  |  +-        Case 3     ; Convert whole array to string
01076  |  |  |  +-            If _ArrayToString($aArray1) <> _ArrayToString($aArray2) Then
01077  |  |  |  |                    Return SetError(4, 0, 0)
01078  |  |  |  +-            EndIf
01079  |  |  |    
01080  |  +-    EndSwitch
01081  |    
01082  |        ; Looks as if they match
01083  |        Return 1
01084  |    
01085  +-EndFunc   ;==>_ArrayCompare
01086    
01087  +-Func _ComputerNameAndModel()
01088  |        Local $aReturn[2] = ["(Unknown)", "(Unknown)"], $oColItems, $oWMIService
01089  |    
01090  |        $oWMIService = ObjGet("winmgmts:\\.\root\cimv2")
01091  |        $oColItems = $oWMIService.ExecQuery("Select * From Win32_ComputerSystemProduct", "WQL", 0x30)
01092  |  +-    If IsObj($oColItems) Then
01093  |  |  +-        For $oObjectItem In $oColItems
01094  |  |  |                $aReturn[0] = $oObjectItem.Name
01095  |  |  |                $aReturn[1] = $oObjectItem.IdentifyingNumber
01096  |  |  +-        Next
01097  |  |            Return $aReturn
01098  |  +-    EndIf
01099  |        Return SetError(1, 0, $aReturn)
01100  +-EndFunc   ;==>_ComputerNameAndModel
01101    #EndRegion UDF
01102    

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================
ByteSuffix                00858 
Check                     00793 
CheckAndRunProc           00801 
CheckAndRunProcAs         00809 
CheckHomeDriveSpaceFree   00867 
CleaningDownloads         00817 
ConsoleLog                00399 
DownloadsNeedCleaning     00837 
EventLog                  00408 
FileDirMoveRec            00840 
GetDownloadsLastCleaningDate  00853 
GetGlobalConfig           00416 
GetWinList                00459 
ManageLogFile             00500 
MetaProcessCount          00917 
ReadGlobalConfig          00516 
ReadLocalConfig           00533 
Scrape                    00925 
ScrapeDownload            00932 
ScreenCaptureNetPhoneClient  00541 
ScreenCaptureWnd          00571 
SendMailLowSpace          00887 
SetVar                    00602 
SetupExactFile            00948 
SetupWmiExporter          00956 
Timeout                   00607 
WriteLogStartup           00616 
WriteLogStartupIni        00783 
WriteMetaDataFile         00967 
_ArrayCompare             01021 
_ComputerNameAndModel     01088 

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
#Au3Stripper_Parameters   ----- 00023
#AutoIt3Wrapper_AU3Check_Parameters  ----- 00017
#AutoIt3Wrapper_AU3Check_Stop_OnWarning  ----- 00016
#AutoIt3Wrapper_Icon      ----- 00002
#AutoIt3Wrapper_Outfile   ----- 00003
#AutoIt3Wrapper_Res_Comment  ----- 00004
#AutoIt3Wrapper_Res_CompanyName  ----- 00009
#AutoIt3Wrapper_Res_Description  ----- 00005
#AutoIt3Wrapper_Res_Field  ----- 00014
#AutoIt3Wrapper_Res_Fileversion  ----- 00006
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement  ----- 00007
#AutoIt3Wrapper_Res_Language  ----- 00013
#AutoIt3Wrapper_Res_LegalCopyright  ----- 00010
#AutoIt3Wrapper_Res_LegalTradeMarks  ----- 00011
#AutoIt3Wrapper_Res_ProductName  ----- 00008
#AutoIt3Wrapper_Res_SaveSource  ----- 00012
#AutoIt3Wrapper_Run_AU3Check  ----- 00015
#AutoIt3Wrapper_Run_After  ----- 00019
#AutoIt3Wrapper_Run_Au3Stripper  ----- 00022
#AutoIt3Wrapper_Run_Before  ----- 00018
#AutoIt3Wrapper_Run_Tidy  ----- 00020
#EndRegion                ----- 00024 00086 00137 00263 00272 00352 00791 00815 00856 00914 01016 01101
#Region                   ----- 00001 00041 00088 00138 00264 00273 00353 00792 00816 00857 00915 01017
#Tidy_Parameters          ----- 00021
#include                  ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036 00037 00038 00039 00040
$ActiveWinTitle           ----- 00110 00578 00627 00968
$AkkDir                   ----- 00150 00151 00160 00170 00175 00197 00235 00245
$AkkExists                ----- 00152
$AkkFileName              ----- 00149 00151 00154
$AkkNetDir                ----- 00155 00156
$AkkNetExists             ----- 00157
$AkkNetFileName           ----- 00154 00156
$AkkNetPath               ----- 00156 00157 00452 00455
$AkkNetTime               ----- 00452 00453
$AkkPath                  ----- 00151 00152 00451
$AkkRootDir               ----- 00145 00146 00180 00190 00203 00209 00214 00220 00225 00251 00289 00299 00304
$AkkRootExists            ----- 00147
$AkkRootFileName          ----- 00144 00146
$AkkRootPath              ----- 00146 00147
$AkkTime                  ----- 00451 00453
$AkkUpdaterDir            ----- 00160 00161 00454
$AkkUpdaterExists         ----- 00162 00423 00424 00447 00454
$AkkUpdaterFileName       ----- 00159 00161 00164 00454
$AkkUpdaterNetDir         ----- 00165 00166
$AkkUpdaterNetExists      ----- 00167 00423
$AkkUpdaterNetFileName    ----- 00164 00166
$AkkUpdaterNetPath        ----- 00166 00167 00424 00445 00447 00448
$AkkUpdaterNetTime        ----- 00445 00446
$AkkUpdaterPath           ----- 00161 00162 00424 00444 00447 00454
$AkkUpdaterTime           ----- 00444 00446
$AkkVersion               ----- 00106 00621
$ArrayDelimItem           ----- 00259 00474 00488
$ComputerName             ----- 00105 00787
$Cycle                    ----- 00093 00386 00395 00396 00400
$DIR_REMOVE               ----- 00819
$Delay                    ----- 00607 00609
$Dest                     ----- 00511 00512
$DestDir                  ----- 00840 00842 00843 00847
$Diff                     ----- 00608 00609 00611
$Dir                      ----- 00801 00804 00809 00812
$Domain                   ----- 00809 00811 00812
$DownloadsDir             ----- 00256 00257 00820 00822
$DownloadsOldDir          ----- 00257 00819 00820 00821 00822 00832
$EventLogCount            ----- 00280 00411 00631 00988
$EventLogFull             ----- 00279 00410 00630 00987
$EventLogOldest           ----- 00281 00412 00632 00989
$ExactFileDir             ----- 00284 00285
$ExactFileExists          ----- 00286 00949 00951
$ExactFileFileName        ----- 00283 00285 00288
$ExactFileNetDir          ----- 00289 00290
$ExactFileNetExists       ----- 00291
$ExactFileNetFileName     ----- 00288 00290
$ExactFileNetPath         ----- 00290 00291 00950
$ExactFilePath            ----- 00285 00286 00950 00951
$Exists                   ----- 00801 00802 00809 00810
$FC_CREATEPATH            ----- 00418 00421 00424 00430 00438 00447 00512 00843 00936 00950 00960
$FC_OVERWRITE             ----- 00418 00421 00424 00430 00438 00447 00512 00843 00847 00936 00950 00960
$FLTA_FOLDERS             ----- 00844
$FT_MODIFIED              ----- 00427 00428 00435 00436 00444 00445 00451 00452 00634
$FT_STRING                ----- 00427 00428 00435 00436 00444 00445 00451 00452 00634
$FileName                 ----- 00783 00784 00785 00787
$Folder                   ----- 00846 00847
$FolderList               ----- 00844 00846
$IDYES                    ----- 00831
$INET_DOWNLOADBACKGROUND  ----- 00927
$INET_DOWNLOADCOMPLETE    ----- 00934
$INET_DOWNLOADSUCCESS     ----- 00935
$INET_FORCERELOAD         ----- 00927
$IdleTime                 ----- 00277 00393 00975 00976
$IniGlobalDir             ----- 00175 00176 00185
$IniGlobalExDir           ----- 00185 00186
$IniGlobalExExists        ----- 00187 00420 00421 00438
$IniGlobalExFileName      ----- 00184 00186 00189
$IniGlobalExNetDir        ----- 00190 00191
$IniGlobalExNetExists     ----- 00192 00420
$IniGlobalExNetFileName   ----- 00189 00191
$IniGlobalExNetPath       ----- 00191 00192 00421 00436 00438 00439 00528
$IniGlobalExNetTime       ----- 00436 00437
$IniGlobalExPath          ----- 00186 00187 00421 00435 00438 00525 00526 00566
$IniGlobalExTime          ----- 00435 00437
$IniGlobalExists          ----- 00177 00417 00418 00430
$IniGlobalFileName        ----- 00174 00176 00179
$IniGlobalNetDir          ----- 00180 00181
$IniGlobalNetExists       ----- 00182 00417
$IniGlobalNetFileName     ----- 00179 00181
$IniGlobalNetLogDir       ----- 00220 00221 00619 00785
$IniGlobalNetLogExists    ----- 00222
$IniGlobalNetLogFileName  ----- 00219 00221
$IniGlobalNetLogInstanceDir  ----- 00230 00231
$IniGlobalNetLogInstanceExists  ----- 00232
$IniGlobalNetLogInstanceFileName  ----- 00229 00231
$IniGlobalNetLogInstancePath  ----- 00231 00232 00788
$IniGlobalNetLogPath      ----- 00221 00222
$IniGlobalNetPath         ----- 00181 00182 00418 00428 00430 00431
$IniGlobalNetTime         ----- 00428 00429
$IniGlobalPath            ----- 00176 00177 00418 00427 00430 00517 00518 00520 00521 00523
$IniGlobalTime            ----- 00427 00429
$IniLocalDir              ----- 00170 00171
$IniLocalExists           ----- 00172
$IniLocalFileName         ----- 00169 00171
$IniLocalPath             ----- 00171 00172 00506 00508 00509 00534 00536 00823 00854 00874 00875
$IntMax                   ----- 00104
$IntMin                   ----- 00103
$IsSectionAddedToKey      ----- 00783 00787
$KPSInfoDir               ----- 00119 00120 00795
$KPSInfoExists            ----- 00121 00623 00795
$KPSInfoFileName          ----- 00118 00120 00795
$KPSInfoPath              ----- 00120 00121 00795
$Key                      ----- 00783 00787 00788
$List                     ----- 00572 00575 00576 00577 00578 00579 00581 00582 00586 00589
$ListStates               ----- 00462 00464 00465 00466 00467 00468 00469 00470 00474 00483 00486 00487 00488
$ListVisble               ----- 00485 00488 00495 00497
$LogArchiveNetDir         ----- 00214 00215 00217 00511
$LogArchiveNetExists      ----- 00216 00217
$LogArchiveNetFileName    ----- 00213 00215
$LogArchiveNetPath        ----- 00215 00216
$LogDir                   ----- 00197 00198 00200 00502
$LogExists                ----- 00199 00200
$LogFileID                ----- 00194 00501 00505 00506 00534 00535 00537
$LogFileName              ----- 00196 00198 00501 00502 00503
$LogGlobalNetDir          ----- 00209 00210
$LogGlobalNetExists       ----- 00211
$LogGlobalNetFileName     ----- 00208 00210
$LogGlobalNetPath         ----- 00210 00211 00405 00510 00512
$LogNetDir                ----- 00203 00204 00206 00230 00240 00503
$LogNetExists             ----- 00205 00206
$LogNetFileName           ----- 00202 00204
$LogNetPath               ----- 00204 00205 00404 00503 00509
$LogPath                  ----- 00198 00199 00403 00502 00504 00508
$LogScrapeDir             ----- 00235 00236
$LogScrapeExists          ----- 00237
$LogScrapeFileName        ----- 00234 00236
$LogScrapeNetDir          ----- 00240 00241
$LogScrapeNetExists       ----- 00242
$LogScrapeNetFileName     ----- 00239 00241
$LogScrapeNetPath         ----- 00241 00242 00936
$LogScrapePath            ----- 00236 00237 00927 00936 00938
$LogScreenCapDir          ----- 00245 00246 00248 00584
$LogScreenCapExists       ----- 00247 00248
$LogScreenCapFileName     ----- 00244 00246
$LogScreenCapNetDir       ----- 00251 00252 00254 00557 00560
$LogScreenCapNetExists    ----- 00253 00254
$LogScreenCapNetFileName  ----- 00250 00252
$LogScreenCapNetPath      ----- 00252 00253
$LogScreenCapPath         ----- 00246 00247
$LogSpawnStatsNetDir      ----- 00225 00226
$LogSpawnStatsNetExists   ----- 00227
$LogSpawnStatsNetFileName  ----- 00224 00226
$LogSpawnStatsNetPath     ----- 00226 00227
$LowSpaceThresholdPerc    ----- 00270 00518 00873
$MB_ICONWARNING           ----- 00831 00911
$MB_SYSTEMMODAL           ----- 00831 00911
$MB_YESNO                 ----- 00831
$MEM_AVAILPAGEFILE        ----- 00983
$MEM_AVAILPHYSRAM         ----- 00981
$MEM_AVAILVIRTUAL         ----- 00985
$MEM_LOAD                 ----- 00979
$MEM_TOTALPAGEFILE        ----- 00982
$MEM_TOTALPHYSRAM         ----- 00980
$MEM_TOTALVIRTUAL         ----- 00984
$MacroAutoIt              ----- 00260
$MacroDirectory           ----- 00261
$MacroSystemInfo          ----- 00262
$MailAddresses            ----- 00271 00520 00521 00877 00878 00879
$MetaData                 ----- 00968 00971 00973 00995
$MetaEventLogCount        ----- 00988 01005
$MetaEventLogFull         ----- 00987 01004
$MetaEventLogOldest       ----- 00989 01006
$MetaIdleTime             ----- 00976 00996
$MetaMemAvailPageFile     ----- 00983 01001
$MetaMemAvailPhysRam      ----- 00981 00999
$MetaMemAvailVirtual      ----- 00985 01003
$MetaMemLoad              ----- 00979 00997
$MetaMemTotalPageFile     ----- 00982 01000
$MetaMemTotalPhysRam      ----- 00980 00998
$MetaMemTotalVirtual      ----- 00984 01002
$MetaProcessCount         ----- 00921 00922
$MetaProcessCountChrome   ----- 00991 01007
$MetaProcessCountFusionFX  ----- 00993 01009
$MetaProcessCountJavaw    ----- 00992 01008
$MsgBoxTimeout            ----- 00091 00831
$Name                     ----- 00801 00802 00803 00809 00810 00811
$NetPhoneClientDir        ----- 00134 00135
$NetPhoneClientExists     ----- 00136 00626
$NetPhoneClientFileName   ----- 00133 00135 00545
$NetPhoneClientPath       ----- 00135 00136
$NetPhoneUser             ----- 00109 00566 00567 00968
$NetPhoneUserChecksum     ----- 00108 00556 00557 00560 00566 00568
$Password                 ----- 00809 00812
$Path                     ----- 00801 00804 00809 00812
$PowerkatalogDir          ----- 00124 00125
$PowerkatalogExists       ----- 00126 00624
$PowerkatalogFileName     ----- 00123 00125
$PowerkatalogPath         ----- 00125 00126
$ProcessName              ----- 00917 00918 00920
$RUN_LOGON_NETWORK        ----- 00812
$RootDir                  ----- 00140 00141 00145 00155 00165
$RootExists               ----- 00142
$RootFileName             ----- 00139 00141
$RootPath                 ----- 00141 00142
$SHDUpdaterDir            ----- 00129 00130
$SHDUpdaterExists         ----- 00131 00625
$SHDUpdaterFileName       ----- 00128 00130
$SHDUpdaterPath           ----- 00130 00131
$STR_STRIPLEADING         ----- 00581
$STR_STRIPTRAILING        ----- 00581
$ScrapeComplete           ----- 00275 00926 00928 00933 00943
$ScreenCaptureWnd         ----- 00107 00581
$Section                  ----- 00783 00785 00787 00788
$ShowFlag                 ----- 00801 00804
$SmtpMailEHLO             ----- 00266 00901
$SmtpMailFirst            ----- 00267 00901
$SmtpMailSmtpServer       ----- 00265 00523 00901
$SmtpMailTrace            ----- 00268 00901
$SourceDir                ----- 00840 00841 00843 00844
$SourcePath               ----- 00959 00960
$SpawnDir                 ----- 00114 00115 00794
$SpawnExists              ----- 00116 00622 00794
$SpawnFileName            ----- 00113 00115 00634 00794
$SpawnPath                ----- 00115 00116 00634 00794
$StartTimer               ----- 00094 00095 00096 00097 00098 00099 00100 00101 00102
$T1                       ----- 00089
$T2                       ----- 00090
$Text                     ----- 00399 00400 00401 00403 00404 00405
$Timer                    ----- 00607 00608 00610
$Timer1                   ----- 00095 00387
$Timer2                   ----- 00096 00388
$Timer3                   ----- 00097 00389
$Timer4                   ----- 00098 00390
$Timer5                   ----- 00099 00391
$Timer6                   ----- 00100 00392
$Timer7                   ----- 00101 00393
$Timer8                   ----- 00102
$TrayTipTimeout           ----- 00092
$UBOUND_COLUMNS           ----- 01035 01036
$UBOUND_DIMENSIONS        ----- 01028 01029
$UBOUND_ROWS              ----- 01034 01036
$UserName                 ----- 00809 00811 00812
$Value                    ----- 00602 00603 00604 00783 00787 00788
$Var                      ----- 00602 00603
$WIN_STATE_ACTIVE         ----- 00474 00577
$WIN_STATE_ENABLED        ----- 00474
$WIN_STATE_EXISTS         ----- 00474
$WIN_STATE_MAXIMIZED      ----- 00474 00589
$WIN_STATE_MINIMIZED      ----- 00474 00562 00586
$WIN_STATE_VISIBLE        ----- 00474 00487
$Warning                  ----- 00824 00831 00904 00911
$WmiExporter1PID          ----- 00276 00796
$WmiExporterCollectorTextfileDir  ----- 00336 00339 00347 00964
$WmiExporterCollectorsEnabled  ----- 00308 00347
$WmiExporterLocalDir      ----- 00294 00295 00336 00796
$WmiExporterLocalExists   ----- 00296 00796 00958 00961
$WmiExporterLocalFileName  ----- 00293 00295 00796 00926 00957
$WmiExporterLocalPath     ----- 00295 00296 00796 00960 00961
$WmiExporterMetadataArray  ----- 00344 00995 00996 00997 00998 00999 01000 01001 01002 01003 01004 01005 01006 01007 
                                01008 01009 01010 01012 01013
$WmiExporterMetadataArrayRet  ----- 00345 01011 01012
$WmiExporterMetadataDir   ----- 00339 00340
$WmiExporterMetadataExists  ----- 00341
$WmiExporterMetadataFileName  ----- 00338 00340
$WmiExporterMetadataPath  ----- 00340 00341 01011 01013
$WmiExporterMetadataString  ----- 00343 00526 00527 00970 00971
$WmiExporterParams        ----- 00347 00367 00796
$WmiExporterX32GlobalNetSetupDir  ----- 00299 00300
$WmiExporterX32GlobalNetSetupExists  ----- 00301
$WmiExporterX32GlobalNetSetupFileName  ----- 00298 00300
$WmiExporterX32GlobalNetSetupPath  ----- 00300 00301 00959
$WmiExporterX64GlobalNetSetupDir  ----- 00304 00305
$WmiExporterX64GlobalNetSetupExists  ----- 00306
$WmiExporterX64GlobalNetSetupFileName  ----- 00303 00305
$WmiExporterX64GlobalNetSetupPath  ----- 00305 00306 00959
$aArray                   ----- 00859 00864
$aArray1                  ----- 01020 01023 01028 01034 01035 01047 01056 01067 01076
$aArray2                  ----- 01020 01023 01029 01036 01057 01068 01076
$aComputerSystemProduct   ----- 00639 00640 00641
$aList                    ----- 00460 00472 00473 00474
$aMemStats                ----- 00978 00979 00980 00981 00982 00983 00984 00985
$aPos                     ----- 00550 00551 00552 00553 00554 00555 00556 00560
$aProcessList             ----- 00918 00921
$aReturn                  ----- 01088 01094 01095 01097 01099
$asBody                   ----- 00891 00892 00893 00894 00895 00896 00897 00898 00899 00900 00901 00904
$hDownload                ----- 00274 00927 00934 00935 00941 00942
$hEventLog                ----- 00409 00410 00411 00412 00413
$hWnd                     ----- 00543 00547 00548 00550 00562 00573 00582 00583 00584 00587 00590 00596 00597 00598 
                                00599
$hWndActive               ----- 00542 00565 00574 00579 00596
$hWndActivePid            ----- 00111 00597 00628
$i                        ----- 00472 00473 00474 00486 00487 00488 00519 00520 00521 00575 00576 00577 00578 00579 
                                00581 00582 00584 00586 00589 00876 00877 00878 00879 01045 01047 01054 01056 01057 
                                01066 01067 01068
$iBytes                   ----- 00858 00860 00862 00864
$iCols                    ----- 01035 01036 01046 01055 01065
$iDims                    ----- 01028 01029
$iErr                     ----- 00902 00904
$iFreeSpace               ----- 00870 00872 00879 00887 00899
$iFreeSpacePerc           ----- 00872 00873 00879 00887 00890 00900
$iIndex                   ----- 00859 00861 00864
$iMode                    ----- 01020 01042
$iResponse                ----- 00901 00903
$iRows                    ----- 01034 01036 01045 01054 01066
$iState                   ----- 00471 00473 00474 00547 00562
$iTotalSpace              ----- 00871 00872 00879 00887 00899
$j                        ----- 01046 01047 01055 01056 01057 01065 01067 01068
$oColItems                ----- 01088 01091 01092 01093
$oObjectItem              ----- 01093 01094 01095
$oWMIService              ----- 01088 01090 01091
$sDir                     ----- 00919 00920
$sDrive                   ----- 00919 00920
$sExtension               ----- 00919 00920
$sFileName                ----- 00919 00920 00921
$sFromAddress             ----- 00889 00901
$sFromName                ----- 00888 00901
$sLabel                   ----- 00868 00879 00887 00898
$sString_1                ----- 01040 01056 01059 01067 01070
$sString_2                ----- 01040 01057 01059 01068 01070
$sSubject                 ----- 00890 00901
$sToAddress               ----- 00887 00901
0                         ----- 00070 00093 00268 00274 00277 00386 00395 00464 00465 00466 00467 00468 00469 00470 
                                00472 00474 00483 00486 00487 00488 00495 00519 00520 00521 00536 00537 00551 00553 
                                00555 00556 00560 00567 00568 00575 00576 00578 00581 00613 00620 00621 00622 00623 
                                00624 00625 00626 00627 00628 00630 00631 00632 00634 00640 00641 00643 00644 00645 
                                00646 00647 00648 00649 00650 00651 00653 00654 00655 00656 00657 00658 00659 00661 
                                00662 00663 00664 00665 00666 00667 00668 00670 00671 00672 00673 00674 00675 00676 
                                00677 00678 00679 00680 00681 00683 00684 00685 00686 00687 00688 00689 00690 00691 
                                00692 00693 00694 00695 00696 00697 00699 00700 00701 00702 00806 00859 00876 00877 
                                00878 00879 00891 00903 00921 00928 00942 00987 01010 01020 01024 01030 01037 01044 
                                01045 01046 01048 01054 01055 01060 01065 01066 01071 01077 01094 01099
0x30                      ----- 01091
0x7FFFFFFFFFFFFFFF        ----- 00104
0x8000000000000000        ----- 00103
1                         ----- 00044 00062 00260 00261 00262 00267 00275 00387 00391 00392 00396 00462 00464 00472 
                                00473 00474 00483 00485 00486 00488 00495 00505 00519 00521 00552 00554 00556 00560 
                                00575 00579 00582 00641 00861 00874 00876 00877 00943 00987 00995 01010 01013 01024 
                                01045 01046 01053 01054 01055 01065 01066 01083 01095 01099
10                        ----- 00271 00385 00390 01004
100                       ----- 00510 00872
1023                      ----- 00860
1024                      ----- 00510 00862 00899 00980 00981 00982 00983 00984 00985
11                        ----- 01005
12                        ----- 01006
13                        ----- 01007
14                        ----- 00838 01008
15                        ----- 00092 00393 00554 01009
15e3                      ----- 00089 00090 00387
16                        ----- 00344
174                       ----- 00553
1e3                       ----- 00504 00976
2                         ----- 00260 00261 00262 00271 00393 00465 00553 00556 00560 00577 00879 00899 00980 00981 
                                00982 00983 00984 00985 00996 01030 01064 01088
250                       ----- 00549
3                         ----- 00466 00487 00552 00554 00556 00560 00586 00997 01012 01037 01075
300                       ----- 00386
3000                      ----- 00880
30e3                      ----- 00391 00392
4                         ----- 00467 00589 00998 01048 01060 01071 01077
42                        ----- 00384
5                         ----- 00091 00388 00389 00468 00485 00488 00518 00999
500                       ----- 00395
54                        ----- 00552
57                        ----- 00551
5e3                       ----- 00356 00382
6                         ----- 00469 00488 01000
60                        ----- 00091
60e3                      ----- 00388 00389 00390 00393
7                         ----- 00470 00488 01001
8                         ----- 00462 01002
9                         ----- 00519 00876 01003
@AppDataCommonDir         ----- 00653
@AppDataDir               ----- 00661
@AutoItExe                ----- 00648
@AutoItPID                ----- 00649
@AutoItVersion            ----- 00650
@AutoItX64                ----- 00651
@CPUArch                  ----- 00683
@CRLF                     ----- 00087 00401 00824 00904
@ComSpec                  ----- 00681
@CommonFilesDir           ----- 00677
@Compiled                 ----- 00356 00367 00382 00446 00453 00643
@ComputerName             ----- 00105 00203 00266 00405 00526 00528 00619 00692 00890 00893
@DesktopCommonDir         ----- 00654
@DesktopDepth             ----- 00701
@DesktopDir               ----- 00663
@DesktopHeight            ----- 00699
@DesktopRefresh           ----- 00702
@DesktopWidth             ----- 00700
@DocumentsCommonDir       ----- 00655
@FavoritesCommonDir       ----- 00656
@FavoritesDir             ----- 00665
@HomeDrive                ----- 00284 00294 00670 00868 00870 00871 00898
@HomePath                 ----- 00671
@HomeShare                ----- 00672
@IPAddress1               ----- 00619 00620 00694 00894
@IPAddress2               ----- 00695 00895
@IPAddress3               ----- 00696 00896
@IPAddress4               ----- 00697 00897
@KBLayout                 ----- 00684
@LocalAppDataDir          ----- 00662
@LogonDNSDomain           ----- 00673
@LogonDomain              ----- 00674
@LogonServer              ----- 00675
@MDAY                     ----- 00511 00823 00838 00874 00875
@MIN                      ----- 00511
@MON                      ----- 00511 00823 00838 00874 00875
@MSEC                     ----- 00511
@MUILang                  ----- 00685
@MyDocumentsDir           ----- 00114 00664
@OSArch                   ----- 00686 00959
@OSBuild                  ----- 00690
@OSLang                   ----- 00687
@OSServicePack            ----- 00691
@OSType                   ----- 00688
@OSVersion                ----- 00689
@ProgramFilesDir          ----- 00119 00124 00129 00134 00676
@ProgramsCommonDir        ----- 00657
@ProgramsDir              ----- 00666
@SEC                      ----- 00511
@SW_HIDE                  ----- 00801
@SW_MAXIMIZE              ----- 00590
@SW_MINIMIZE              ----- 00562 00587
@ScriptDir                ----- 00150 00645
@ScriptFullPath           ----- 00106 00646
@ScriptName               ----- 00644
@StartMenuCommonDir       ----- 00658
@StartMenuDir             ----- 00667
@StartupCommonDir         ----- 00659
@SystemDir                ----- 00679
@TempDir                  ----- 00680
@UserName                 ----- 00405 00693
@UserProfileDir           ----- 00256 00668
@WindowsDir               ----- 00678
@WorkingDir               ----- 00647
@YEAR                     ----- 00511 00823 00838 00874 00875
@error                    ----- 00544 00592 00845 00902
#### ActiveWinTitle       00110
#### AkkDir               00150
#### AkkExists            00152
#### AkkFileName          00149
#### AkkNetDir            00155
#### AkkNetExists         00157
#### AkkNetFileName       00154
#### AkkNetPath           00156
#### AkkNetTime           00452
#### AkkPath              00151
#### AkkRootDir           00145
#### AkkRootExists        00147
#### AkkRootFileName      00144
#### AkkRootPath          00146
#### AkkTime              00451
#### AkkUpdaterDir        00160
#### AkkUpdaterExists     00162
#### AkkUpdaterFileName   00159
#### AkkUpdaterNetDir     00165
#### AkkUpdaterNetExists  00167
#### AkkUpdaterNetFileName  00164
#### AkkUpdaterNetPath    00166
#### AkkUpdaterNetTime    00445
#### AkkUpdaterPath       00161
#### AkkUpdaterTime       00444
#### AkkVersion           00106
And                       ----- 00393 00417 00420 00423 00446 00453 00487 00557 00802 00810 00877 00926 00970
Array                     ----- 00036
#### ArrayDelimItem       00259
AutoItConstants           ----- 00028
ByRef                     ----- 00602 00607 01020
Case                      ----- 01044 01053 01064 01075
#### ComputerName         00105
Const                     ----- 00089 00090 00091 00092 00103 00104 00105 00106 00107 00113 00114 00115 00116 00118 
                                00119 00120 00121 00123 00124 00125 00126 00128 00129 00130 00131 00133 00134 00135 
                                00136 00139 00140 00141 00142 00144 00145 00146 00147 00149 00150 00151 00152 00154 
                                00155 00156 00157 00159 00160 00161 00164 00165 00166 00167 00169 00170 00171 00172 
                                00174 00175 00176 00179 00180 00181 00182 00184 00185 00186 00189 00190 00191 00192 
                                00197 00203 00209 00214 00219 00220 00221 00222 00224 00225 00226 00227 00229 00230 
                                00231 00232 00234 00235 00236 00237 00239 00240 00241 00242 00244 00245 00246 00247 
                                00250 00251 00252 00253 00256 00257 00259 00266 00267 00268 00283 00284 00285 00288 
                                00289 00290 00291 00293 00294 00295 00298 00299 00300 00301 00303 00304 00305 00306 
                                00308 00336 00338 00339 00340 00347 00824 00844 00868 00870 00871 00872 00904 01020
#### Const$aArray2        01021
#### Cycle                00093
Date                      ----- 00039
Debug                     ----- 00035
Default                   ----- 00556 00562 00587 00590 00844
#### Delay                00607
#### Dest                 00511
#### DestDir              00840
#### Diff                 00608
Dir                       00801 00809
#### Domain               00809
#### DownloadsDir         00256
#### DownloadsOldDir      00257
Else                      ----- 00546 00937
EndFunc                   ----- 00406 00414 00457 00498 00514 00531 00539 00569 00600 00605 00614 00781 00790 00799 
                                00807 00814 00835 00839 00851 00855 00865 00885 00913 00923 00930 00946 00954 00965 
                                01015 01085 01100
EndIf                     ----- 00394 00419 00422 00425 00433 00442 00449 00456 00493 00507 00513 00524 00529 00530 
                                00538 00561 00563 00564 00580 00585 00588 00591 00593 00594 00612 00786 00805 00813 
                                00833 00834 00849 00850 00881 00883 00884 00912 00929 00940 00944 00945 00952 00953 
                                00962 00963 00972 01014 01025 01031 01038 01049 01061 01072 01078 01098
EndSwitch                 ----- 01080
EventLog                  ----- 00033
#### EventLogCount        00280
#### EventLogFull         00279
#### EventLogOldest       00281
#### ExactFileDir         00284
#### ExactFileExists      00286
#### ExactFileFileName    00283
#### ExactFileNetDir      00289
#### ExactFileNetExists   00291
#### ExactFileNetFileName  00288
#### ExactFileNetPath     00290
#### ExactFilePath        00285
Exists                    00801 00809
False                     ----- 00107
File                      ----- 00037
FileConstants             ----- 00031
#### FileName             00783
#### FolderList           00844
For                       ----- 00472 00486 00519 00575 00846 00876 01045 01046 01054 01055 01065 01066 01093
Func                      ----- 00399 00408 00416 00459 00500 00516 00533 00541 00571 00602 00607 00616 00783 00793 
                                00801 00809 00817 00837 00840 00853 00858 00867 00887 00917 00925 00932 00948 00956 
                                00967 01020 01087
Global                    ----- 00089 00090 00091 00092 00093 00094 00095 00096 00097 00098 00099 00100 00101 00102 
                                00103 00104 00105 00106 00107 00108 00109 00110 00111 00113 00114 00115 00116 00118 
                                00119 00120 00121 00123 00124 00125 00126 00128 00129 00130 00131 00133 00134 00135 
                                00136 00139 00140 00141 00142 00144 00145 00146 00147 00149 00150 00151 00152 00154 
                                00155 00156 00157 00159 00160 00161 00162 00164 00165 00166 00167 00169 00170 00171 
                                00172 00174 00175 00176 00177 00179 00180 00181 00182 00184 00185 00186 00187 00189 
                                00190 00191 00192 00194 00196 00197 00198 00199 00202 00203 00204 00205 00208 00209 
                                00210 00211 00213 00214 00215 00216 00219 00220 00221 00222 00224 00225 00226 00227 
                                00229 00230 00231 00232 00234 00235 00236 00237 00239 00240 00241 00242 00244 00245 
                                00246 00247 00250 00251 00252 00253 00256 00257 00259 00260 00261 00262 00265 00266 
                                00267 00268 00270 00271 00274 00275 00276 00277 00279 00280 00281 00283 00284 00285 
                                00286 00288 00289 00290 00291 00293 00294 00295 00296 00298 00299 00300 00301 00303 
                                00304 00305 00306 00308 00336 00338 00339 00340 00341 00343 00344 00345 00347
IdentifyingNumber         ----- 01095
#### IdleTime             00277
If                        ----- 00200 00206 00217 00248 00254 00356 00367 00382 00387 00388 00389 00390 00391 00392 
                                00393 00417 00420 00423 00429 00437 00446 00453 00487 00504 00510 00517 00525 00527 
                                00535 00544 00545 00548 00557 00562 00576 00577 00581 00583 00586 00589 00592 00609 
                                00784 00802 00810 00818 00831 00841 00842 00845 00873 00877 00894 00895 00896 00897 
                                00903 00926 00933 00934 00935 00936 00949 00950 00958 00960 00964 00970 01012 01023 
                                01029 01036 01047 01059 01070 01076 01092
In                        ----- 00846 01093
Inet                      ----- 00040
#### IniGlobalDir         00175
#### IniGlobalExDir       00185
#### IniGlobalExExists    00187
#### IniGlobalExFileName  00184
#### IniGlobalExNetDir    00190
#### IniGlobalExNetExists  00192
#### IniGlobalExNetFileName  00189
#### IniGlobalExNetPath   00191
#### IniGlobalExNetTime   00436
#### IniGlobalExPath      00186
#### IniGlobalExTime      00435
#### IniGlobalExists      00177
#### IniGlobalFileName    00174
#### IniGlobalNetDir      00180
#### IniGlobalNetExists   00182
#### IniGlobalNetFileName  00179
#### IniGlobalNetLogDir   00220
#### IniGlobalNetLogExists  00222
#### IniGlobalNetLogFileName  00219
#### IniGlobalNetLogInstanceDir  00230
#### IniGlobalNetLogInstanceExists  00232
#### IniGlobalNetLogInstanceFileName  00229
#### IniGlobalNetLogInstancePath  00231
#### IniGlobalNetLogPath  00221
#### IniGlobalNetPath     00181
#### IniGlobalNetTime     00428
#### IniGlobalPath        00176
#### IniGlobalTime        00427
#### IniLocalDir          00170
#### IniLocalExists       00172
#### IniLocalFileName     00169
#### IniLocalPath         00171
#### IntMax               00104
#### IntMin               00103
#### IsSectionAddedToKey  00783
#### KPSInfoDir           00119
#### KPSInfoExists        00121
#### KPSInfoFileName      00118
#### KPSInfoPath          00120
#### Key                  00783
#### List                 00572
#### ListStates           00462
#### ListVisble           00485
Local                     ----- 00409 00427 00428 00435 00436 00444 00445 00451 00452 00460 00462 00471 00485 00511 
                                00542 00543 00547 00550 00572 00573 00574 00608 00639 00824 00844 00859 00868 00870 
                                00871 00872 00888 00889 00890 00891 00901 00902 00904 00918 00919 00921 00959 00968 
                                00976 00978 00979 00980 00981 00982 00983 00984 00985 00987 00988 00989 00991 00992 
                                00993 01028 01034 01035 01040 01088
#### LogArchiveNetDir     00214
#### LogArchiveNetExists  00216
#### LogArchiveNetFileName  00213
#### LogArchiveNetPath    00215
#### LogDir               00197
#### LogExists            00199
#### LogFileID            00194
#### LogFileName          00196
#### LogGlobalNetDir      00209
#### LogGlobalNetExists   00211
#### LogGlobalNetFileName  00208
#### LogGlobalNetPath     00210
#### LogNetDir            00203
#### LogNetExists         00205
#### LogNetFileName       00202
#### LogNetPath           00204
#### LogPath              00198
#### LogScrapeDir         00235
#### LogScrapeExists      00237
#### LogScrapeFileName    00234
#### LogScrapeNetDir      00240
#### LogScrapeNetExists   00242
#### LogScrapeNetFileName  00239
#### LogScrapeNetPath     00241
#### LogScrapePath        00236
#### LogScreenCapDir      00245
#### LogScreenCapExists   00247
#### LogScreenCapFileName  00244
#### LogScreenCapNetDir   00251
#### LogScreenCapNetExists  00253
#### LogScreenCapNetFileName  00250
#### LogScreenCapNetPath  00252
#### LogScreenCapPath     00246
#### LogSpawnStatsNetDir  00225
#### LogSpawnStatsNetExists  00227
#### LogSpawnStatsNetFileName  00224
#### LogSpawnStatsNetPath  00226
#### LowSpaceThresholdPerc  00270
#### MacroAutoIt          00260
#### MacroDirectory       00261
#### MacroSystemInfo      00262
#### MailAddresses        00271
#### MetaData             00968
#### MetaEventLogCount    00988
#### MetaEventLogFull     00987
#### MetaEventLogOldest   00989
#### MetaIdleTime         00976
#### MetaMemAvailPageFile  00983
#### MetaMemAvailPhysRam  00981
#### MetaMemAvailVirtual  00985
#### MetaMemLoad          00979
#### MetaMemTotalPageFile  00982
#### MetaMemTotalPhysRam  00980
#### MetaMemTotalVirtual  00984
#### MetaProcessCount     00921
#### MetaProcessCountChrome  00991
#### MetaProcessCountFusionFX  00993
#### MetaProcessCountJavaw  00992
Misc                      ----- 00038
MsgBoxConstants           ----- 00029
#### MsgBoxTimeout        00091
Name                      00801 00809 01094
#### NetPhoneClientDir    00134
#### NetPhoneClientExists  00136
#### NetPhoneClientFileName  00133
#### NetPhoneClientPath   00135
#### NetPhoneUser         00109
#### NetPhoneUserChecksum  00108
Next                      ----- 00482 00494 00522 00595 00848 00882 01050 01051 01058 01062 01069 01073 01096
Not                       ----- 00200 00206 00217 00248 00254 00367 00417 00420 00423 00557 00802 00810 00842 00845 
                                00933 00949 00958 00964 00970 01012
Or                        ----- 01023 01036
#### Password             00809
Path                      00801 00809
#### PowerkatalogDir      00124
#### PowerkatalogExists   00126
#### PowerkatalogFileName  00123
#### PowerkatalogPath     00125
#### ProcessName          00917
Return                    ----- 00497 00599 00604 00611 00613 00804 00806 00854 00864 00922 01024 01030 01037 01048 
                                01060 01071 01077 01083 01097 01099
#### RootDir              00140
#### RootExists           00142
#### RootFileName         00139
#### RootPath             00141
#### SHDUpdaterDir        00129
#### SHDUpdaterExists     00131
#### SHDUpdaterFileName   00128
#### SHDUpdaterPath       00130
#### ScrapeComplete       00275
ScreenCapture             ----- 00032
#### ScreenCaptureWnd     00107
#### Section              00783
#### ShowFlag             00801
#### SmtpMailEHLO         00266
#### SmtpMailFirst        00267
#### SmtpMailSmtpServer   00265
#### SmtpMailTrace        00268
#### SourceDir            00840
#### SourcePath           00959
#### SpawnDir             00114
#### SpawnExists          00116
#### SpawnFileName        00113
#### SpawnPath            00115
#### StartTimer           00094
Step                      ----- 00519 00876
Switch                    ----- 01042
#### T1                   00089
#### T2                   00090
#### Text                 00399
Then                      ----- 00200 00206 00217 00248 00254 00356 00367 00382 00386 00387 00388 00389 00390 00391 
                                00392 00393 00395 00417 00420 00423 00429 00437 00446 00453 00487 00504 00510 00517 
                                00525 00527 00535 00544 00545 00548 00557 00562 00576 00577 00581 00583 00586 00589 
                                00592 00609 00784 00802 00810 00818 00831 00841 00842 00845 00873 00874 00877 00894 
                                00895 00896 00897 00903 00926 00933 00934 00935 00936 00949 00950 00958 00960 00964 
                                00970 01012 01023 01029 01036 01047 01059 01070 01076 01092
#### Timer                00607
#### Timer1               00095
#### Timer2               00096
#### Timer3               00097
#### Timer4               00098
#### Timer5               00099
#### Timer6               00100
#### Timer7               00101
#### Timer8               00102
Timers                    ----- 00034
To                        ----- 00472 00486 00519 00575 00876 01045 01046 01054 01055 01065 01066
TrayConstants             ----- 00030
#### TrayTipTimeout       00092
True                      ----- 00844
#### UserName             00809
Value                     00602 00783
#### Var                  00602
WEnd                      ----- 00397 00863
Warning                   00824 00904
While                     ----- 00384 00860
#### WmiExporter1PID      00276
#### WmiExporterCollectorTextfileDir  00336
#### WmiExporterCollectorsEnabled  00308
#### WmiExporterLocalDir  00294
#### WmiExporterLocalExists  00296
#### WmiExporterLocalFileName  00293
#### WmiExporterLocalPath  00295
#### WmiExporterMetadataArray  00344
#### WmiExporterMetadataArrayRet  00345
#### WmiExporterMetadataDir  00339
#### WmiExporterMetadataExists  00341
#### WmiExporterMetadataFileName  00338
#### WmiExporterMetadataPath  00340
#### WmiExporterMetadataString  00343
#### WmiExporterParams    00347
#### WmiExporterX32GlobalNetSetupDir  00299
#### WmiExporterX32GlobalNetSetupExists  00301
#### WmiExporterX32GlobalNetSetupFileName  00298
#### WmiExporterX32GlobalNetSetupPath  00300
#### WmiExporterX64GlobalNetSetupDir  00304
#### WmiExporterX64GlobalNetSetupExists  00306
#### WmiExporterX64GlobalNetSetupFileName  00303
#### WmiExporterX64GlobalNetSetupPath  00305
#### aArray               00859
#### aArray1              01021
#### aComputerSystemProduct  00639
#### aList                00460
#### aMemStats            00978
#### aPos                 00550
#### aProcessList         00918
#### aReturn              01089
#### asBody               00891
au3                       ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036 00037 00038 00039 00040
#### dieSiebenötigen     00824
#### hDownload            00274
#### hEventLog            00409
hWnd                      00543 00573
hWndActive                00542 00574
#### hWndActivePid        00111
#### iBytes               00858
#### iCols                01036
#### iDims                01029
#### iErr                 00902
iFreeSpace                00870 00887
iFreeSpacePerc            00872 00887
#### iIndex               00859
#### iMode                01021
#### iResponse            00901
#### iRows                01035
iState                    00471 00547
iTotalSpace               00871 00887
#### kopierenSiediesebitteaneinenanderenOrt.'&@CRLF&'AlleDateienausdemOrdnerwurdenbereitsindenOrdnerverschoben.'&@CRLF&'DerOrdneristübereineVerknüpfunginzuerreichen.'&@CRLF&'AlleIhreDateiendieimOrdnerble  00824
#### netphone_user        00968
#### oColItems            01089
#### oWMIService          01089
#### process              00921
#### sDir                 00919
#### sDrive               00919
#### sExtension           00919
#### sFileName            00919
#### sFromAddress         00889
#### sFromName            00888
sLabel                    00868 00887
#### sString_1            01041
#### sString_2            01041
#### sSubject             00890
#### sToAddress           00887
#### username             00968
#### werdendemnächstunwiderruflichGELÖSCHT!'&@CRLF&'BittesichtenundsichernSieambestenjetztsofortIhreweiterhinbenötigtenDateien.'&@CRLF&'SollderOrdnerjetztgeöffnetwerden?'&@CRLF  00824
== Sort Func Names Within #regions =====================================================================
 --------------- Current sequence  ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000041   #Region - Options
0000000086   #EndRegion - Options
0000000088   #Region Globals 1
0000000137   #EndRegion Globals 1
0000000138   #Region Globals 2
0000000263   #EndRegion Globals 2
0000000264   #Region Globals SMTP
0000000272   #EndRegion Globals SMTP
0000000273   #Region Globals Prometheus WMI Exporter
0000000352   #EndRegion Globals Prometheus WMI Exporter
0000000353   #Region
0000000399   Func ConsoleLog($Text)
0000000406   EndFunc   ;==>ConsoleLog
0000000408   Func EventLog()
0000000414   EndFunc   ;==>EventLog
0000000416   Func GetGlobalConfig()
0000000457   EndFunc   ;==>GetGlobalConfig
0000000459   Func GetWinList()
0000000498   EndFunc   ;==>GetWinList
0000000500   Func ManageLogFile()
0000000514   EndFunc   ;==>ManageLogFile
0000000516   Func ReadGlobalConfig()
0000000531   EndFunc   ;==>ReadGlobalConfig
0000000533   Func ReadLocalConfig()
0000000539   EndFunc   ;==>ReadLocalConfig
0000000541   Func ScreenCaptureNetPhoneClient()
0000000569   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000571   Func ScreenCaptureWnd()
0000000600   EndFunc   ;==>ScreenCaptureWnd
0000000602   Func SetVar(ByRef $Var, $Value)
0000000605   EndFunc   ;==>SetVar
0000000607   Func Timeout(ByRef $Timer, $Delay)
0000000614   EndFunc   ;==>Timeout
0000000616   Func WriteLogStartup()
0000000781   EndFunc   ;==>WriteLogStartup
0000000783   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000790   EndFunc   ;==>WriteLogStartupIni
0000000791   #EndRegion
0000000792   #Region CheckAndRunProc
0000000793   Func Check()
0000000799   EndFunc   ;==>Check
0000000801   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000807   EndFunc   ;==>CheckAndRunProc
0000000809   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000814   EndFunc   ;==>CheckAndRunProcAs
0000000815   #EndRegion CheckAndRunProc
0000000816   #Region CleaningDownloads
0000000817   Func CleaningDownloads()
0000000835   EndFunc   ;==>CleaningDownloads
0000000837   Func DownloadsNeedCleaning()
0000000839   EndFunc   ;==>DownloadsNeedCleaning
0000000840   Func FileDirMoveRec($SourceDir, $DestDir)
0000000851   EndFunc   ;==>FileDirMoveRec
0000000853   Func GetDownloadsLastCleaningDate()
0000000855   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000856   #EndRegion CleaningDownloads
0000000857   #Region FreeSpaceCheck
0000000858   Func ByteSuffix($iBytes)
0000000865   EndFunc   ;==>ByteSuffix
0000000867   Func CheckHomeDriveSpaceFree()
0000000885   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000887   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000913   EndFunc   ;==>SendMailLowSpace
0000000914   #EndRegion FreeSpaceCheck
0000000915   #Region WMI Exporter
0000000917   Func MetaProcessCount($ProcessName)
0000000923   EndFunc   ;==>MetaProcessCount
0000000925   Func Scrape()
0000000930   EndFunc   ;==>Scrape
0000000932   Func ScrapeDownload()
0000000946   EndFunc   ;==>ScrapeDownload
0000000948   Func SetupExactFile()
0000000954   EndFunc   ;==>SetupExactFile
0000000956   Func SetupWmiExporter()
0000000965   EndFunc   ;==>SetupWmiExporter
0000000967   Func WriteMetaDataFile()
0000001015   EndFunc   ;==>WriteMetaDataFile
0000001016   #EndRegion WMI Exporter
0000001017   #Region UDF
0000001020   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000001085   EndFunc   ;==>_ArrayCompare
0000001087   Func _ComputerNameAndModel()
0000001100   EndFunc   ;==>_ComputerNameAndModel
0000001101   #EndRegion UDF
 --------------- New Sequence      ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000041   #Region - Options
0000000086   #EndRegion - Options
0000000088   #Region Globals 1
0000000137   #EndRegion Globals 1
0000000138   #Region Globals 2
0000000263   #EndRegion Globals 2
0000000264   #Region Globals SMTP
0000000272   #EndRegion Globals SMTP
0000000273   #Region Globals Prometheus WMI Exporter
0000000352   #EndRegion Globals Prometheus WMI Exporter
0000000353   #Region
0000000399   Func ConsoleLog($Text)
0000000406   EndFunc   ;==>ConsoleLog
0000000408   Func EventLog()
0000000414   EndFunc   ;==>EventLog
0000000416   Func GetGlobalConfig()
0000000457   EndFunc   ;==>GetGlobalConfig
0000000459   Func GetWinList()
0000000498   EndFunc   ;==>GetWinList
0000000500   Func ManageLogFile()
0000000514   EndFunc   ;==>ManageLogFile
0000000516   Func ReadGlobalConfig()
0000000531   EndFunc   ;==>ReadGlobalConfig
0000000533   Func ReadLocalConfig()
0000000539   EndFunc   ;==>ReadLocalConfig
0000000541   Func ScreenCaptureNetPhoneClient()
0000000569   EndFunc   ;==>ScreenCaptureNetPhoneClient
0000000571   Func ScreenCaptureWnd()
0000000600   EndFunc   ;==>ScreenCaptureWnd
0000000602   Func SetVar(ByRef $Var, $Value)
0000000605   EndFunc   ;==>SetVar
0000000607   Func Timeout(ByRef $Timer, $Delay)
0000000614   EndFunc   ;==>Timeout
0000000616   Func WriteLogStartup()
0000000781   EndFunc   ;==>WriteLogStartup
0000000783   Func WriteLogStartupIni($FileName, $Section, $Key, $IsSectionAddedToKey, $Value)
0000000790   EndFunc   ;==>WriteLogStartupIni
0000000791   #EndRegion
0000000792   #Region CheckAndRunProc
0000000793   Func Check()
0000000799   EndFunc   ;==>Check
0000000801   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000807   EndFunc   ;==>CheckAndRunProc
0000000809   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000814   EndFunc   ;==>CheckAndRunProcAs
0000000815   #EndRegion CheckAndRunProc
0000000816   #Region CleaningDownloads
0000000817   Func CleaningDownloads()
0000000835   EndFunc   ;==>CleaningDownloads
0000000837   Func DownloadsNeedCleaning()
0000000839   EndFunc   ;==>DownloadsNeedCleaning
0000000840   Func FileDirMoveRec($SourceDir, $DestDir)
0000000851   EndFunc   ;==>FileDirMoveRec
0000000853   Func GetDownloadsLastCleaningDate()
0000000855   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000856   #EndRegion CleaningDownloads
0000000857   #Region FreeSpaceCheck
0000000858   Func ByteSuffix($iBytes)
0000000865   EndFunc   ;==>ByteSuffix
0000000867   Func CheckHomeDriveSpaceFree()
0000000885   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000887   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000913   EndFunc   ;==>SendMailLowSpace
0000000914   #EndRegion FreeSpaceCheck
0000000915   #Region WMI Exporter
0000000917   Func MetaProcessCount($ProcessName)
0000000923   EndFunc   ;==>MetaProcessCount
0000000925   Func Scrape()
0000000930   EndFunc   ;==>Scrape
0000000932   Func ScrapeDownload()
0000000946   EndFunc   ;==>ScrapeDownload
0000000948   Func SetupExactFile()
0000000954   EndFunc   ;==>SetupExactFile
0000000956   Func SetupWmiExporter()
0000000965   EndFunc   ;==>SetupWmiExporter
0000000967   Func WriteMetaDataFile()
0000001015   EndFunc   ;==>WriteMetaDataFile
0000001016   #EndRegion WMI Exporter
0000001017   #Region UDF
0000001020   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000001085   EndFunc   ;==>_ArrayCompare
0000001087   Func _ComputerNameAndModel()
0000001100   EndFunc   ;==>_ComputerNameAndModel
0000001101   #EndRegion UDF
== END Sort Func Names Within #Region - #EndRegion =====================================================

