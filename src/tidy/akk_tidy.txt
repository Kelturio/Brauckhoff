========================================================================================================
===  Tidy report for :C:\Users\bauer\Documents\GitHub\Brauckhoff\src\akk.au3
========================================================================================================

00001    #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_Icon=icons\MyAutoIt3_Blue.ico
00003    #AutoIt3Wrapper_Outfile=..\bin\akk.exe
00004    #AutoIt3Wrapper_Res_Comment=Hallo Werner!
00005    #AutoIt3Wrapper_Res_Description=Akk Brauckhoff Bot
00006    #AutoIt3Wrapper_Res_Fileversion=1.0.0.62
00007    #AutoIt3Wrapper_Res_Fileversion_AutoIncrement=y
00008    #AutoIt3Wrapper_Res_ProductName=Akk Brauckhoff Bot
00009    #AutoIt3Wrapper_Res_CompanyName=Sliph Co.
00010    #AutoIt3Wrapper_Res_LegalCopyright=Searinox
00011    #AutoIt3Wrapper_Res_LegalTradeMarks=Akk
00012    #AutoIt3Wrapper_Res_SaveSource=y
00013    #AutoIt3Wrapper_Res_Language=1031
00014    #AutoIt3Wrapper_Res_Field=Made By|Searinox
00015    #AutoIt3Wrapper_Run_AU3Check=n
00016    #AutoIt3Wrapper_AU3Check_Stop_OnWarning=y
00017    #AutoIt3Wrapper_AU3Check_Parameters=-d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -v 1 -v 3
00018    #AutoIt3Wrapper_Run_Before=call "..\compile\before.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00019    #AutoIt3Wrapper_Run_After=call "..\compile\after.bat" %scriptdir% %scriptfile% "..\compile\log.txt"
00020    #AutoIt3Wrapper_Run_Tidy=y
00021    #Tidy_Parameters=/tc 4 /gd /reel /sci 9 /kv 0 /bdir "tidy\bdir\" /sf
00022    #AutoIt3Wrapper_Run_Au3Stripper=y
00023    #Au3Stripper_Parameters=/tl /debug /pe /mi=99 /rm /rsln
00024    #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
00025    #cs ----------------------------------------------------------------------------
00026       
00027    #ce ----------------------------------------------------------------------------
00028    #include <AutoItConstants.au3>
00029    #include <MsgBoxConstants.au3>
00030    #include <TrayConstants.au3>
00031    #include <FileConstants.au3>
00032    #include <Array.au3>
00033    #include <File.au3>
00034    #include <Misc.au3>
00035    #include <Date.au3>
00036    #include <Inet.au3>
00037    #Region - Options
00038    ;~ Opt('CaretCoordMode', 0)				; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.
00039    ;~ Opt('ExpandEnvStrings', 1)			; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).
00040    Opt('ExpandVarStrings', 1)            ; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).
00041    ;~ Opt('FtpBinaryMode', 0)				; 1 = Binary transfer, 0 = ASCII transfer.
00042    ;~ Opt('GUICloseOnESC', 0)				; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).
00043    ; 										  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.
00044    ;~ Opt('GUICoordMode', 2)				; 1 = Absolute coordinates still relative to the dialog box.
00045    ; 										  0 = Relative position to the start of the last control (Upper left corner).
00046    ; 										  2 = Cell positionining relative to current cell.
00047    ;~ Opt('GUIDataSeparatorChar', '')		; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is ''.
00048    ;~ Opt('GUIEventOptions', 1)			; 0 = Windows behavior on click on Minimize, Restore and Maximize.
00049    ;										  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.
00050    ;										  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.
00051    ;										  3 = Combined mode of 1 & 2.
00052    ;~ Opt('GUIOnEventMode', 1)				; 0 = Disable, 1 = Enable.
00053    ;~ Opt('GUIResizeMode', 1)				; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).
00054    ;~ Opt('MouseClickDelay', 10)			; ? = 10 milliseconds by default.
00055    ;~ Opt('MouseClickDownDelay', 10)		; ? = 10 milliseconds by default.
00056    ;~ Opt('MouseClickDragDelay', 250)		; ? = 250 milliseconds by default.
00057    ;~ Opt('MouseCoordMode', 0)				; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.
00058    Opt('MustDeclareVars', 1)            ; 0 = No, 1 = Require pre-declare.
00059    ;~ Opt('OnExitFunc', '')				; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).
00060    ;~ Opt('PixelCoordMode', 0)				; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.
00061    ;~ Opt('SendAttachMode', 1)				; 0 = Don't attach, 1 = Attach.
00062    ;~ Opt('SendCapslockMode', 0)			; 1 = Store and restore, 0 = Don't store / restore.
00063    ;~ Opt('SendKeyDelay', 5)				; ? = 5 milliseconds by default.
00064    ;~ Opt('SendKeyDownDelay', 1)			; ? = 1 millisecond by default.
00065    ;~ Opt('TCPTimeout', 100)				; ? = 100 milliseconds by default.
00066    Opt('TrayAutoPause', 0)                ; 1 = AutoPausing is On, 0 = AutoPausing is Off.
00067    ;~ Opt('TrayIconDebug', 1)				; 0 = No info, 1 = Debug line info.
00068    ;~ Opt('TrayIconHide', 1)				; 0 = Show, 1 = Hide.
00069    ;~ Opt('TrayMenuMode', 1)				; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,
00070    ;											user created checked items will automatically unchecked, if you double click the tray
00071    ;											icon then the controlid is returned which has the "Default"-style.
00072    ;										  1 = No default menu.
00073    ;										  2 = User created checked items will not automatically unchecked if you click it.
00074    ;										  4 = Don't return the menuitemID which has the "default"-style in
00075    ;											the main contextmenu if you double click the tray icon.
00076    ;~ Opt('TrayOnEventMode', 1)			; 0 = disable, 1 = enable.
00077    ;~ Opt('WinDetectHiddenText', 1)		; 0 = Don't detect, 1=Do detect.
00078    ;~ Opt('WinSearchChildren', 1)			; 0 = No, 1 = Search children also.
00079    ;~ Opt('WinTextMatchMode', 4)			; 1 = Complete / Slow mode, 2 = Quick mode.
00080    ;~ Opt('WinTitleMatchMode', 4)			; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.
00081    ;~ Opt('WinWaitDelay', 250)				; ? = 250 milliseconds by default.
00082    #EndRegion - Options
00083    #Region
00084    Global Const $T1 = 15e3
00085    Global Const $T2 = 15e3
00086    Global Const $MsgBoxTimeout = 60 * 5
00087    Global Const $TrayTipTimeout = 15
00088    Global $Cycle = 0
00089    Global $StartTimer = TimerInit()
00090    Global $Timer1 = $StartTimer
00091    Global $Timer2 = $StartTimer
00092    Global $Timer3 = $StartTimer
00093    Global $Timer4 = $StartTimer
00094    Global Const $IntMin = 0x8000000000000000
00095    Global Const $IntMax = 0x7FFFFFFFFFFFFFFF
00096    
00097    Global Const $SpawnFileName = "ShadowSpawn.exe"
00098    Global Const $SpawnDir = @MyDocumentsDir & "\Isopedia GmbH\ShadowSpawn\"
00099    Global Const $SpawnPath = $SpawnDir & $SpawnFileName
00100    Global Const $SpawnExists = FileExists($SpawnPath)
00101    
00102    Global Const $KPSInfoFileName = "KPSInfo.exe"
00103    Global Const $KPSInfoDir = @ProgramFilesDir & "\KPS designstudio\KPSInfo\"
00104    Global Const $KPSInfoPath = $KPSInfoDir & $KPSInfoFileName
00105    Global Const $KPSInfoExists = FileExists($KPSInfoPath)
00106    
00107    Global Const $PowerkatalogFileName = "Powerkatalog-Schnittstelle.exe"
00108    Global Const $PowerkatalogDir = @ProgramFilesDir & "\KPS designstudio\Powerkatalog-Schnittstelle\"
00109    Global Const $PowerkatalogPath = $PowerkatalogDir & $PowerkatalogFileName
00110    Global Const $PowerkatalogExists = FileExists($PowerkatalogPath)
00111    
00112    Global Const $SHDUpdaterFileName = "SHDUpdater_min.exe"
00113    Global Const $SHDUpdaterDir = @ProgramFilesDir & "\SHDUpdater\"
00114    Global Const $SHDUpdaterPath = $SHDUpdaterDir & $SHDUpdaterFileName
00115    Global Const $SHDUpdaterExists = FileExists($SHDUpdaterPath)
00116    #EndRegion
00117    #Region
00118    Global Const $RootFileName = ""
00119    Global Const $RootDir = "\\172.16.128.4\edv\Gerrit\"
00120    Global Const $RootPath = $RootDir & $RootFileName
00121    Global Const $RootExists = FileExists($RootPath)
00122    
00123    Global Const $AkkRootFileName = ""
00124    Global Const $AkkRootDir = $RootDir & "akk\"
00125    Global Const $AkkRootPath = $AkkRootDir & $AkkRootFileName
00126    Global Const $AkkRootExists = FileExists($AkkRootPath)
00127    
00128    Global Const $AkkFileName = "akk.exe"
00129    Global Const $AkkDir = @ScriptDir & "\"
00130    Global Const $AkkPath = $AkkDir & $AkkFileName
00131    Global Const $AkkExists = FileExists($AkkPath)
00132    
00133    Global Const $AkkNetFileName = $AkkFileName
00134    Global Const $AkkNetDir = $RootDir
00135    Global Const $AkkNetPath = $AkkNetDir & $AkkNetFileName
00136    Global Const $AkkNetExists = FileExists($AkkNetPath)
00137    
00138    Global Const $AkkUpdaterFileName = "akkUpdater.exe"
00139    Global Const $AkkUpdaterDir = $AkkDir
00140    Global Const $AkkUpdaterPath = $AkkUpdaterDir & $AkkUpdaterFileName
00141    Global $AkkUpdaterExists = FileExists($AkkUpdaterPath)
00142    
00143    Global Const $AkkUpdaterNetFileName = $AkkUpdaterFileName
00144    Global Const $AkkUpdaterNetDir = $RootDir
00145    Global Const $AkkUpdaterNetPath = $AkkUpdaterNetDir & $AkkUpdaterNetFileName
00146    Global Const $AkkUpdaterNetExists = FileExists($AkkUpdaterNetPath)
00147    
00148    Global Const $IniLocalFileName = "akk.ini"
00149    Global Const $IniLocalDir = $AkkDir
00150    Global Const $IniLocalPath = $IniLocalDir & $IniLocalFileName
00151    Global Const $IniLocalExists = FileExists($IniLocalPath)
00152    
00153    Global Const $IniGlobalFileName = "akkGlobalConfig.ini"
00154    Global Const $IniGlobalDir = $AkkDir
00155    Global Const $IniGlobalPath = $IniGlobalDir & $IniGlobalFileName
00156    Global $IniGlobalExists = FileExists($IniGlobalPath)
00157    
00158    Global Const $IniGlobalNetFileName = $IniGlobalFileName
00159    Global Const $IniGlobalNetDir = $AkkRootDir
00160    Global Const $IniGlobalNetPath = $IniGlobalNetDir & $IniGlobalNetFileName
00161    Global Const $IniGlobalNetExists = FileExists($IniGlobalNetPath)
00162    
00163    Global Const $IniGlobalExFileName = "akkGlobalConfigExtended.ini"
00164    Global Const $IniGlobalExDir = $IniGlobalDir
00165    Global Const $IniGlobalExPath = $IniGlobalExDir & $IniGlobalExFileName
00166    Global $IniGlobalExExists = FileExists($IniGlobalExPath)
00167    
00168    Global Const $IniGlobalExNetFileName = $IniGlobalExFileName
00169    Global Const $IniGlobalExNetDir = $AkkRootDir
00170    Global Const $IniGlobalExNetPath = $IniGlobalExNetDir & $IniGlobalExNetFileName
00171    Global Const $IniGlobalExNetExists = FileExists($IniGlobalExNetPath)
00172    
00173    Global $LogFileID
00174    
00175    Global $LogFileName = ""
00176    Global Const $LogDir = $AkkDir & "log\"
00177    Global $LogPath = $LogDir & $LogFileName
00178    Global $LogExists = FileExists($LogPath)
00179    If Not $LogExists Then DirCreate($LogDir)
00180    
00181    Global $LogNetFileName = ""
00182    Global Const $LogNetDir = $AkkRootDir & "log\" & @ComputerName & "\"
00183    Global $LogNetPath = $LogNetDir & $LogNetFileName
00184    Global $LogNetExists = FileExists($LogNetPath)
00185    If Not $LogNetExists Then DirCreate($LogNetDir)
00186    
00187    Global $LogGlobalNetFileName = "akkGlobal.log"
00188    Global Const $LogGlobalNetDir = $AkkRootDir & "log\"
00189    Global $LogGlobalNetPath = $LogGlobalNetDir & $LogGlobalNetFileName
00190    Global $LogGlobalNetExists = FileExists($LogGlobalNetPath)
00191    
00192    Global $LogArchiveNetFileName = ""
00193    Global Const $LogArchiveNetDir = $AkkRootDir & "log\_archive\"
00194    Global $LogArchiveNetPath = $LogArchiveNetDir & $LogArchiveNetFileName
00195    Global $LogArchiveNetExists = FileExists($LogArchiveNetPath)
00196    If Not $LogArchiveNetExists Then DirCreate($LogArchiveNetDir)
00197    
00198    Global Const $IniGlobalNetLogFileName = "akkGlobal.ini"
00199    Global Const $IniGlobalNetLogDir = $AkkRootDir & "log\"
00200    Global Const $IniGlobalNetLogPath = $IniGlobalNetLogDir & $IniGlobalNetLogFileName
00201    Global Const $IniGlobalNetLogExists = FileExists($IniGlobalNetLogPath)
00202    
00203    Global Const $IniGlobalNetLogInstanceFileName = "akkMacro.ini"
00204    Global Const $IniGlobalNetLogInstanceDir = $LogNetDir
00205    Global Const $IniGlobalNetLogInstancePath = $IniGlobalNetLogInstanceDir & $IniGlobalNetLogInstanceFileName
00206    Global Const $IniGlobalNetLogInstanceExists = FileExists($IniGlobalNetLogInstancePath)
00207    
00208    Global Const $LogScrapeFileName = "scrape.prom"
00209    Global Const $LogScrapeDir = $AkkDir & "log\"
00210    Global Const $LogScrapePath = $LogScrapeDir & $LogScrapeFileName
00211    Global Const $LogScrapeExists = FileExists($LogScrapePath)
00212    
00213    Global Const $LogScrapeNetFileName = "scrape.prom"
00214    Global Const $LogScrapeNetDir = $LogNetDir
00215    Global Const $LogScrapeNetPath = $LogScrapeNetDir & $LogScrapeNetFileName
00216    Global Const $LogScrapeNetExists = FileExists($LogScrapeNetPath)
00217    
00218    Global Const $DownloadsDir = @UserProfileDir & "\Downloads"
00219    Global Const $DownloadsOldDir = $DownloadsDir & " alt"
00220    
00221    Global Const $ArrayDelimItem = "|"
00222    Global $MacroAutoIt[1][2]
00223    Global $MacroDirectory[1][2]
00224    Global $MacroSystemInfo[1][2]
00225    #EndRegion
00226    #Region SMTP
00227    Global $SmtpMailSmtpServer = ""
00228    Global Const $SmtpMailEHLO = @ComputerName
00229    Global Const $SmtpMailFirst = -1
00230    Global Const $SmtpMailTrace = 0
00231    ;~ Global Const $SmtpMailTrace = 1
00232    
00233    Global $LowSpaceThresholdPerc
00234    Global $MailAddresses[10][2]
00235    #EndRegion SMTP
00236    #Region Globals Prometheus WMI Exporter
00237    Global $hDownload = 0
00238    Global $ScrapeComplete = 1
00239    Global $WmiExporter1PID
00240    
00241    Global Const $WmiExporterLocalFileName = "wmi_exporter.exe"
00242    Global Const $WmiExporterLocalDir = @HomeDrive & "\Brauckhoff\wmi_exporter\" ;@SCRIPTDIR?
00243    Global Const $WmiExporterLocalPath = $WmiExporterLocalDir & $WmiExporterLocalFileName
00244    Global $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00245    
00246    Global Const $WmiExporterX32GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-386.exe"
00247    Global Const $WmiExporterX32GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00248    Global Const $WmiExporterX32GlobalNetSetupPath = $WmiExporterX32GlobalNetSetupDir & $WmiExporterX32GlobalNetSetupFileName
00249    Global Const $WmiExporterX32GlobalNetSetupExists = FileExists($WmiExporterX32GlobalNetSetupPath)
00250    
00251    Global Const $WmiExporterX64GlobalNetSetupFileName = "wmi_exporter-0.7.999-preview.2-amd64.exe"
00252    Global Const $WmiExporterX64GlobalNetSetupDir = $AkkRootDir & "wmi_exporter\"
00253    Global Const $WmiExporterX64GlobalNetSetupPath = $WmiExporterX64GlobalNetSetupDir & $WmiExporterX64GlobalNetSetupFileName
00254    Global Const $WmiExporterX64GlobalNetSetupExists = FileExists($WmiExporterX64GlobalNetSetupPath)
00255    
00256    Global Const $WmiExporterCollectorsEnabled = "cs,logical_disk,memory,net,os,process,service,system,textfile"
00257    ;~          & "" _ ;~ & "ad" _ ; Active Directory Domain Services
00258    ;~          & "" _ ;~ & ",cpu" _ ; CPU usage
00259    ;~          & "cs" _ ; "Computer System" metrics (system properties, num cpus/total memory)
00260    ;~          & "" _ ;~ & ",dns" _ ; DNS Server
00261    ;~          & "" _ ;~ & ",hyperv" _ ; Hyper-V hosts
00262    ;~          & "" _ ;~ & ",iis" _ ; IIS sites and applications
00263    ;~          & ",logical_disk" _ ; Logical disks, disk I/O
00264    ;~          & ",memory" _ ; Memory usage metrics
00265    ;~          & "" _ ;~ & ",msmq" _ ; MSMQ queues
00266    ;~          & "" _ ;~ & ",mssql" _ ; SQL Server Performance Objects metrics
00267    ;~          & "" _ ;~ & ",netframework_clrexceptions" _ ; .NET Framework CLR Exceptions
00268    ;~          & "" _ ;~ & ",netframework_clrinterop" _ ; .NET Framework Interop Metrics
00269    ;~          & "" _ ;~ & ",netframework_clrjit" _ ; .NET Framework JIT metrics
00270    ;~          & "" _ ;~ & ",netframework_clrloading" _ ; .NET Framework CLR Loading metrics
00271    ;~          & "" _ ;~ & ",netframework_clrlocksandthreads" _ ; .NET Framework locks and metrics threads
00272    ;~          & "" _ ;~ & ",netframework_clrmemory" _ ; .NET Framework Memory metrics
00273    ;~          & "" _ ;~ & ",netframework_clrremoting" _ ; .NET Framework Remoting metrics
00274    ;~          & "" _ ;~ & ",netframework_clrsecurity" _ ; .NET Framework Security Check metrics
00275    ;~          & ",net" _ ; Network interface I/O
00276    ;~          & ",os" _ ; OS metrics (memory, processes, users)
00277    ;~          & ",process" _ ; Per-process metrics
00278    ;~          & ",service" _ ; Service state metrics
00279    ;~          & ",system" _ ; System calls
00280    ;~          & "" _ ;~ & ",tcp" _ ; TCP connections
00281    ;~          & ",textfile" _ ; Read prometheus metrics from a text file
00282    ;~          & "" _ ;~ & ",vmware" ; Performance counters installed by the Vmware Guest agent
00283    
00284    Global Const $WmiExporterCollectorTextfileDir = $WmiExporterLocalDir & "textfile_inputs\"
00285    
00286    Global Const $WmiExporterMetadataFileName = "metadata.prom"
00287    Global Const $WmiExporterMetadataDir = $WmiExporterCollectorTextfileDir
00288    Global Const $WmiExporterMetadataPath = $WmiExporterMetadataDir & $WmiExporterMetadataFileName
00289    Global $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00290    
00291    Global $WmiExporterMetadataString
00292    Global $WmiExporterMetadataArray[2]
00293    Global $WmiExporterMetadataArrayRet
00294    
00295    Global Const $WmiExporterParams = '' _
00296                   & ' --log.format logger:eventlog?name=wmi_exporter' _
00297                   & ' --collectors.enabled ' & $WmiExporterCollectorsEnabled _
00298                   & ' --telemetry.addr :9182 ' _
00299                   & ' --collector.textfile.directory ' & $WmiExporterCollectorTextfileDir
00300    #EndRegion Globals Prometheus WMI Exporter
00301    #Region
00302    _Singleton("akk")
00303    
00304    Sleep(5e3)
00305    
00306    ReadLocalConfig()
00307    
00308    ManageLogFile()
00309    
00310    ConsoleLog("akk.exe läuft")
00311    ConsoleLog($SpawnPath)
00312    ConsoleLog($KPSInfoPath)
00313    ConsoleLog($WmiExporterLocalPath)
00314    ConsoleLog("werden überwacht")
00315    ;~ ConsoleLog($WmiExporterParams)
00316    
00317    GetGlobalConfig()
00318    ReadGlobalConfig()
00319    WriteLogStartup()
00320    SetupWmiExporter()
00321    CleaningDownloads()
00322    CheckHomeDriveSpaceFree()
00323    
00324    Sleep(5e3)
00325    
00326  +-While 42
00327  |        Sleep(10)
00328  |  +-    If (Mod($Cycle, 300) = 0) Then
00329  |  |            If Timeout($Timer1, 15e3 * 1) Then Check()
00330  |  |            If Timeout($Timer2, 60e3 * 5) Then GetGlobalConfig()
00331  |  |            If Timeout($Timer3, 60e3 * 5) Then ManageLogFile()
00332  |  |            If Timeout($Timer4, 60e3 * 5) Then Scrape()
00333  |  +-    EndIf
00334  |        If (Mod($Cycle, 500) = 0) Then ScrapeDownload()
00335  |        $Cycle += 1
00336  +-WEnd
00337    
00338  +-Func ConsoleLog($Text)
00339  |        $Text = StringFormat("%10s", $Cycle) & " : " & $Text
00340  |        ConsoleWrite(@CRLF & $Text)
00341  |    ;~     If @OSArch <> "WIN_10" Then TrayTip("", $Text, $TrayTipTimeout, $TIP_ICONEXCLAMATION)
00342  |        _FileWriteLog($LogPath, $Text)
00343  |        _FileWriteLog($LogNetPath, $Text)
00344  |        _FileWriteLog($LogGlobalNetPath, StringFormat("%-16s", @ComputerName) & " " & StringFormat("%-16s", @UserName) & " " & $Text)
00345  +-EndFunc   ;==>ConsoleLog
00346    
00347  +-Func GetGlobalConfig()
00348  |  +-    If $IniGlobalNetExists And Not $IniGlobalExists Then
00349  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00350  |  +-    EndIf
00351  |  +-    If $IniGlobalExNetExists And Not $IniGlobalExExists Then
00352  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00353  |  +-    EndIf
00354  |  +-    If $AkkUpdaterNetExists And Not $AkkUpdaterExists Then
00355  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00356  |  +-    EndIf
00357  |    
00358  |        Local $IniGlobalTime = FileGetTime($IniGlobalPath, $FT_MODIFIED, $FT_STRING)
00359  |        Local $IniGlobalNetTime = FileGetTime($IniGlobalNetPath, $FT_MODIFIED, $FT_STRING)
00360  |  +-    If $IniGlobalTime <> $IniGlobalNetTime Then
00361  |  |            $IniGlobalExists = FileCopy($IniGlobalNetPath, $IniGlobalPath, $FC_OVERWRITE + $FC_CREATEPATH)
00362  |  |            ConsoleLog("Reload Config " & $IniGlobalNetPath)
00363  |  |            ReadGlobalConfig()
00364  |  +-    EndIf
00365  |    
00366  |        Local $IniGlobalExTime = FileGetTime($IniGlobalExPath, $FT_MODIFIED, $FT_STRING)
00367  |        Local $IniGlobalExNetTime = FileGetTime($IniGlobalExNetPath, $FT_MODIFIED, $FT_STRING)
00368  |  +-    If $IniGlobalExTime <> $IniGlobalExNetTime Then
00369  |  |            $IniGlobalExExists = FileCopy($IniGlobalExNetPath, $IniGlobalExPath, $FC_OVERWRITE + $FC_CREATEPATH)
00370  |  |            ConsoleLog("Reload Config Ex" & $IniGlobalExNetPath)
00371  |  |            ReadGlobalConfig()
00372  |  |            WriteMetaDataFile()
00373  |  +-    EndIf
00374  |    
00375  |        Local $AkkUpdaterTime = FileGetTime($AkkUpdaterPath, $FT_MODIFIED, $FT_STRING)
00376  |        Local $AkkUpdaterNetTime = FileGetTime($AkkUpdaterNetPath, $FT_MODIFIED, $FT_STRING)
00377  |  +-    If $AkkUpdaterTime <> $AkkUpdaterNetTime And @Compiled Then
00378  |  |            $AkkUpdaterExists = FileCopy($AkkUpdaterNetPath, $AkkUpdaterPath, $FC_OVERWRITE + $FC_CREATEPATH)
00379  |  |            ConsoleLog("Reload Akk Updater " & $AkkUpdaterNetPath)
00380  |  +-    EndIf
00381  |    
00382  |        Local $AkkTime = FileGetTime($AkkPath, $FT_MODIFIED, $FT_STRING)
00383  |        Local $AkkNetTime = FileGetTime($AkkNetPath, $FT_MODIFIED, $FT_STRING)
00384  |  +-    If $AkkTime <> $AkkNetTime And @Compiled Then
00385  |  |            CheckAndRunProc($AkkUpdaterFileName, $AkkUpdaterDir, $AkkUpdaterPath, $AkkUpdaterExists)
00386  |  |            ConsoleLog("Reload Akk " & $AkkNetPath)
00387  |  +-    EndIf
00388  +-EndFunc   ;==>GetGlobalConfig
00389    
00390  +-Func ManageLogFile()
00391  |        $LogFileName = StringFormat("%04s", $LogFileID) & ".log"
00392  |        $LogPath = $LogDir & $LogFileName
00393  |        $LogNetPath = $LogNetDir & $LogFileName
00394  |  +-    If _FileCountLines($LogPath) > 1e3 Then
00395  |  |            $LogFileID += 1
00396  |  |            IniWrite($IniLocalPath, "LogFile", "ID", $LogFileID)
00397  |  +-    EndIf
00398  |        IniWrite($IniLocalPath, "LogFile", "LogPath", $LogPath)
00399  |        IniWrite($IniLocalPath, "LogFile", "LogNetPath", $LogNetPath)
00400  |  +-    If FileGetSize($LogGlobalNetPath) / 1024 > 100 Then
00401  |  |            Local $Dest = $LogArchiveNetDir & @YEAR & @MON & @MDAY & @MIN & @SEC & @MSEC & ".log"
00402  |  |            FileMove($LogGlobalNetPath, $Dest, $FC_OVERWRITE + $FC_CREATEPATH)
00403  |  +-    EndIf
00404  +-EndFunc   ;==>ManageLogFile
00405    
00406  +-Func ReadGlobalConfig()
00407  |  +-    If FileExists($IniGlobalPath) Then
00408  |  |            $LowSpaceThresholdPerc = IniRead($IniGlobalPath, "FreeSpaceCheck", "LowSpaceThresholdPerc", 5)
00409  |  |  +-        For $i = 0 To 9 Step 1
00410  |  |  |                $MailAddresses[$i][0] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Address", "")
00411  |  |  |                $MailAddresses[$i][1] = IniRead($IniGlobalPath, "FreeSpaceCheck", "Mail" & $i & "Active", 0)
00412  |  |  +-        Next
00413  |  |            $SmtpMailSmtpServer = IniRead($IniGlobalPath, "SmtpMail", "SmtpServer", "")
00414  |  +-    EndIf
00415  |  +-    If FileExists($IniGlobalExPath) Then
00416  |  |            $WmiExporterMetadataString = IniRead($IniGlobalExPath, "MetaData", @ComputerName, "NULL")
00417  |  |  +-        If $WmiExporterMetadataString = "NULL" Then
00418  |  |  |                IniWrite($IniGlobalExNetPath, "MetaData", @ComputerName, "")
00419  |  |  +-        EndIf
00420  |  +-    EndIf
00421  +-EndFunc   ;==>ReadGlobalConfig
00422    
00423  +-Func ReadLocalConfig()
00424  |        $LogFileID = IniRead($IniLocalPath, "LogFile", "ID", "NULL")
00425  |  +-    If $LogFileID = "NULL" Then
00426  |  |            IniWrite($IniLocalPath, "LogFile", "ID", 0)
00427  |  |            $LogFileID = 0
00428  |  +-    EndIf
00429  +-EndFunc   ;==>ReadLocalConfig
00430    
00431  +-Func SetVar(ByRef $Var, $Value)
00432  |        $Var = $Value
00433  |        Return $Value
00434  +-EndFunc   ;==>SetVar
00435    
00436  +-Func Timeout(ByRef $Timer, $Delay)
00437  |        Local $Diff = TimerDiff($Timer)
00438  |  +-    If $Diff > $Delay Then
00439  |  |            $Timer = TimerInit()
00440  |  |            Return $Diff
00441  |  +-    EndIf
00442  |        Return 0
00443  +-EndFunc   ;==>Timeout
00444    
00445  +-Func WriteLogStartup()
00446  |        Local Const $DelimItem = $ArrayDelimItem
00447  |        IniWrite($IniGlobalNetLogPath, "Computername", @IPAddress1, @ComputerName)
00448  |        IniWrite($IniGlobalNetLogPath, "IPAddress1", @ComputerName, @IPAddress1)
00449  |        IniWrite($IniGlobalNetLogPath, "AkkVersion", @ComputerName, FileGetVersion(@ScriptFullPath))
00450  |    
00451  |        _ArrayAdd($MacroAutoIt, "Compiled" & $DelimItem & @Compiled, 0, $DelimItem)
00452  |        _ArrayAdd($MacroAutoIt, "ScriptName" & $DelimItem & @ScriptName, 0, $DelimItem)
00453  |        _ArrayAdd($MacroAutoIt, "ScriptDir" & $DelimItem & @ScriptDir, 0, $DelimItem)
00454  |        _ArrayAdd($MacroAutoIt, "ScriptFullPath" & $DelimItem & @ScriptFullPath, 0, $DelimItem)
00455  |        _ArrayAdd($MacroAutoIt, "WorkingDir" & $DelimItem & @WorkingDir, 0, $DelimItem)
00456  |        _ArrayAdd($MacroAutoIt, "AutoItExe" & $DelimItem & @AutoItExe, 0, $DelimItem)
00457  |        _ArrayAdd($MacroAutoIt, "AutoItPID" & $DelimItem & @AutoItPID, 0, $DelimItem)
00458  |        _ArrayAdd($MacroAutoIt, "AutoItVersion" & $DelimItem & @AutoItVersion, 0, $DelimItem)
00459  |        _ArrayAdd($MacroAutoIt, "AutoItX64" & $DelimItem & @AutoItX64, 0, $DelimItem)
00460  |    ;~     _ArrayDisplay($MacroAutoIt)
00461  |        IniWriteSection($IniGlobalNetLogInstancePath, "MacroAutoIt", $MacroAutoIt)
00462  |    
00463  |        _ArrayAdd($MacroDirectory, "AppDataCommonDir" & $DelimItem & @AppDataCommonDir, 0, $DelimItem)
00464  |        _ArrayAdd($MacroDirectory, "DesktopCommonDir" & $DelimItem & @DesktopCommonDir, 0, $DelimItem)
00465  |        _ArrayAdd($MacroDirectory, "DocumentsCommonDir" & $DelimItem & @DocumentsCommonDir, 0, $DelimItem)
00466  |        _ArrayAdd($MacroDirectory, "FavoritesCommonDir" & $DelimItem & @FavoritesCommonDir, 0, $DelimItem)
00467  |        _ArrayAdd($MacroDirectory, "ProgramsCommonDir" & $DelimItem & @ProgramsCommonDir, 0, $DelimItem)
00468  |        _ArrayAdd($MacroDirectory, "StartMenuCommonDir" & $DelimItem & @StartMenuCommonDir, 0, $DelimItem)
00469  |        _ArrayAdd($MacroDirectory, "StartupCommonDir" & $DelimItem & @StartupCommonDir, 0, $DelimItem)
00470  |    
00471  |        _ArrayAdd($MacroDirectory, "AppDataDir" & $DelimItem & @AppDataDir, 0, $DelimItem)
00472  |        _ArrayAdd($MacroDirectory, "LocalAppDataDir" & $DelimItem & @LocalAppDataDir, 0, $DelimItem)
00473  |        _ArrayAdd($MacroDirectory, "DesktopDir" & $DelimItem & @DesktopDir, 0, $DelimItem)
00474  |        _ArrayAdd($MacroDirectory, "MyDocumentsDir" & $DelimItem & @MyDocumentsDir, 0, $DelimItem)
00475  |        _ArrayAdd($MacroDirectory, "FavoritesDir" & $DelimItem & @FavoritesDir, 0, $DelimItem)
00476  |        _ArrayAdd($MacroDirectory, "ProgramsDir" & $DelimItem & @ProgramsDir, 0, $DelimItem)
00477  |        _ArrayAdd($MacroDirectory, "StartMenuDir" & $DelimItem & @StartMenuDir, 0, $DelimItem)
00478  |        _ArrayAdd($MacroDirectory, "StartupDir" & $DelimItem & @StartupDir, 0, $DelimItem)
00479  |        _ArrayAdd($MacroDirectory, "UserProfileDir" & $DelimItem & @UserProfileDir, 0, $DelimItem)
00480  |    
00481  |        _ArrayAdd($MacroDirectory, "HomeDrive" & $DelimItem & @HomeDrive, 0, $DelimItem)
00482  |        _ArrayAdd($MacroDirectory, "HomePath" & $DelimItem & @HomePath, 0, $DelimItem)
00483  |        _ArrayAdd($MacroDirectory, "HomeShare" & $DelimItem & @HomeShare, 0, $DelimItem)
00484  |        _ArrayAdd($MacroDirectory, "LogonDNSDomain" & $DelimItem & @LogonDNSDomain, 0, $DelimItem)
00485  |        _ArrayAdd($MacroDirectory, "LogonDomain" & $DelimItem & @LogonDomain, 0, $DelimItem)
00486  |        _ArrayAdd($MacroDirectory, "LogonServer" & $DelimItem & @LogonServer, 0, $DelimItem)
00487  |        _ArrayAdd($MacroDirectory, "ProgramFilesDir" & $DelimItem & @ProgramFilesDir, 0, $DelimItem)
00488  |        _ArrayAdd($MacroDirectory, "CommonFilesDir" & $DelimItem & @CommonFilesDir, 0, $DelimItem)
00489  |        _ArrayAdd($MacroDirectory, "WindowsDir" & $DelimItem & @WindowsDir, 0, $DelimItem)
00490  |        _ArrayAdd($MacroDirectory, "SystemDir" & $DelimItem & @SystemDir, 0, $DelimItem)
00491  |        _ArrayAdd($MacroDirectory, "TempDir" & $DelimItem & @TempDir, 0, $DelimItem)
00492  |        _ArrayAdd($MacroDirectory, "ComSpec" & $DelimItem & @ComSpec, 0, $DelimItem)
00493  |    ;~     _ArrayDisplay($MacroDirectory)
00494  |        IniWriteSection($IniGlobalNetLogInstancePath, "MacroDirectory", $MacroDirectory)
00495  |    
00496  |        _ArrayAdd($MacroSystemInfo, "CPUArch" & $DelimItem & @CPUArch, 0, $DelimItem)
00497  |        _ArrayAdd($MacroSystemInfo, "KBLayout" & $DelimItem & @KBLayout, 0, $DelimItem)
00498  |        _ArrayAdd($MacroSystemInfo, "MUILang" & $DelimItem & @MUILang, 0, $DelimItem)
00499  |        _ArrayAdd($MacroSystemInfo, "OSArch" & $DelimItem & @OSArch, 0, $DelimItem)
00500  |        _ArrayAdd($MacroSystemInfo, "OSLang" & $DelimItem & @OSLang, 0, $DelimItem)
00501  |        _ArrayAdd($MacroSystemInfo, "OSType" & $DelimItem & @OSType, 0, $DelimItem)
00502  |        _ArrayAdd($MacroSystemInfo, "OSVersion" & $DelimItem & @OSVersion, 0, $DelimItem)
00503  |        _ArrayAdd($MacroSystemInfo, "OSBuild" & $DelimItem & @OSBuild, 0, $DelimItem)
00504  |        _ArrayAdd($MacroSystemInfo, "OSServicePack" & $DelimItem & @OSServicePack, 0, $DelimItem)
00505  |        _ArrayAdd($MacroSystemInfo, "ComputerName" & $DelimItem & @ComputerName, 0, $DelimItem)
00506  |        _ArrayAdd($MacroSystemInfo, "UserName" & $DelimItem & @UserName, 0, $DelimItem)
00507  |        _ArrayAdd($MacroSystemInfo, "IPAddress1" & $DelimItem & @IPAddress1, 0, $DelimItem)
00508  |        _ArrayAdd($MacroSystemInfo, "IPAddress2" & $DelimItem & @IPAddress2, 0, $DelimItem)
00509  |        _ArrayAdd($MacroSystemInfo, "IPAddress3" & $DelimItem & @IPAddress3, 0, $DelimItem)
00510  |        _ArrayAdd($MacroSystemInfo, "IPAddress4" & $DelimItem & @IPAddress4, 0, $DelimItem)
00511  |    
00512  |        _ArrayAdd($MacroSystemInfo, "DesktopHeight" & $DelimItem & @DesktopHeight, 0, $DelimItem)
00513  |        _ArrayAdd($MacroSystemInfo, "DesktopWidth" & $DelimItem & @DesktopWidth, 0, $DelimItem)
00514  |        _ArrayAdd($MacroSystemInfo, "DesktopDepth" & $DelimItem & @DesktopDepth, 0, $DelimItem)
00515  |        _ArrayAdd($MacroSystemInfo, "DesktopRefresh" & $DelimItem & @DesktopRefresh, 0, $DelimItem)
00516  |    ;~     _ArrayDisplay($MacroSystemInfo)
00517  |        IniWriteSection($IniGlobalNetLogInstancePath, "MacroSystemInfo", $MacroSystemInfo)
00518  +-EndFunc   ;==>WriteLogStartup
00519    #EndRegion
00520    #Region CheckAndRunProc
00521  +-Func Check()
00522  |        CheckAndRunProc($SpawnFileName, $SpawnDir, $SpawnPath, $SpawnExists)
00523  |        CheckAndRunProc($KPSInfoFileName, $KPSInfoDir, $KPSInfoPath, $KPSInfoExists)
00524  |        $WmiExporter1PID = CheckAndRunProc($WmiExporterLocalFileName, $WmiExporterLocalDir, $WmiExporterLocalPath & $WmiExporterParams, $WmiExporterLocalExists)
00525  |    ;~     CheckAndRunProcAs($PowerkatalogFileName, $PowerkatalogDir, $PowerkatalogPath, $PowerkatalogExists, "Administrator", "Brauckhoff", "")
00526  |    ;~     CheckAndRunProc($SHDUpdaterFileName, $SHDUpdaterDir, $SHDUpdaterPath, $SHDUpdaterExists)
00527  +-EndFunc   ;==>Check
00528    
00529  +-Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
00530  |  +-    If $Exists And Not ProcessExists($Name) Then
00531  |  |            ConsoleLog($Name & " wird gestartet")
00532  |  |            Return Run($Path, $Dir, $ShowFlag)
00533  |  +-    EndIf
00534  |        Return 0
00535  +-EndFunc   ;==>CheckAndRunProc
00536    
00537  +-Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
00538  |  +-    If $Exists And Not ProcessExists($Name) Then
00539  |  |            ConsoleLog($Name & " wird gestartet als " & $UserName & " in " & $Domain & " mit Network credentials only")
00540  |  |            RunAs($UserName, $Domain, $Password, $RUN_LOGON_NETWORK, $Path, $Dir)
00541  |  +-    EndIf
00542  +-EndFunc   ;==>CheckAndRunProcAs
00543    #EndRegion CheckAndRunProc
00544    #Region CleaningDownloads
00545  +-Func CleaningDownloads()
00546  |  +-    If DownloadsNeedCleaning() Then
00547  |  |            DirRemove($DownloadsOldDir, $DIR_REMOVE)
00548  |  |            FileDirMoveRec($DownloadsDir, $DownloadsOldDir)
00549  |  |            FileDelete($DownloadsOldDir & "\Downloads alt.lnk")
00550  |  |            FileCreateShortcut($DownloadsOldDir, $DownloadsDir & "\Downloads alt")
00551  |  |            IniWrite($IniLocalPath, "Downloads", "LastCleaningDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00552  |  |            Local Const $Warning = '' _
00553  |  |  |                        & 'Wenn Sie noch wichtige Dateien im Ordner "Downloads" aufbewahren, die Sie benötigen, kopieren Sie diese bitte an einen anderen Ort.' & @CRLF _
00554  |  |  |                        & 'Alle Dateien aus dem Ordner "Downloads" wurden bereits in den Ordner "Downloads alt" verschoben.' & @CRLF _
00555  |  |  |                        & 'Der Ordner "Downloads alt" ist über eine Verknüpfung in "Downloads" zu erreichen.' & @CRLF _
00556  |  |  |                        & 'Alle Ihre Dateien die im Ordner "Downloads alt" bleiben, werden demnächst unwiderruflich GELÖSCHT!' & @CRLF _
00557  |  |  |                        & 'Bitte sichten und sichern Sie am besten jetzt sofort Ihre weiterhin benötigten Dateien.' & @CRLF _
00558  |  |  |                        & 'Soll der Ordner "Downloads alt" jetzt geöffnet werden?' & @CRLF
00559  |  |  +-        If MsgBox($MB_YESNO + $MB_ICONWARNING + $MB_SYSTEMMODAL, "ACHTUNG WICHTIG! LÖSCHUNG IHRER DOWNLOAD-DATEIEN", $Warning, $MsgBoxTimeout) = $IDYES Then
00560  |  |  |                ShellExecute($DownloadsOldDir)
00561  |  |  +-        EndIf
00562  |  +-    EndIf
00563  +-EndFunc   ;==>CleaningDownloads
00564    
00565  +-Func DownloadsNeedCleaning()
00566  |        Return (_DateToDayValue(@YEAR, @MON, @MDAY) - GetDownloadsLastCleaningDate()) >= 14
00567  +-EndFunc   ;==>DownloadsNeedCleaning
00568  +-Func FileDirMoveRec($SourceDir, $DestDir)
00569  |  +-    If FileExists($SourceDir) Then
00570  |  |            If Not FileExists($DestDir) Then DirCreate($DestDir)
00571  |  |            FileMove($SourceDir & "\*.*", $DestDir, $FC_OVERWRITE + $FC_CREATEPATH)
00572  |  |            Local Const $FolderList = _FileListToArray($SourceDir, Default, $FLTA_FOLDERS, True)
00573  |  |  +-        If Not @error Then
00574  |  |  |  +-            For $Folder In $FolderList
00575  |  |  |  |                    DirMove($Folder, $DestDir, $FC_OVERWRITE)
00576  |  |  |  +-            Next
00577  |  |  +-        EndIf
00578  |  +-    EndIf
00579  +-EndFunc   ;==>FileDirMoveRec
00580    
00581  +-Func GetDownloadsLastCleaningDate()
00582  |        Return IniRead($IniLocalPath, "Downloads", "LastCleaningDate", "NULL")
00583  +-EndFunc   ;==>GetDownloadsLastCleaningDate
00584    #EndRegion CleaningDownloads
00585    #Region FreeSpaceCheck
00586  +-Func ByteSuffix($iBytes)
00587  |        Local $iIndex = 0, $aArray = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB']
00588  |  +-    While $iBytes > 1023
00589  |  |            $iIndex += 1
00590  |  |            $iBytes /= 1024
00591  |  +-    WEnd
00592  |        Return Round($iBytes) & $aArray[$iIndex]
00593  +-EndFunc   ;==>ByteSuffix
00594    
00595  +-Func CheckHomeDriveSpaceFree()
00596  |        Local Const $sLabel = DriveGetLabel(@HomeDrive & "\")
00597  |    ;~     Local Const $sSerial = DriveGetSerial(@HomeDrive & "\")
00598  |        Local Const $iFreeSpace = DriveSpaceFree(@HomeDrive & "\")
00599  |        Local Const $iTotalSpace = DriveSpaceTotal(@HomeDrive & "\")
00600  |        Local Const $iFreeSpacePerc = ($iFreeSpace / $iTotalSpace) * 100
00601  |  +-    If $iFreeSpacePerc < $LowSpaceThresholdPerc Then
00602  |  |  +-        If (_DateToDayValue(@YEAR, @MON, @MDAY) - IniRead($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", "NULL")) >= 1 Then
00603  |  |  |                IniWrite($IniLocalPath, "FreeSpaceCheck", "LastMailSendDate", _DateToDayValue(@YEAR, @MON, @MDAY))
00604  |  |  |  +-            For $i = 0 To 9 Step 1
00605  |  |  |  |  +-                If $MailAddresses[$i][0] <> "" And $MailAddresses[$i][1] = 1 Then
00606  |  |  |  |  |                        ConsoleLog("Sending Mail to " & $MailAddresses[$i][0])
00607  |  |  |  |  |                        SendMailLowSpace($MailAddresses[$i][0], Round($iFreeSpacePerc, 2), $sLabel, $iFreeSpace, $iTotalSpace)
00608  |  |  |  |  |                        Sleep(3000)
00609  |  |  |  |  +-                EndIf
00610  |  |  |  +-            Next
00611  |  |  +-        EndIf
00612  |  +-    EndIf
00613  +-EndFunc   ;==>CheckHomeDriveSpaceFree
00614    
00615  +-Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
00616  |        Local $sFromName = "akk.exe (Gerrit)"
00617  |        Local $sFromAddress = "akk@kuechen-brauckhoff.de"
00618  |        Local $sSubject = "AKK Warnung freier Speicher auf " & @ComputerName & " ist " & $iFreeSpacePerc & "% !"
00619  |        Local $asBody[0]
00620  |        _ArrayAdd($asBody, "Akk Warnung wenig Speicherplatz auf:")
00621  |        _ArrayAdd($asBody, @ComputerName)
00622  |        If @IPAddress1 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress1)
00623  |        If @IPAddress2 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress2)
00624  |        If @IPAddress3 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress3)
00625  |        If @IPAddress4 <> "0.0.0.0" Then _ArrayAdd($asBody, @IPAddress4)
00626  |        _ArrayAdd($asBody, $sLabel & " (" & @HomeDrive & ")")
00627  |        _ArrayAdd($asBody, Round($iFreeSpace / 1024, 2) & " GB frei von " & Round($iTotalSpace / 1024, 2) & " GB")
00628  |        _ArrayAdd($asBody, $iFreeSpacePerc & "% frei")
00629  |        Local $iResponse = _INetSmtpMail($SmtpMailSmtpServer, $sFromName, $sFromAddress, $sToAddress, $sSubject, $asBody, $SmtpMailEHLO, $SmtpMailFirst, $SmtpMailTrace)
00630  |        Local $iErr = @error
00631  |  +-    If $iResponse = 0 Then
00632  |  |            Local Const $Warning = '' _
00633  |  |  |                        & 'DIE FESTPLATTE IST FAST VOLL!' & @CRLF & @CRLF _
00634  |  |  |                        & 'Bitte Herrn Heger bescheid geben:' & @CRLF _
00635  |  |  |                        & 'heger@easyconnectit.de' & @CRLF _
00636  |  |  |                        & 'oder 0176 23984427' & @CRLF & @CRLF _
00637  |  |  |                        & _ArrayToString($asBody, @CRLF) & @CRLF & @CRLF _
00638  |  |  |                        & 'Mail failed with error code ' & $iErr & @CRLF
00639  |  |            MsgBox($MB_ICONWARNING + $MB_SYSTEMMODAL, "Warnung!", $Warning)
00640  |  +-    EndIf
00641  +-EndFunc   ;==>SendMailLowSpace
00642    #EndRegion FreeSpaceCheck
00643    #Region WMI Exporter
00644  +-Func Scrape()
00645  |  +-    If $ScrapeComplete And ProcessExists($WmiExporterLocalFileName) Then
00646  |  |            $hDownload = InetGet("http://localhost:9182/metrics", $LogScrapePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)
00647  |  |            $ScrapeComplete = 0
00648  |  +-    EndIf
00649  +-EndFunc   ;==>Scrape
00650    
00651  +-Func ScrapeDownload()
00652  |  +-    If Not $ScrapeComplete Then
00653  |  |  +-        If InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE) Then
00654  |  |  |  +-            If InetGetInfo($hDownload, $INET_DOWNLOADSUCCESS) Then
00655  |  |  |  |                    If FileGetSize($LogScrapePath) Then FileCopy($LogScrapePath, $LogScrapeNetPath, $FC_OVERWRITE + $FC_CREATEPATH)
00656  |  |  |  +-            Else
00657  |  |  |  |                    FileDelete($LogScrapePath)
00658  |  |  |  |                    ConsoleLog("Error ScrapeDownload")
00659  |  |  |  +-            EndIf
00660  |  |  |                InetClose($hDownload)
00661  |  |  |                $hDownload = 0
00662  |  |  |                $ScrapeComplete = 1
00663  |  |  +-        EndIf
00664  |  +-    EndIf
00665  +-EndFunc   ;==>ScrapeDownload
00666    
00667  +-Func SetupWmiExporter()
00668  |        ProcessClose($WmiExporterLocalFileName)
00669  |  +-    If Not $WmiExporterLocalExists Then
00670  |  |            Local $SourcePath = (@OSArch = "X64") ? $WmiExporterX64GlobalNetSetupPath : $WmiExporterX32GlobalNetSetupPath
00671  |  |  +-        If FileCopy($SourcePath, $WmiExporterLocalPath, $FC_OVERWRITE + $FC_CREATEPATH) Then
00672  |  |  |                $WmiExporterLocalExists = FileExists($WmiExporterLocalPath)
00673  |  |  +-        EndIf
00674  |  +-    EndIf
00675  |        If Not FileExists($WmiExporterCollectorTextfileDir) Then DirCreate($WmiExporterCollectorTextfileDir)
00676  |        WriteMetaDataFile()
00677  +-EndFunc   ;==>SetupWmiExporter
00678    
00679  +-Func WriteMetaDataFile()
00680  |        Local $MetaData = 'metadata{computername="' & @ComputerName & '"' & ',username="' & @UserName & '"'
00681  |  +-    If $WmiExporterMetadataString <> "NULL" And StringLen($WmiExporterMetadataString) And Not StringIsSpace($WmiExporterMetadataString) Then
00682  |  |            $MetaData &= "," & $WmiExporterMetadataString
00683  |  +-    EndIf
00684  |        $MetaData &= '} 1'
00685  |        $WmiExporterMetadataArray[1] = $MetaData
00686  |        $WmiExporterMetadataArray[0] = UBound($WmiExporterMetadataArray) - 1
00687  |        _FileReadToArray($WmiExporterMetadataPath, $WmiExporterMetadataArrayRet)
00688  |  +-    If Not $WmiExporterMetadataExists Or Not _ArrayCompare($WmiExporterMetadataArray, $WmiExporterMetadataArrayRet, 3) Then
00689  |  |            _FileWriteFromArray($WmiExporterMetadataPath, $WmiExporterMetadataArray, 1)
00690  |  |            ConsoleLog("_FileWriteFromArray" & $WmiExporterMetadataPath)
00691  |  |            $WmiExporterMetadataExists = FileExists($WmiExporterMetadataPath)
00692  |  +-    EndIf
00693  +-EndFunc   ;==>WriteMetaDataFile
00694    #EndRegion WMI Exporter
00695    #Region UDF
00696    ;~ https://www.autoitscript.com/forum/topic/182506-array-comparison/
00697    ;~ Melba23
00698  +-Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
00699  |    
00700  |        ; Check if arrays
00701  |  +-    If Not (IsArray($aArray1)) Or Not (IsArray($aArray2)) Then
00702  |  |            Return SetError(1, 0, 0)
00703  |  +-    EndIf
00704  |    
00705  |        ; Check if same number of dimensions
00706  |        Local $iDims = UBound($aArray1, $UBOUND_DIMENSIONS)
00707  |  +-    If $iDims <> UBound($aArray2, $UBOUND_DIMENSIONS) Then
00708  |  |            Return SetError(2, 0, 0)
00709  |  +-    EndIf
00710  |    
00711  |        ; Check if same size
00712  |        Local $iRows = UBound($aArray1, $UBOUND_ROWS)
00713  |        Local $iCols = UBound($aArray1, $UBOUND_COLUMNS)
00714  |  +-    If $iRows <> UBound($aArray2, $UBOUND_ROWS) Or $iCols <> UBound($aArray2, $UBOUND_COLUMNS) Then
00715  |  |            Return SetError(3, 0, 0)
00716  |  +-    EndIf
00717  |    
00718  |        Local $sString_1, $sString_2
00719  |    
00720  |  +-    Switch $iMode
00721  |  |    
00722  |  |  +-        Case 0     ; Compare each element
00723  |  |  |  +-            For $i = 0 To $iRows - 1
00724  |  |  |  |  +-                For $j = 0 To $iCols - 1
00725  |  |  |  |  |  +-                    If $aArray1[$i][$j] <> $aArray1[$i][$j] Then
00726  |  |  |  |  |  |                            Return SetError(4, 0, 0)
00727  |  |  |  |  |  +-                    EndIf
00728  |  |  |  |  +-                Next
00729  |  |  |  +-            Next
00730  |  |  |    
00731  |  |  +-        Case 1     ; Convert rows to strings
00732  |  |  |  +-            For $i = 0 To $iRows - 1
00733  |  |  |  |  +-                For $j = 0 To $iCols - 1
00734  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
00735  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
00736  |  |  |  |  +-                Next
00737  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
00738  |  |  |  |  |                        Return SetError(4, 0, 0)
00739  |  |  |  |  +-                EndIf
00740  |  |  |  +-            Next
00741  |  |  |    
00742  |  |  +-        Case 2     ; Convert columnss to strings
00743  |  |  |  +-            For $j = 0 To $iCols - 1
00744  |  |  |  |  +-                For $i = 0 To $iRows - 1
00745  |  |  |  |  |                        $sString_1 &= $aArray1[$i][$j]
00746  |  |  |  |  |                        $sString_2 &= $aArray2[$i][$j]
00747  |  |  |  |  +-                Next
00748  |  |  |  |  +-                If $sString_1 <> $sString_2 Then
00749  |  |  |  |  |                        Return SetError(4, 0, 0)
00750  |  |  |  |  +-                EndIf
00751  |  |  |  +-            Next
00752  |  |  |    
00753  |  |  +-        Case 3     ; Convert whole array to string
00754  |  |  |  +-            If _ArrayToString($aArray1) <> _ArrayToString($aArray2) Then
00755  |  |  |  |                    Return SetError(4, 0, 0)
00756  |  |  |  +-            EndIf
00757  |  |  |    
00758  |  +-    EndSwitch
00759  |    
00760  |        ; Looks as if they match
00761  |        Return 1
00762  |    
00763  +-EndFunc   ;==>_ArrayCompare
00764    #EndRegion UDF
00765    

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================
ByteSuffix                00586 
Check                     00521 
CheckAndRunProc           00529 
CheckAndRunProcAs         00537 
CheckHomeDriveSpaceFree   00595 
CleaningDownloads         00545 
ConsoleLog                00338 
DownloadsNeedCleaning     00565 
FileDirMoveRec            00568 
GetDownloadsLastCleaningDate  00581 
GetGlobalConfig           00347 
ManageLogFile             00390 
ReadGlobalConfig          00406 
ReadLocalConfig           00423 
Scrape                    00644 
ScrapeDownload            00651 
SendMailLowSpace          00615 
SetVar                    00431 
SetupWmiExporter          00667 
Timeout                   00436 
WriteLogStartup           00445 
WriteMetaDataFile         00679 
_ArrayCompare             00698 

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
#Au3Stripper_Parameters   ----- 00023
#AutoIt3Wrapper_AU3Check_Parameters  ----- 00017
#AutoIt3Wrapper_AU3Check_Stop_OnWarning  ----- 00016
#AutoIt3Wrapper_Icon      ----- 00002
#AutoIt3Wrapper_Outfile   ----- 00003
#AutoIt3Wrapper_Res_Comment  ----- 00004
#AutoIt3Wrapper_Res_CompanyName  ----- 00009
#AutoIt3Wrapper_Res_Description  ----- 00005
#AutoIt3Wrapper_Res_Field  ----- 00014
#AutoIt3Wrapper_Res_Fileversion  ----- 00006
#AutoIt3Wrapper_Res_Fileversion_AutoIncrement  ----- 00007
#AutoIt3Wrapper_Res_Language  ----- 00013
#AutoIt3Wrapper_Res_LegalCopyright  ----- 00010
#AutoIt3Wrapper_Res_LegalTradeMarks  ----- 00011
#AutoIt3Wrapper_Res_ProductName  ----- 00008
#AutoIt3Wrapper_Res_SaveSource  ----- 00012
#AutoIt3Wrapper_Run_AU3Check  ----- 00015
#AutoIt3Wrapper_Run_After  ----- 00019
#AutoIt3Wrapper_Run_Au3Stripper  ----- 00022
#AutoIt3Wrapper_Run_Before  ----- 00018
#AutoIt3Wrapper_Run_Tidy  ----- 00020
#EndRegion                ----- 00024 00082 00116 00225 00235 00300 00519 00543 00584 00642 00694 00764
#Region                   ----- 00001 00037 00083 00117 00226 00236 00301 00520 00544 00585 00643 00695
#Tidy_Parameters          ----- 00021
#include                  ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036
$AkkDir                   ----- 00129 00130 00139 00149 00154 00176 00209
$AkkExists                ----- 00131
$AkkFileName              ----- 00128 00130 00133
$AkkNetDir                ----- 00134 00135
$AkkNetExists             ----- 00136
$AkkNetFileName           ----- 00133 00135
$AkkNetPath               ----- 00135 00136 00383 00386
$AkkNetTime               ----- 00383 00384
$AkkPath                  ----- 00130 00131 00382
$AkkRootDir               ----- 00124 00125 00159 00169 00182 00188 00193 00199 00247 00252
$AkkRootExists            ----- 00126
$AkkRootFileName          ----- 00123 00125
$AkkRootPath              ----- 00125 00126
$AkkTime                  ----- 00382 00384
$AkkUpdaterDir            ----- 00139 00140 00385
$AkkUpdaterExists         ----- 00141 00354 00355 00378 00385
$AkkUpdaterFileName       ----- 00138 00140 00143 00385
$AkkUpdaterNetDir         ----- 00144 00145
$AkkUpdaterNetExists      ----- 00146 00354
$AkkUpdaterNetFileName    ----- 00143 00145
$AkkUpdaterNetPath        ----- 00145 00146 00355 00376 00378 00379
$AkkUpdaterNetTime        ----- 00376 00377
$AkkUpdaterPath           ----- 00140 00141 00355 00375 00378 00385
$AkkUpdaterTime           ----- 00375 00377
$ArrayDelimItem           ----- 00221 00446
$Cycle                    ----- 00088 00328 00334 00335 00339
$DIR_REMOVE               ----- 00547
$Delay                    ----- 00436 00438
$DelimItem                ----- 00446 00451 00452 00453 00454 00455 00456 00457 00458 00459 00463 00464 00465 00466 
                                00467 00468 00469 00471 00472 00473 00474 00475 00476 00477 00478 00479 00481 00482 
                                00483 00484 00485 00486 00487 00488 00489 00490 00491 00492 00496 00497 00498 00499 
                                00500 00501 00502 00503 00504 00505 00506 00507 00508 00509 00510 00512 00513 00514 
                                00515
$Dest                     ----- 00401 00402
$DestDir                  ----- 00568 00570 00571 00575
$Diff                     ----- 00437 00438 00440
$Dir                      ----- 00529 00532 00537 00540
$Domain                   ----- 00537 00539 00540
$DownloadsDir             ----- 00218 00219 00548 00550
$DownloadsOldDir          ----- 00219 00547 00548 00549 00550 00560
$Exists                   ----- 00529 00530 00537 00538
$FC_CREATEPATH            ----- 00349 00352 00355 00361 00369 00378 00402 00571 00655 00671
$FC_OVERWRITE             ----- 00349 00352 00355 00361 00369 00378 00402 00571 00575 00655 00671
$FLTA_FOLDERS             ----- 00572
$FT_MODIFIED              ----- 00358 00359 00366 00367 00375 00376 00382 00383
$FT_STRING                ----- 00358 00359 00366 00367 00375 00376 00382 00383
$Folder                   ----- 00574 00575
$FolderList               ----- 00572 00574
$IDYES                    ----- 00559
$INET_DOWNLOADBACKGROUND  ----- 00646
$INET_DOWNLOADCOMPLETE    ----- 00653
$INET_DOWNLOADSUCCESS     ----- 00654
$INET_FORCERELOAD         ----- 00646
$IniGlobalDir             ----- 00154 00155 00164
$IniGlobalExDir           ----- 00164 00165
$IniGlobalExExists        ----- 00166 00351 00352 00369
$IniGlobalExFileName      ----- 00163 00165 00168
$IniGlobalExNetDir        ----- 00169 00170
$IniGlobalExNetExists     ----- 00171 00351
$IniGlobalExNetFileName   ----- 00168 00170
$IniGlobalExNetPath       ----- 00170 00171 00352 00367 00369 00370 00418
$IniGlobalExNetTime       ----- 00367 00368
$IniGlobalExPath          ----- 00165 00166 00352 00366 00369 00415 00416
$IniGlobalExTime          ----- 00366 00368
$IniGlobalExists          ----- 00156 00348 00349 00361
$IniGlobalFileName        ----- 00153 00155 00158
$IniGlobalNetDir          ----- 00159 00160
$IniGlobalNetExists       ----- 00161 00348
$IniGlobalNetFileName     ----- 00158 00160
$IniGlobalNetLogDir       ----- 00199 00200
$IniGlobalNetLogExists    ----- 00201
$IniGlobalNetLogFileName  ----- 00198 00200
$IniGlobalNetLogInstanceDir  ----- 00204 00205
$IniGlobalNetLogInstanceExists  ----- 00206
$IniGlobalNetLogInstanceFileName  ----- 00203 00205
$IniGlobalNetLogInstancePath  ----- 00205 00206 00461 00494 00517
$IniGlobalNetLogPath      ----- 00200 00201 00447 00448 00449
$IniGlobalNetPath         ----- 00160 00161 00349 00359 00361 00362
$IniGlobalNetTime         ----- 00359 00360
$IniGlobalPath            ----- 00155 00156 00349 00358 00361 00407 00408 00410 00411 00413
$IniGlobalTime            ----- 00358 00360
$IniLocalDir              ----- 00149 00150
$IniLocalExists           ----- 00151
$IniLocalFileName         ----- 00148 00150
$IniLocalPath             ----- 00150 00151 00396 00398 00399 00424 00426 00551 00582 00602 00603
$IntMax                   ----- 00095
$IntMin                   ----- 00094
$KPSInfoDir               ----- 00103 00104 00523
$KPSInfoExists            ----- 00105 00523
$KPSInfoFileName          ----- 00102 00104 00523
$KPSInfoPath              ----- 00104 00105 00312 00523
$LogArchiveNetDir         ----- 00193 00194 00196 00401
$LogArchiveNetExists      ----- 00195 00196
$LogArchiveNetFileName    ----- 00192 00194
$LogArchiveNetPath        ----- 00194 00195
$LogDir                   ----- 00176 00177 00179 00392
$LogExists                ----- 00178 00179
$LogFileID                ----- 00173 00391 00395 00396 00424 00425 00427
$LogFileName              ----- 00175 00177 00391 00392 00393
$LogGlobalNetDir          ----- 00188 00189
$LogGlobalNetExists       ----- 00190
$LogGlobalNetFileName     ----- 00187 00189
$LogGlobalNetPath         ----- 00189 00190 00344 00400 00402
$LogNetDir                ----- 00182 00183 00185 00204 00214 00393
$LogNetExists             ----- 00184 00185
$LogNetFileName           ----- 00181 00183
$LogNetPath               ----- 00183 00184 00343 00393 00399
$LogPath                  ----- 00177 00178 00342 00392 00394 00398
$LogScrapeDir             ----- 00209 00210
$LogScrapeExists          ----- 00211
$LogScrapeFileName        ----- 00208 00210
$LogScrapeNetDir          ----- 00214 00215
$LogScrapeNetExists       ----- 00216
$LogScrapeNetFileName     ----- 00213 00215
$LogScrapeNetPath         ----- 00215 00216 00655
$LogScrapePath            ----- 00210 00211 00646 00655 00657
$LowSpaceThresholdPerc    ----- 00233 00408 00601
$MB_ICONWARNING           ----- 00559 00639
$MB_SYSTEMMODAL           ----- 00559 00639
$MB_YESNO                 ----- 00559
$MacroAutoIt              ----- 00222 00451 00452 00453 00454 00455 00456 00457 00458 00459 00461
$MacroDirectory           ----- 00223 00463 00464 00465 00466 00467 00468 00469 00471 00472 00473 00474 00475 00476 
                                00477 00478 00479 00481 00482 00483 00484 00485 00486 00487 00488 00489 00490 00491 
                                00492 00494
$MacroSystemInfo          ----- 00224 00496 00497 00498 00499 00500 00501 00502 00503 00504 00505 00506 00507 00508 
                                00509 00510 00512 00513 00514 00515 00517
$MailAddresses            ----- 00234 00410 00411 00605 00606 00607
$MetaData                 ----- 00680 00682 00684 00685
$MsgBoxTimeout            ----- 00086 00559
$Name                     ----- 00529 00530 00531 00537 00538 00539
$Password                 ----- 00537 00540
$Path                     ----- 00529 00532 00537 00540
$PowerkatalogDir          ----- 00108 00109
$PowerkatalogExists       ----- 00110
$PowerkatalogFileName     ----- 00107 00109
$PowerkatalogPath         ----- 00109 00110
$RUN_LOGON_NETWORK        ----- 00540
$RootDir                  ----- 00119 00120 00124 00134 00144
$RootExists               ----- 00121
$RootFileName             ----- 00118 00120
$RootPath                 ----- 00120 00121
$SHDUpdaterDir            ----- 00113 00114
$SHDUpdaterExists         ----- 00115
$SHDUpdaterFileName       ----- 00112 00114
$SHDUpdaterPath           ----- 00114 00115
$ScrapeComplete           ----- 00238 00645 00647 00652 00662
$ShowFlag                 ----- 00529 00532
$SmtpMailEHLO             ----- 00228 00629
$SmtpMailFirst            ----- 00229 00629
$SmtpMailSmtpServer       ----- 00227 00413 00629
$SmtpMailTrace            ----- 00230 00629
$SourceDir                ----- 00568 00569 00571 00572
$SourcePath               ----- 00670 00671
$SpawnDir                 ----- 00098 00099 00522
$SpawnExists              ----- 00100 00522
$SpawnFileName            ----- 00097 00099 00522
$SpawnPath                ----- 00099 00100 00311 00522
$StartTimer               ----- 00089 00090 00091 00092 00093
$T1                       ----- 00084
$T2                       ----- 00085
$Text                     ----- 00338 00339 00340 00342 00343 00344
$Timer                    ----- 00436 00437 00439
$Timer1                   ----- 00090 00329
$Timer2                   ----- 00091 00330
$Timer3                   ----- 00092 00331
$Timer4                   ----- 00093 00332
$TrayTipTimeout           ----- 00087
$UBOUND_COLUMNS           ----- 00713 00714
$UBOUND_DIMENSIONS        ----- 00706 00707
$UBOUND_ROWS              ----- 00712 00714
$UserName                 ----- 00537 00539 00540
$Value                    ----- 00431 00432 00433
$Var                      ----- 00431 00432
$Warning                  ----- 00552 00559 00632 00639
$WmiExporter1PID          ----- 00239 00524
$WmiExporterCollectorTextfileDir  ----- 00284 00287 00295 00675
$WmiExporterCollectorsEnabled  ----- 00256 00295
$WmiExporterLocalDir      ----- 00242 00243 00284 00524
$WmiExporterLocalExists   ----- 00244 00524 00669 00672
$WmiExporterLocalFileName  ----- 00241 00243 00524 00645 00668
$WmiExporterLocalPath     ----- 00243 00244 00313 00524 00671 00672
$WmiExporterMetadataArray  ----- 00292 00685 00686 00688 00689
$WmiExporterMetadataArrayRet  ----- 00293 00687 00688
$WmiExporterMetadataDir   ----- 00287 00288
$WmiExporterMetadataExists  ----- 00289 00688 00691
$WmiExporterMetadataFileName  ----- 00286 00288
$WmiExporterMetadataPath  ----- 00288 00289 00687 00689 00690 00691
$WmiExporterMetadataString  ----- 00291 00416 00417 00681 00682
$WmiExporterParams        ----- 00295 00524
$WmiExporterX32GlobalNetSetupDir  ----- 00247 00248
$WmiExporterX32GlobalNetSetupExists  ----- 00249
$WmiExporterX32GlobalNetSetupFileName  ----- 00246 00248
$WmiExporterX32GlobalNetSetupPath  ----- 00248 00249 00670
$WmiExporterX64GlobalNetSetupDir  ----- 00252 00253
$WmiExporterX64GlobalNetSetupExists  ----- 00254
$WmiExporterX64GlobalNetSetupFileName  ----- 00251 00253
$WmiExporterX64GlobalNetSetupPath  ----- 00253 00254 00670
$aArray                   ----- 00587 00592
$aArray1                  ----- 00698 00701 00706 00712 00713 00725 00734 00745 00754
$aArray2                  ----- 00698 00701 00707 00714 00735 00746 00754
$asBody                   ----- 00619 00620 00621 00622 00623 00624 00625 00626 00627 00628 00629 00632
$hDownload                ----- 00237 00646 00653 00654 00660 00661
$i                        ----- 00409 00410 00411 00604 00605 00606 00607 00723 00725 00732 00734 00735 00744 00745 
                                00746
$iBytes                   ----- 00586 00588 00590 00592
$iCols                    ----- 00713 00714 00724 00733 00743
$iDims                    ----- 00706 00707
$iErr                     ----- 00630 00632
$iFreeSpace               ----- 00598 00600 00607 00615 00627
$iFreeSpacePerc           ----- 00600 00601 00607 00615 00618 00628
$iIndex                   ----- 00587 00589 00592
$iMode                    ----- 00698 00720
$iResponse                ----- 00629 00631
$iRows                    ----- 00712 00714 00723 00732 00744
$iTotalSpace              ----- 00599 00600 00607 00615 00627
$j                        ----- 00724 00725 00733 00734 00735 00743 00745 00746
$sFromAddress             ----- 00617 00629
$sFromName                ----- 00616 00629
$sLabel                   ----- 00596 00607 00615 00626
$sString_1                ----- 00718 00734 00737 00745 00748
$sString_2                ----- 00718 00735 00737 00746 00748
$sSubject                 ----- 00618 00629
$sToAddress               ----- 00615 00629
0                         ----- 00066 00088 00230 00237 00328 00334 00409 00410 00411 00426 00427 00442 00451 00452 
                                00453 00454 00455 00456 00457 00458 00459 00463 00464 00465 00466 00467 00468 00469 
                                00471 00472 00473 00474 00475 00476 00477 00478 00479 00481 00482 00483 00484 00485 
                                00486 00487 00488 00489 00490 00491 00492 00496 00497 00498 00499 00500 00501 00502 
                                00503 00504 00505 00506 00507 00508 00509 00510 00512 00513 00514 00515 00534 00587 
                                00604 00605 00606 00607 00619 00631 00647 00661 00686 00698 00702 00708 00715 00722 
                                00723 00724 00726 00732 00733 00738 00743 00744 00749 00755
0x7FFFFFFFFFFFFFFF        ----- 00095
0x8000000000000000        ----- 00094
1                         ----- 00040 00058 00222 00223 00224 00229 00238 00329 00335 00395 00409 00411 00589 00602 
                                00604 00605 00662 00685 00686 00689 00702 00723 00724 00731 00732 00733 00743 00744 
                                00761
10                        ----- 00234 00327
100                       ----- 00400 00600
1023                      ----- 00588
1024                      ----- 00400 00590 00627
14                        ----- 00566
15                        ----- 00087
15e3                      ----- 00084 00085 00329
1e3                       ----- 00394
2                         ----- 00222 00223 00224 00234 00292 00607 00627 00708 00742
3                         ----- 00688 00715 00753
300                       ----- 00328
3000                      ----- 00608
4                         ----- 00726 00738 00749 00755
42                        ----- 00326
5                         ----- 00086 00330 00331 00332 00408
500                       ----- 00334
5e3                       ----- 00304 00324
60                        ----- 00086
60e3                      ----- 00330 00331 00332
9                         ----- 00409 00604
@AppDataCommonDir         ----- 00463
@AppDataDir               ----- 00471
@AutoItExe                ----- 00456
@AutoItPID                ----- 00457
@AutoItVersion            ----- 00458
@AutoItX64                ----- 00459
@CPUArch                  ----- 00496
@CRLF                     ----- 00340 00552 00632
@ComSpec                  ----- 00492
@CommonFilesDir           ----- 00488
@Compiled                 ----- 00377 00384 00451
@ComputerName             ----- 00182 00228 00344 00416 00418 00447 00448 00449 00505 00618 00621 00680
@DesktopCommonDir         ----- 00464
@DesktopDepth             ----- 00514
@DesktopDir               ----- 00473
@DesktopHeight            ----- 00512
@DesktopRefresh           ----- 00515
@DesktopWidth             ----- 00513
@DocumentsCommonDir       ----- 00465
@FavoritesCommonDir       ----- 00466
@FavoritesDir             ----- 00475
@HomeDrive                ----- 00242 00481 00596 00598 00599 00626
@HomePath                 ----- 00482
@HomeShare                ----- 00483
@IPAddress1               ----- 00447 00448 00507 00622
@IPAddress2               ----- 00508 00623
@IPAddress3               ----- 00509 00624
@IPAddress4               ----- 00510 00625
@KBLayout                 ----- 00497
@LocalAppDataDir          ----- 00472
@LogonDNSDomain           ----- 00484
@LogonDomain              ----- 00485
@LogonServer              ----- 00486
@MDAY                     ----- 00401 00551 00566 00602 00603
@MIN                      ----- 00401
@MON                      ----- 00401 00551 00566 00602 00603
@MSEC                     ----- 00401
@MUILang                  ----- 00498
@MyDocumentsDir           ----- 00098 00474
@OSArch                   ----- 00499 00670
@OSBuild                  ----- 00503
@OSLang                   ----- 00500
@OSServicePack            ----- 00504
@OSType                   ----- 00501
@OSVersion                ----- 00502
@ProgramFilesDir          ----- 00103 00108 00113 00487
@ProgramsCommonDir        ----- 00467
@ProgramsDir              ----- 00476
@SEC                      ----- 00401
@SW_HIDE                  ----- 00529
@ScriptDir                ----- 00129 00453
@ScriptFullPath           ----- 00449 00454
@ScriptName               ----- 00452
@StartMenuCommonDir       ----- 00468
@StartMenuDir             ----- 00477
@StartupCommonDir         ----- 00469
@StartupDir               ----- 00478
@SystemDir                ----- 00490
@TempDir                  ----- 00491
@UserName                 ----- 00344 00506 00680
@UserProfileDir           ----- 00218 00479
@WindowsDir               ----- 00489
@WorkingDir               ----- 00455
@YEAR                     ----- 00401 00551 00566 00602 00603
@error                    ----- 00573 00630
#### AkkDir               00129
#### AkkExists            00131
#### AkkFileName          00128
#### AkkNetDir            00134
#### AkkNetExists         00136
#### AkkNetFileName       00133
#### AkkNetPath           00135
#### AkkNetTime           00383
#### AkkPath              00130
#### AkkRootDir           00124
#### AkkRootExists        00126
#### AkkRootFileName      00123
#### AkkRootPath          00125
#### AkkTime              00382
#### AkkUpdaterDir        00139
#### AkkUpdaterExists     00141
#### AkkUpdaterFileName   00138
#### AkkUpdaterNetDir     00144
#### AkkUpdaterNetExists  00146
#### AkkUpdaterNetFileName  00143
#### AkkUpdaterNetPath    00145
#### AkkUpdaterNetTime    00376
#### AkkUpdaterPath       00140
#### AkkUpdaterTime       00375
And                       ----- 00348 00351 00354 00377 00384 00530 00538 00605 00645 00681
Array                     ----- 00032
#### ArrayDelimItem       00221
AutoItConstants           ----- 00028
ByRef                     ----- 00431 00436 00698
Case                      ----- 00722 00731 00742 00753
Const                     ----- 00084 00085 00086 00087 00094 00095 00097 00098 00099 00100 00102 00103 00104 00105 
                                00107 00108 00109 00110 00112 00113 00114 00115 00118 00119 00120 00121 00123 00124 
                                00125 00126 00128 00129 00130 00131 00133 00134 00135 00136 00138 00139 00140 00143 
                                00144 00145 00146 00148 00149 00150 00151 00153 00154 00155 00158 00159 00160 00161 
                                00163 00164 00165 00168 00169 00170 00171 00176 00182 00188 00193 00198 00199 00200 
                                00201 00203 00204 00205 00206 00208 00209 00210 00211 00213 00214 00215 00216 00218 
                                00219 00221 00228 00229 00230 00241 00242 00243 00246 00247 00248 00249 00251 00252 
                                00253 00254 00256 00284 00286 00287 00288 00295 00446 00552 00572 00596 00598 00599 
                                00600 00632 00698
#### Const$aArray2        00698
#### Cycle                00088
Date                      ----- 00035
Default                   ----- 00572
#### Delay                00436
#### DelimItem            00446
#### Dest                 00401
#### DestDir              00568
#### Diff                 00437
Dir                       00529 00537
#### Domain               00537
#### DownloadsDir         00218
#### DownloadsOldDir      00219
Else                      ----- 00656
EndFunc                   ----- 00345 00388 00404 00421 00429 00434 00443 00518 00527 00535 00542 00563 00567 00579 
                                00583 00593 00613 00641 00649 00665 00677 00693 00763
EndIf                     ----- 00333 00350 00353 00356 00364 00373 00380 00387 00397 00403 00414 00419 00420 00428 
                                00441 00533 00541 00561 00562 00577 00578 00609 00611 00612 00640 00648 00659 00663 
                                00664 00673 00674 00683 00692 00703 00709 00716 00727 00739 00750 00756
EndSwitch                 ----- 00758
Exists                    00529 00537
File                      ----- 00033
FileConstants             ----- 00031
#### FolderList           00572
For                       ----- 00409 00574 00604 00723 00724 00732 00733 00743 00744
Func                      ----- 00338 00347 00390 00406 00423 00431 00436 00445 00521 00529 00537 00545 00565 00568 
                                00581 00586 00595 00615 00644 00651 00667 00679 00698
Global                    ----- 00084 00085 00086 00087 00088 00089 00090 00091 00092 00093 00094 00095 00097 00098 
                                00099 00100 00102 00103 00104 00105 00107 00108 00109 00110 00112 00113 00114 00115 
                                00118 00119 00120 00121 00123 00124 00125 00126 00128 00129 00130 00131 00133 00134 
                                00135 00136 00138 00139 00140 00141 00143 00144 00145 00146 00148 00149 00150 00151 
                                00153 00154 00155 00156 00158 00159 00160 00161 00163 00164 00165 00166 00168 00169 
                                00170 00171 00173 00175 00176 00177 00178 00181 00182 00183 00184 00187 00188 00189 
                                00190 00192 00193 00194 00195 00198 00199 00200 00201 00203 00204 00205 00206 00208 
                                00209 00210 00211 00213 00214 00215 00216 00218 00219 00221 00222 00223 00224 00227 
                                00228 00229 00230 00233 00234 00237 00238 00239 00241 00242 00243 00244 00246 00247 
                                00248 00249 00251 00252 00253 00254 00256 00284 00286 00287 00288 00289 00291 00292 
                                00293 00295
If                        ----- 00179 00185 00196 00329 00330 00331 00332 00348 00351 00354 00360 00368 00377 00384 
                                00394 00400 00407 00415 00417 00425 00438 00530 00538 00546 00559 00569 00570 00573 
                                00601 00605 00622 00623 00624 00625 00631 00645 00652 00653 00654 00655 00669 00671 
                                00675 00681 00688 00701 00707 00714 00725 00737 00748 00754
In                        ----- 00574
Inet                      ----- 00036
#### IniGlobalDir         00154
#### IniGlobalExDir       00164
#### IniGlobalExExists    00166
#### IniGlobalExFileName  00163
#### IniGlobalExNetDir    00169
#### IniGlobalExNetExists  00171
#### IniGlobalExNetFileName  00168
#### IniGlobalExNetPath   00170
#### IniGlobalExNetTime   00367
#### IniGlobalExPath      00165
#### IniGlobalExTime      00366
#### IniGlobalExists      00156
#### IniGlobalFileName    00153
#### IniGlobalNetDir      00159
#### IniGlobalNetExists   00161
#### IniGlobalNetFileName  00158
#### IniGlobalNetLogDir   00199
#### IniGlobalNetLogExists  00201
#### IniGlobalNetLogFileName  00198
#### IniGlobalNetLogInstanceDir  00204
#### IniGlobalNetLogInstanceExists  00206
#### IniGlobalNetLogInstanceFileName  00203
#### IniGlobalNetLogInstancePath  00205
#### IniGlobalNetLogPath  00200
#### IniGlobalNetPath     00160
#### IniGlobalNetTime     00359
#### IniGlobalPath        00155
#### IniGlobalTime        00358
#### IniLocalDir          00149
#### IniLocalExists       00151
#### IniLocalFileName     00148
#### IniLocalPath         00150
#### IntMax               00095
#### IntMin               00094
#### KPSInfoDir           00103
#### KPSInfoExists        00105
#### KPSInfoFileName      00102
#### KPSInfoPath          00104
Local                     ----- 00358 00359 00366 00367 00375 00376 00382 00383 00401 00437 00446 00552 00572 00587 
                                00596 00598 00599 00600 00616 00617 00618 00619 00629 00630 00632 00670 00680 00706 
                                00712 00713 00718
#### LogArchiveNetDir     00193
#### LogArchiveNetExists  00195
#### LogArchiveNetFileName  00192
#### LogArchiveNetPath    00194
#### LogDir               00176
#### LogExists            00178
#### LogFileID            00173
#### LogFileName          00175
#### LogGlobalNetDir      00188
#### LogGlobalNetExists   00190
#### LogGlobalNetFileName  00187
#### LogGlobalNetPath     00189
#### LogNetDir            00182
#### LogNetExists         00184
#### LogNetFileName       00181
#### LogNetPath           00183
#### LogPath              00177
#### LogScrapeDir         00209
#### LogScrapeExists      00211
#### LogScrapeFileName    00208
#### LogScrapeNetDir      00214
#### LogScrapeNetExists   00216
#### LogScrapeNetFileName  00213
#### LogScrapeNetPath     00215
#### LogScrapePath        00210
#### LowSpaceThresholdPerc  00233
#### MacroAutoIt          00222
#### MacroDirectory       00223
#### MacroSystemInfo      00224
#### MailAddresses        00234
#### MetaData             00680
Misc                      ----- 00034
MsgBoxConstants           ----- 00029
#### MsgBoxTimeout        00086
Name                      00529 00537
Next                      ----- 00412 00576 00610 00728 00729 00736 00740 00747 00751
Not                       ----- 00179 00185 00196 00348 00351 00354 00530 00538 00570 00573 00652 00669 00675 00681 
                                00688
Or                        ----- 00688 00701 00714
#### Password             00537
Path                      00529 00537
#### PowerkatalogDir      00108
#### PowerkatalogExists   00110
#### PowerkatalogFileName  00107
#### PowerkatalogPath     00109
Return                    ----- 00433 00440 00442 00532 00534 00582 00592 00702 00708 00715 00726 00738 00749 00755 
                                00761
#### RootDir              00119
#### RootExists           00121
#### RootFileName         00118
#### RootPath             00120
#### SHDUpdaterDir        00113
#### SHDUpdaterExists     00115
#### SHDUpdaterFileName   00112
#### SHDUpdaterPath       00114
#### ScrapeComplete       00238
#### ShowFlag             00529
#### SmtpMailEHLO         00228
#### SmtpMailFirst        00229
#### SmtpMailSmtpServer   00227
#### SmtpMailTrace        00230
#### SourceDir            00568
#### SourcePath           00670
#### SpawnDir             00098
#### SpawnExists          00100
#### SpawnFileName        00097
#### SpawnPath            00099
#### StartTimer           00089
Step                      ----- 00409 00604
Switch                    ----- 00720
#### T1                   00084
#### T2                   00085
#### Text                 00338
Then                      ----- 00179 00185 00196 00328 00329 00330 00331 00332 00334 00348 00351 00354 00360 00368 
                                00377 00384 00394 00400 00407 00415 00417 00425 00438 00530 00538 00546 00559 00569 
                                00570 00573 00601 00602 00605 00622 00623 00624 00625 00631 00645 00652 00653 00654 
                                00655 00669 00671 00675 00681 00688 00701 00707 00714 00725 00737 00748 00754
#### Timer                00436
#### Timer1               00090
#### Timer2               00091
#### Timer3               00092
#### Timer4               00093
To                        ----- 00409 00604 00723 00724 00732 00733 00743 00744
TrayConstants             ----- 00030
#### TrayTipTimeout       00087
True                      ----- 00572
#### UserName             00537
#### Value                00431
#### Var                  00431
WEnd                      ----- 00336 00591
Warning                   00552 00632
While                     ----- 00326 00588
#### WmiExporter1PID      00239
#### WmiExporterCollectorTextfileDir  00284
#### WmiExporterCollectorsEnabled  00256
#### WmiExporterLocalDir  00242
#### WmiExporterLocalExists  00244
#### WmiExporterLocalFileName  00241
#### WmiExporterLocalPath  00243
#### WmiExporterMetadataArray  00292
#### WmiExporterMetadataArrayRet  00293
#### WmiExporterMetadataDir  00287
#### WmiExporterMetadataExists  00289
#### WmiExporterMetadataFileName  00286
#### WmiExporterMetadataPath  00288
#### WmiExporterMetadataString  00291
#### WmiExporterParams    00295
#### WmiExporterX32GlobalNetSetupDir  00247
#### WmiExporterX32GlobalNetSetupExists  00249
#### WmiExporterX32GlobalNetSetupFileName  00246
#### WmiExporterX32GlobalNetSetupPath  00248
#### WmiExporterX64GlobalNetSetupDir  00252
#### WmiExporterX64GlobalNetSetupExists  00254
#### WmiExporterX64GlobalNetSetupFileName  00251
#### WmiExporterX64GlobalNetSetupPath  00253
#### aArray               00587
#### aArray1              00698
#### asBody               00619
au3                       ----- 00028 00029 00030 00031 00032 00033 00034 00035 00036
#### dieSiebenötigen     00552
#### hDownload            00237
#### iBytes               00586
#### iCols                00713
#### iDims                00706
#### iErr                 00630
iFreeSpace                00598 00615
iFreeSpacePerc            00600 00615
#### iIndex               00587
#### iMode                00698
#### iResponse            00629
#### iRows                00712
iTotalSpace               00599 00615
#### kopierenSiediesebitteaneinenanderenOrt.'&@CRLF&'AlleDateienausdemOrdnerwurdenbereitsindenOrdnerverschoben.'&@CRLF&'DerOrdneristübereineVerknüpfunginzuerreichen.'&@CRLF&'AlleIhreDateiendieimOrdnerble  00552
#### sFromAddress         00617
#### sFromName            00616
sLabel                    00596 00615
#### sString_1            00718
#### sString_2            00718
#### sSubject             00618
#### sToAddress           00615
#### username             00680
#### werdendemnächstunwiderruflichGELÖSCHT!'&@CRLF&'BittesichtenundsichernSieambestenjetztsofortIhreweiterhinbenötigtenDateien.'&@CRLF&'SollderOrdnerjetztgeöffnetwerden?'&@CRLF  00552
== Sort Func Names Within #regions =====================================================================
 --------------- Current sequence  ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000037   #Region - Options
0000000082   #EndRegion - Options
0000000083   #Region
0000000116   #EndRegion
0000000117   #Region
0000000225   #EndRegion
0000000226   #Region SMTP
0000000235   #EndRegion SMTP
0000000236   #Region Globals Prometheus WMI Exporter
0000000300   #EndRegion Globals Prometheus WMI Exporter
0000000301   #Region
0000000338   Func ConsoleLog($Text)
0000000345   EndFunc   ;==>ConsoleLog
0000000347   Func GetGlobalConfig()
0000000388   EndFunc   ;==>GetGlobalConfig
0000000390   Func ManageLogFile()
0000000404   EndFunc   ;==>ManageLogFile
0000000406   Func ReadGlobalConfig()
0000000421   EndFunc   ;==>ReadGlobalConfig
0000000423   Func ReadLocalConfig()
0000000429   EndFunc   ;==>ReadLocalConfig
0000000431   Func SetVar(ByRef $Var, $Value)
0000000434   EndFunc   ;==>SetVar
0000000436   Func Timeout(ByRef $Timer, $Delay)
0000000443   EndFunc   ;==>Timeout
0000000445   Func WriteLogStartup()
0000000518   EndFunc   ;==>WriteLogStartup
0000000519   #EndRegion
0000000520   #Region CheckAndRunProc
0000000521   Func Check()
0000000527   EndFunc   ;==>Check
0000000529   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000535   EndFunc   ;==>CheckAndRunProc
0000000537   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000542   EndFunc   ;==>CheckAndRunProcAs
0000000543   #EndRegion CheckAndRunProc
0000000544   #Region CleaningDownloads
0000000545   Func CleaningDownloads()
0000000563   EndFunc   ;==>CleaningDownloads
0000000565   Func DownloadsNeedCleaning()
0000000567   EndFunc   ;==>DownloadsNeedCleaning
0000000568   Func FileDirMoveRec($SourceDir, $DestDir)
0000000579   EndFunc   ;==>FileDirMoveRec
0000000581   Func GetDownloadsLastCleaningDate()
0000000583   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000584   #EndRegion CleaningDownloads
0000000585   #Region FreeSpaceCheck
0000000586   Func ByteSuffix($iBytes)
0000000593   EndFunc   ;==>ByteSuffix
0000000595   Func CheckHomeDriveSpaceFree()
0000000613   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000615   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000641   EndFunc   ;==>SendMailLowSpace
0000000642   #EndRegion FreeSpaceCheck
0000000643   #Region WMI Exporter
0000000644   Func Scrape()
0000000649   EndFunc   ;==>Scrape
0000000651   Func ScrapeDownload()
0000000665   EndFunc   ;==>ScrapeDownload
0000000667   Func SetupWmiExporter()
0000000677   EndFunc   ;==>SetupWmiExporter
0000000679   Func WriteMetaDataFile()
0000000693   EndFunc   ;==>WriteMetaDataFile
0000000694   #EndRegion WMI Exporter
0000000695   #Region UDF
0000000698   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000000763   EndFunc   ;==>_ArrayCompare
0000000764   #EndRegion UDF
 --------------- New Sequence      ----------------------------------------------------------- 
0000000001   #Region ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000024   #EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****
0000000037   #Region - Options
0000000082   #EndRegion - Options
0000000083   #Region
0000000116   #EndRegion
0000000117   #Region
0000000225   #EndRegion
0000000226   #Region SMTP
0000000235   #EndRegion SMTP
0000000236   #Region Globals Prometheus WMI Exporter
0000000300   #EndRegion Globals Prometheus WMI Exporter
0000000301   #Region
0000000338   Func ConsoleLog($Text)
0000000345   EndFunc   ;==>ConsoleLog
0000000347   Func GetGlobalConfig()
0000000388   EndFunc   ;==>GetGlobalConfig
0000000390   Func ManageLogFile()
0000000404   EndFunc   ;==>ManageLogFile
0000000406   Func ReadGlobalConfig()
0000000421   EndFunc   ;==>ReadGlobalConfig
0000000423   Func ReadLocalConfig()
0000000429   EndFunc   ;==>ReadLocalConfig
0000000431   Func SetVar(ByRef $Var, $Value)
0000000434   EndFunc   ;==>SetVar
0000000436   Func Timeout(ByRef $Timer, $Delay)
0000000443   EndFunc   ;==>Timeout
0000000445   Func WriteLogStartup()
0000000518   EndFunc   ;==>WriteLogStartup
0000000519   #EndRegion
0000000520   #Region CheckAndRunProc
0000000521   Func Check()
0000000527   EndFunc   ;==>Check
0000000529   Func CheckAndRunProc($Name, $Dir, $Path, $Exists, $ShowFlag = @SW_HIDE)
0000000535   EndFunc   ;==>CheckAndRunProc
0000000537   Func CheckAndRunProcAs($Name, $Dir, $Path, $Exists, $UserName, $Domain, $Password)
0000000542   EndFunc   ;==>CheckAndRunProcAs
0000000543   #EndRegion CheckAndRunProc
0000000544   #Region CleaningDownloads
0000000545   Func CleaningDownloads()
0000000563   EndFunc   ;==>CleaningDownloads
0000000565   Func DownloadsNeedCleaning()
0000000567   EndFunc   ;==>DownloadsNeedCleaning
0000000568   Func FileDirMoveRec($SourceDir, $DestDir)
0000000579   EndFunc   ;==>FileDirMoveRec
0000000581   Func GetDownloadsLastCleaningDate()
0000000583   EndFunc   ;==>GetDownloadsLastCleaningDate
0000000584   #EndRegion CleaningDownloads
0000000585   #Region FreeSpaceCheck
0000000586   Func ByteSuffix($iBytes)
0000000593   EndFunc   ;==>ByteSuffix
0000000595   Func CheckHomeDriveSpaceFree()
0000000613   EndFunc   ;==>CheckHomeDriveSpaceFree
0000000615   Func SendMailLowSpace($sToAddress, $iFreeSpacePerc, $sLabel, $iFreeSpace, $iTotalSpace)
0000000641   EndFunc   ;==>SendMailLowSpace
0000000642   #EndRegion FreeSpaceCheck
0000000643   #Region WMI Exporter
0000000644   Func Scrape()
0000000649   EndFunc   ;==>Scrape
0000000651   Func ScrapeDownload()
0000000665   EndFunc   ;==>ScrapeDownload
0000000667   Func SetupWmiExporter()
0000000677   EndFunc   ;==>SetupWmiExporter
0000000679   Func WriteMetaDataFile()
0000000693   EndFunc   ;==>WriteMetaDataFile
0000000694   #EndRegion WMI Exporter
0000000695   #Region UDF
0000000698   Func _ArrayCompare(Const ByRef $aArray1, Const ByRef $aArray2, $iMode = 0)
0000000763   EndFunc   ;==>_ArrayCompare
0000000764   #EndRegion UDF
== END Sort Func Names Within #Region - #EndRegion =====================================================

